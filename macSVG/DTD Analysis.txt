Generated from dictionaries in SVGDTDData

=====================================================================================

Printing description of self->entitiesDictionary:
{
    a =     {
        value = a;
    };
    altGlyph =     {
        value = altGlyph;
    };
    altGlyphDef =     {
        value = altGlyphDef;
    };
    altGlyphItem =     {
        value = altGlyphItem;
    };
    animate =     {
        value = animate;
    };
    animateColor =     {
        value = animateColor;
    };
    animateMotion =     {
        value = animateMotion;
    };
    animateTransform =     {
        value = animateTransform;
    };
    circle =     {
        value = circle;
    };
    clipPath =     {
        value = clipPath;
    };
    "color-profile" =     {
        value = "color-profile";
    };
    cursor =     {
        value = cursor;
    };
    defs =     {
        value = defs;
    };
    desc =     {
        value = desc;
    };
    ellipse =     {
        value = ellipse;
    };
    feBlend =     {
        value = feBlend;
    };
    feColorMatrix =     {
        value = feColorMatrix;
    };
    feComponentTransfer =     {
        value = feComponentTransfer;
    };
    feComposite =     {
        value = feComposite;
    };
    feConvolveMatrix =     {
        value = feConvolveMatrix;
    };
    feDiffuseLighting =     {
        value = feDiffuseLighting;
    };
    feDisplacementMap =     {
        value = feDisplacementMap;
    };
    feDistantLight =     {
        value = feDistantLight;
    };
    feFlood =     {
        value = feFlood;
    };
    feFuncA =     {
        value = feFuncA;
    };
    feFuncB =     {
        value = feFuncB;
    };
    feFuncG =     {
        value = feFuncG;
    };
    feFuncR =     {
        value = feFuncR;
    };
    feGaussianBlur =     {
        value = feGaussianBlur;
    };
    feImage =     {
        value = feImage;
    };
    feMerge =     {
        value = feMerge;
    };
    feMergeNode =     {
        value = feMergeNode;
    };
    feMorphology =     {
        value = feMorphology;
    };
    feOffset =     {
        value = feOffset;
    };
    fePointLight =     {
        value = fePointLight;
    };
    feSpecularLighting =     {
        value = feSpecularLighting;
    };
    feSpotLight =     {
        value = feSpotLight;
    };
    feTile =     {
        value = feTile;
    };
    feTurbulence =     {
        value = feTurbulence;
    };
    filter =     {
        value = filter;
    };
    font =     {
        value = font;
    };
    "font-face" =     {
        value = "font-face";
    };
    "font-face-format" =     {
        value = "font-face-format";
    };
    "font-face-name" =     {
        value = "font-face-name";
    };
    "font-face-src" =     {
        value = "font-face-src";
    };
    "font-face-uri" =     {
        value = "font-face-uri";
    };
    foreignObject =     {
        value = foreignObject;
    };
    g =     {
        value = g;
    };
    glyph =     {
        value = glyph;
    };
    glyphRef =     {
        value = glyphRef;
    };
    hkern =     {
        value = hkern;
    };
    image =     {
        value = image;
    };
    line =     {
        value = line;
    };
    linearGradient =     {
        value = linearGradient;
    };
    marker =     {
        value = marker;
    };
    mask =     {
        value = mask;
    };
    metadata =     {
        value = metadata;
    };
    "missing-glyph" =     {
        value = "missing-glyph";
    };
    mpath =     {
        value = mpath;
    };
    path =     {
        value = path;
    };
    pattern =     {
        value = pattern;
    };
    polygon =     {
        value = polygon;
    };
    polyline =     {
        value = polyline;
    };
    radialGradient =     {
        value = radialGradient;
    };
    rect =     {
        value = rect;
    };
    script =     {
        value = script;
    };
    set =     {
        value = set;
    };
    stop =     {
        value = stop;
    };
    style =     {
        value = style;
    };
    svg =     {
        value = svg;
    };
    switch =     {
        value = switch;
    };
    symbol =     {
        value = symbol;
    };
    text =     {
        value = text;
    };
    textPath =     {
        value = textPath;
    };
    title =     {
        value = title;
    };
    tref =     {
        value = tref;
    };
    tspan =     {
        value = tspan;
    };
    use =     {
        value = use;
    };
    view =     {
        value = view;
    };
    vkern =     {
        value = vkern;
    };
}

=====================================================================================

Printing description of self->classesDictionary:
{
    Animation =     {
        "class-elements" =         {
            animate = animate;
            animateColor = animateColor;
            animateMotion = animateMotion;
            animateTransform = animateTransform;
            set = set;
        };
        value = "animate | set | animateMotion |\n     animateColor | animateTransform\n     ";
    };
    Clip =     {
        "class-elements" =         {
            clipPath = clipPath;
        };
        value = "| clipPath ";
    };
    ColorProfile =     {
        "class-elements" =         {
            "color-profile" = "color-profile";
        };
        value = "| color-profile ";
    };
    Conditional =     {
        "class-elements" =         {
            switch = switch;
        };
        value = "| switch ";
    };
    Cursor =     {
        "class-elements" =         {
            cursor = cursor;
        };
        value = "| cursor ";
    };
    Description =     {
        "class-elements" =         {
            desc = desc;
            metadata = metadata;
            title = title;
        };
        value = "desc | title | metadata\n     ";
    };
    Extensibility =     {
        "class-elements" =         {
            foreignObject = foreignObject;
        };
        value = "| foreignObject ";
    };
    Filter =     {
        "class-elements" =         {
            filter = filter;
        };
        value = "| filter ";
    };
    FilterPrimitive =     {
        "class-elements" =         {
            feBlend = feBlend;
            feColorMatrix = feColorMatrix;
            feComponentTransfer = feComponentTransfer;
            feComposite = feComposite;
            feConvolveMatrix = feConvolveMatrix;
            feDiffuseLighting = feDiffuseLighting;
            feDisplacementMap = feDisplacementMap;
            feFlood = feFlood;
            feGaussianBlur = feGaussianBlur;
            feImage = feImage;
            feMerge = feMerge;
            feMorphology = feMorphology;
            feOffset = feOffset;
            feSpecularLighting = feSpecularLighting;
            feTile = feTile;
            feTurbulence = feTurbulence;
        };
        value = "| feBlend | feColorMatrix\n     | feComponentTransfer | feComposite\n     | feConvolveMatrix | feDiffuseLighting\n     | feDisplacementMap | feFlood\n     | feGaussianBlur | feImage | feMerge\n     | feMorphology | feOffset\n     | feSpecularLighting | feTile\n     | feTurbulence ";
    };
    Font =     {
        "class-elements" =         {
            font = font;
            "font-face" = "font-face";
        };
        value = "| font | font-face ";
    };
    Gradient =     {
        "class-elements" =         {
            linearGradient = linearGradient;
            radialGradient = radialGradient;
        };
        value = "| linearGradient | radialGradient\n       ";
    };
    Hyperlink =     {
        "class-elements" =         {
            a = a;
        };
        value = "| a ";
    };
    Image =     {
        "class-elements" =         {
            image = image;
        };
        value = "| image ";
    };
    Marker =     {
        "class-elements" =         {
            marker = marker;
        };
        value = "| marker ";
    };
    Mask =     {
        "class-elements" =         {
            mask = mask;
        };
        value = "| mask ";
    };
    Pattern =     {
        "class-elements" =         {
            pattern = pattern;
        };
        value = "| pattern ";
    };
    Script =     {
        "class-elements" =         {
            script = script;
        };
        value = "| script ";
    };
    Shape =     {
        "class-elements" =         {
            circle = circle;
            ellipse = ellipse;
            line = line;
            path = path;
            polygon = polygon;
            polyline = polyline;
            rect = rect;
        };
        value = "| path | rect | circle\n     | line | ellipse | polyline\n     | polygon ";
    };
    Structure =     {
        "class-elements" =         {
            defs = defs;
            g = g;
            svg = svg;
            symbol = symbol;
            use = use;
        };
        value = "| svg | g | defs | symbol\n       | use  ";
    };
    Style =     {
        "class-elements" =         {
            style = style;
        };
        value = "| style ";
    };
    Text =     {
        "class-elements" =         {
            altGlyphDef = altGlyphDef;
            text = text;
        };
        value = "| text | altGlyphDef ";
    };
    TextContent =     {
        "class-elements" =         {
            altGlyph = altGlyph;
            textPath = textPath;
            tref = tref;
            tspan = tspan;
        };
        value = "| tspan | tref | textPath\n     | altGlyph ";
    };
    Use =     {
        "class-elements" =         {
            use = use;
        };
        value = "| use ";
    };
    View =     {
        "class-elements" =         {
            view = view;
        };
        value = "| view ";
    };
}

=====================================================================================


Printing description of self->attribsDictionary:
{
    Animation =     {
        value = "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'\n     xlink:type ( simple ) #FIXED 'simple'\n     xlink:href CDATA #IMPLIED\n     xlink:role CDATA #IMPLIED\n     xlink:arcrole CDATA #IMPLIED\n     xlink:title CDATA #IMPLIED\n     xlink:show ( other ) 'other'\n     xlink:actuate ( onLoad ) #FIXED 'onLoad'\n     \n     ";
    };
    AnimationAddtion =     {
        value = "additive ( replace | sum ) 'replace'\n     accumulate ( none | sum ) 'none'\n     ";
    };
    AnimationAttribute =     {
        value = "attributeName  CDATA  #REQUIRED\n     attributeType  CDATA  #IMPLIED\n     ";
    };
    AnimationEvents =     {
        value = "onbegin CDATA #IMPLIED\n     onend CDATA #IMPLIED\n     onrepeat CDATA #IMPLIED\n     onload CDATA #IMPLIED\n     ";
    };
    AnimationTiming =     {
        value = "begin CDATA #IMPLIED\n     dur CDATA #IMPLIED\n     end CDATA #IMPLIED\n     min CDATA #IMPLIED\n     max CDATA #IMPLIED\n     restart ( always | never | whenNotActive ) 'always'\n     repeatCount CDATA #IMPLIED\n     repeatDur CDATA #IMPLIED\n     fill ( remove | freeze ) 'remove'\n     ";
    };
    AnimationValue =     {
        value = "calcMode ( discrete | linear | paced | spline ) 'linear'\n     values CDATA #IMPLIED\n     keyTimes CDATA #IMPLIED\n     keySplines CDATA #IMPLIED\n     from CDATA #IMPLIED\n     to CDATA #IMPLIED\n     by CDATA #IMPLIED\n     ";
    };
    Clip =     {
        value = "clip-path CDATA #IMPLIED\n     clip-rule ( nonzero | evenodd | inherit ) #IMPLIED\n     ";
    };
    Color =     {
        value = "color CDATA #IMPLIED\n     color-interpolation ( auto | sRGB | linearRGB | inherit ) #IMPLIED\n     color-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )\n                       #IMPLIED\n     ";
    };
    ColorProfile =     {
        value = "color-profile CDATA #IMPLIED\n     ";
    };
    Conditional =     {
        value = "requiredFeatures CDATA #IMPLIED\n     requiredExtensions CDATA #IMPLIED\n     systemLanguage CDATA #IMPLIED\n     ";
    };
    Container =     {
        value = "enable-background CDATA #IMPLIED\n     ";
    };
    Core =     {
        value = "id ID #IMPLIED\n     xml:base CDATA #IMPLIED\n     xml:lang NMTOKEN #IMPLIED\n     xml:space ( default | preserve ) #IMPLIED\n     ";
    };
    Cursor =     {
        value = "cursor CDATA #IMPLIED\n     ";
    };
    DocumentEvents =     {
        value = "onunload CDATA #IMPLIED\n     onabort CDATA #IMPLIED\n     onerror CDATA #IMPLIED\n     onresize CDATA #IMPLIED\n     onscroll CDATA #IMPLIED\n     onzoom CDATA #IMPLIED\n     ";
    };
    External =     {
        value = "externalResourcesRequired ( false | true ) #IMPLIED\n     ";
    };
    Filter =     {
        value = "filter CDATA #IMPLIED\n     ";
    };
    FilterColor =     {
        value = "color-interpolation-filters ( auto | sRGB | linearRGB | inherit )\n                                   #IMPLIED\n     ";
    };
    FilterPrimitive =     {
        value = "x CDATA #IMPLIED\n     y CDATA #IMPLIED\n     width CDATA #IMPLIED\n     height CDATA #IMPLIED\n     result CDATA #IMPLIED\n     ";
    };
    FilterPrimitiveWithIn =     {
        value = "x CDATA #IMPLIED\n     y CDATA #IMPLIED\n     width CDATA #IMPLIED\n     height CDATA #IMPLIED\n     result CDATA #IMPLIED\n     \n     in CDATA #IMPLIED\n     ";
    };
    Font =     {
        value = "font-family CDATA #IMPLIED\n     font-size CDATA #IMPLIED\n     font-size-adjust CDATA #IMPLIED\n     font-stretch ( normal | wider | narrower | ultra-condensed |\n                    extra-condensed | condensed | semi-condensed |\n                    semi-expanded | expanded | extra-expanded |\n                    ultra-expanded | inherit ) #IMPLIED\n     font-style ( normal | italic | oblique | inherit ) #IMPLIED\n     font-variant ( normal | small-caps | inherit ) #IMPLIED\n     font-weight ( normal | bold | bolder | lighter | 100 | 200 | 300 | 400 |\n                   500 | 600 | 700 | 800 | 900 | inherit ) #IMPLIED\n     ";
    };
    Gradient =     {
        value = "stop-color CDATA #IMPLIED\n     stop-opacity CDATA #IMPLIED\n     ";
    };
    GraphicalEvents =     {
        value = "onfocusin CDATA #IMPLIED\n     onfocusout CDATA #IMPLIED\n     onactivate CDATA #IMPLIED\n     onclick CDATA #IMPLIED\n     onmousedown CDATA #IMPLIED\n     onmouseup CDATA #IMPLIED\n     onmouseover CDATA #IMPLIED\n     onmousemove CDATA #IMPLIED\n     onmouseout CDATA #IMPLIED\n     onload CDATA #IMPLIED\n     ";
    };
    Graphics =     {
        value = "display ( inline | block | list-item | run-in | compact | marker |\n               table | inline-table | table-row-group | table-header-group |\n               table-footer-group | table-row | table-column-group |\n               table-column | table-cell | table-caption | none | inherit )\n               #IMPLIED\n     image-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )\n                       #IMPLIED\n     pointer-events ( visiblePainted | visibleFill | visibleStroke | visible |\n                      painted | fill | stroke | all | none | inherit )\n                      #IMPLIED\n     shape-rendering ( auto | optimizeSpeed | crispEdges | geometricPrecision |\n                       inherit ) #IMPLIED\n     text-rendering ( auto | optimizeSpeed | optimizeLegibility |\n                      geometricPrecision | inherit ) #IMPLIED\n     visibility ( visible | hidden | inherit ) #IMPLIED\n     ";
    };
    Marker =     {
        value = "marker-start CDATA #IMPLIED\n     marker-mid CDATA #IMPLIED\n     marker-end CDATA #IMPLIED\n     ";
    };
    Mask =     {
        value = "mask CDATA #IMPLIED\n     ";
    };
    Opacity =     {
        value = "opacity CDATA #IMPLIED\n     fill-opacity CDATA #IMPLIED\n     stroke-opacity CDATA #IMPLIED\n     ";
    };
    Paint =     {
        value = "fill CDATA #IMPLIED\n     fill-rule ( nonzero | evenodd | inherit ) #IMPLIED\n     stroke CDATA #IMPLIED\n     stroke-dasharray CDATA #IMPLIED\n     stroke-dashoffset CDATA #IMPLIED\n     stroke-linecap ( butt | round | square | inherit ) #IMPLIED\n     stroke-linejoin ( miter | round | bevel | inherit ) #IMPLIED\n     stroke-miterlimit CDATA #IMPLIED\n     stroke-width CDATA #IMPLIED\n     ";
    };
    Presentation =     {
        value = "enable-background CDATA #IMPLIED\n     \n     clip CDATA #IMPLIED\n     overflow ( visible | hidden | scroll | auto | inherit ) #IMPLIED\n     \n     writing-mode ( lr-tb | rl-tb | tb-rl | lr | rl | tb | inherit ) #IMPLIED\n     \n     alignment-baseline ( auto | baseline | before-edge | text-before-edge |\n                          middle | central | after-edge | text-after-edge |\n                          ideographic | alphabetic | hanging | mathematical |\n                          inherit ) #IMPLIED\n     baseline-shift CDATA #IMPLIED\n     direction ( ltr | rtl | inherit ) #IMPLIED\n     dominant-baseline ( auto | use-script | no-change | reset-size |\n                         ideographic | alphabetic | hanging | mathematical |\n                         central | middle | text-after-edge | text-before-edge |\n                         inherit ) #IMPLIED\n     glyph-orientation-horizontal CDATA\n                                  #IMPLIED\n     glyph-orientation-vertical CDATA\n                                #IMPLIED\n     kerning CDATA #IMPLIED\n     letter-spacing CDATA #IMPLIED\n     text-anchor ( start | middle | end | inherit ) #IMPLIED\n     text-decoration CDATA #IMPLIED\n     unicode-bidi ( normal | embed | bidi-override | inherit ) #IMPLIED\n     word-spacing CDATA #IMPLIED\n     \n     font-family CDATA #IMPLIED\n     font-size CDATA #IMPLIED\n     font-size-adjust CDATA #IMPLIED\n     font-stretch ( normal | wider | narrower | ultra-condensed |\n                    extra-condensed | condensed | semi-condensed |\n                    semi-expanded | expanded | extra-expanded |\n                    ultra-expanded | inherit ) #IMPLIED\n     font-style ( normal | italic | oblique | inherit ) #IMPLIED\n     font-variant ( normal | small-caps | inherit ) #IMPLIED\n     font-weight ( normal | bold | bolder | lighter | 100 | 200 | 300 | 400 |\n                   500 | 600 | 700 | 800 | 900 | inherit ) #IMPLIED\n     \n     fill CDATA #IMPLIED\n     fill-rule ( nonzero | evenodd | inherit ) #IMPLIED\n     stroke CDATA #IMPLIED\n     stroke-dasharray CDATA #IMPLIED\n     stroke-dashoffset CDATA #IMPLIED\n     stroke-linecap ( butt | round | square | inherit ) #IMPLIED\n     stroke-linejoin ( miter | round | bevel | inherit ) #IMPLIED\n     stroke-miterlimit CDATA #IMPLIED\n     stroke-width CDATA #IMPLIED\n     \n     color CDATA #IMPLIED\n     color-interpolation ( auto | sRGB | linearRGB | inherit ) #IMPLIED\n     color-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )\n                       #IMPLIED\n     \n     opacity CDATA #IMPLIED\n     fill-opacity CDATA #IMPLIED\n     stroke-opacity CDATA #IMPLIED\n     \n     display ( inline | block | list-item | run-in | compact | marker |\n               table | inline-table | table-row-group | table-header-group |\n               table-footer-group | table-row | table-column-group |\n               table-column | table-cell | table-caption | none | inherit )\n               #IMPLIED\n     image-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )\n                       #IMPLIED\n     pointer-events ( visiblePainted | visibleFill | visibleStroke | visible |\n                      painted | fill | stroke | all | none | inherit )\n                      #IMPLIED\n     shape-rendering ( auto | optimizeSpeed | crispEdges | geometricPrecision |\n                       inherit ) #IMPLIED\n     text-rendering ( auto | optimizeSpeed | optimizeLegibility |\n                      geometricPrecision | inherit ) #IMPLIED\n     visibility ( visible | hidden | inherit ) #IMPLIED\n     \n     marker-start CDATA #IMPLIED\n     marker-mid CDATA #IMPLIED\n     marker-end CDATA #IMPLIED\n     \n     color-profile CDATA #IMPLIED\n     \n     stop-color CDATA #IMPLIED\n     stop-opacity CDATA #IMPLIED\n     \n     clip-path CDATA #IMPLIED\n     clip-rule ( nonzero | evenodd | inherit ) #IMPLIED\n     \n     mask CDATA #IMPLIED\n     \n     filter CDATA #IMPLIED\n     \n     color-interpolation-filters ( auto | sRGB | linearRGB | inherit )\n                                   #IMPLIED\n     \n     cursor CDATA #IMPLIED\n     \n     flood-color CDATA #IMPLIED\n     flood-opacity CDATA #IMPLIED\n     lighting-color CDATA #IMPLIED\n     ";
    };
    Style =     {
        value = "style CDATA #IMPLIED\n     class CDATA #IMPLIED\n     ";
    };
    Text =     {
        value = "writing-mode ( lr-tb | rl-tb | tb-rl | lr | rl | tb | inherit ) #IMPLIED\n     ";
    };
    TextContent =     {
        value = "alignment-baseline ( auto | baseline | before-edge | text-before-edge |\n                          middle | central | after-edge | text-after-edge |\n                          ideographic | alphabetic | hanging | mathematical |\n                          inherit ) #IMPLIED\n     baseline-shift CDATA #IMPLIED\n     direction ( ltr | rtl | inherit ) #IMPLIED\n     dominant-baseline ( auto | use-script | no-change | reset-size |\n                         ideographic | alphabetic | hanging | mathematical |\n                         central | middle | text-after-edge | text-before-edge |\n                         inherit ) #IMPLIED\n     glyph-orientation-horizontal CDATA\n                                  #IMPLIED\n     glyph-orientation-vertical CDATA\n                                #IMPLIED\n     kerning CDATA #IMPLIED\n     letter-spacing CDATA #IMPLIED\n     text-anchor ( start | middle | end | inherit ) #IMPLIED\n     text-decoration CDATA #IMPLIED\n     unicode-bidi ( normal | embed | bidi-override | inherit ) #IMPLIED\n     word-spacing CDATA #IMPLIED\n     ";
    };
    Viewport =     {
        value = "clip CDATA #IMPLIED\n     overflow ( visible | hidden | scroll | auto | inherit ) #IMPLIED\n     ";
    };
    XLink =     {
        value = "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'\n     xlink:type ( simple ) #FIXED 'simple'\n     xlink:href CDATA #IMPLIED\n     xlink:role CDATA #IMPLIED\n     xlink:arcrole CDATA #IMPLIED\n     xlink:title CDATA #IMPLIED\n     xlink:show ( other ) 'other'\n     xlink:actuate ( onLoad ) #FIXED 'onLoad'\n     ";
    };
    XLinkEmbed =     {
        value = "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'\n     xlink:type ( simple ) #FIXED 'simple'\n     xlink:href CDATA #REQUIRED\n     xlink:role CDATA #IMPLIED\n     xlink:arcrole CDATA #IMPLIED\n     xlink:title CDATA #IMPLIED\n     xlink:show ( embed ) 'embed'\n     xlink:actuate ( onLoad ) #FIXED 'onLoad'\n     ";
    };
    XLinkReplace =     {
        value = "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'\n     xlink:type ( simple ) #FIXED 'simple'\n     xlink:href CDATA #REQUIRED\n     xlink:role CDATA #IMPLIED\n     xlink:arcrole CDATA #IMPLIED\n     xlink:title CDATA #IMPLIED\n     xlink:show ( new | replace ) 'replace'\n     xlink:actuate ( onRequest ) #FIXED 'onRequest'\n     ";
    };
    XLinkRequired =     {
        value = "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'\n     xlink:type ( simple ) #FIXED 'simple'\n     xlink:href CDATA #REQUIRED\n     xlink:role CDATA #IMPLIED\n     xlink:arcrole CDATA #IMPLIED\n     xlink:title CDATA #IMPLIED\n     xlink:show ( other ) 'other'\n     xlink:actuate ( onLoad ) #FIXED 'onLoad'\n     ";
    };
    base =     {
        value = "xml:base CDATA #IMPLIED";
    };
    clip =     {
        value = "clip CDATA #IMPLIED";
    };
    color =     {
        value = "color CDATA #IMPLIED";
    };
    "color-interpolation" =     {
        value = "color-interpolation ( auto | sRGB | linearRGB | inherit ) #IMPLIED";
    };
    "color-rendering" =     {
        value = "color-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )\n                       #IMPLIED";
    };
    display =     {
        value = "display ( inline | block | list-item | run-in | compact | marker |\n               table | inline-table | table-row-group | table-header-group |\n               table-footer-group | table-row | table-column-group |\n               table-column | table-cell | table-caption | none | inherit )\n               #IMPLIED";
    };
    "enable-background" =     {
        value = "enable-background CDATA #IMPLIED";
    };
    externalResourcesRequired =     {
        value = "externalResourcesRequired ( false | true ) #IMPLIED";
    };
    fill =     {
        value = "fill CDATA #IMPLIED";
    };
    "fill-opacity" =     {
        value = "fill-opacity CDATA #IMPLIED";
    };
    "fill-rule" =     {
        value = "fill-rule ( nonzero | evenodd | inherit ) #IMPLIED";
    };
    id =     {
        value = "id ID #IMPLIED";
    };
    "image-rendering" =     {
        value = "image-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )\n                       #IMPLIED";
    };
    lang =     {
        value = "xml:lang NMTOKEN #IMPLIED";
    };
    onabort =     {
        value = "onabort CDATA #IMPLIED";
    };
    onactivate =     {
        value = "onactivate CDATA #IMPLIED";
    };
    onbegin =     {
        value = "onbegin CDATA #IMPLIED";
    };
    onclick =     {
        value = "onclick CDATA #IMPLIED";
    };
    onend =     {
        value = "onend CDATA #IMPLIED";
    };
    onerror =     {
        value = "onerror CDATA #IMPLIED";
    };
    onfocusin =     {
        value = "onfocusin CDATA #IMPLIED";
    };
    onfocusout =     {
        value = "onfocusout CDATA #IMPLIED";
    };
    onload =     {
        value = "onload CDATA #IMPLIED";
    };
    onmousedown =     {
        value = "onmousedown CDATA #IMPLIED";
    };
    onmousemove =     {
        value = "onmousemove CDATA #IMPLIED";
    };
    onmouseout =     {
        value = "onmouseout CDATA #IMPLIED";
    };
    onmouseover =     {
        value = "onmouseover CDATA #IMPLIED";
    };
    onmouseup =     {
        value = "onmouseup CDATA #IMPLIED";
    };
    onrepeat =     {
        value = "onrepeat CDATA #IMPLIED";
    };
    onresize =     {
        value = "onresize CDATA #IMPLIED";
    };
    onscroll =     {
        value = "onscroll CDATA #IMPLIED";
    };
    onunload =     {
        value = "onunload CDATA #IMPLIED";
    };
    onzoom =     {
        value = "onzoom CDATA #IMPLIED";
    };
    opacity =     {
        value = "opacity CDATA #IMPLIED";
    };
    overflow =     {
        value = "overflow ( visible | hidden | scroll | auto | inherit ) #IMPLIED";
    };
    "pointer-events" =     {
        value = "pointer-events ( visiblePainted | visibleFill | visibleStroke | visible |\n                      painted | fill | stroke | all | none | inherit )\n                      #IMPLIED";
    };
    "shape-rendering" =     {
        value = "shape-rendering ( auto | optimizeSpeed | crispEdges | geometricPrecision |\n                       inherit ) #IMPLIED";
    };
    space =     {
        value = "xml:space ( default | preserve ) #IMPLIED";
    };
    stroke =     {
        value = "stroke CDATA #IMPLIED";
    };
    "stroke-dasharray" =     {
        value = "stroke-dasharray CDATA #IMPLIED";
    };
    "stroke-dashoffset" =     {
        value = "stroke-dashoffset CDATA #IMPLIED";
    };
    "stroke-linecap" =     {
        value = "stroke-linecap ( butt | round | square | inherit ) #IMPLIED";
    };
    "stroke-linejoin" =     {
        value = "stroke-linejoin ( miter | round | bevel | inherit ) #IMPLIED";
    };
    "stroke-miterlimit" =     {
        value = "stroke-miterlimit CDATA #IMPLIED";
    };
    "stroke-opacity" =     {
        value = "stroke-opacity CDATA #IMPLIED";
    };
    "stroke-width" =     {
        value = "stroke-width CDATA #IMPLIED";
    };
    "text-rendering" =     {
        value = "text-rendering ( auto | optimizeSpeed | optimizeLegibility |\n                      geometricPrecision | inherit ) #IMPLIED";
    };
    visibility =     {
        value = "visibility ( visible | hidden | inherit ) #IMPLIED";
    };
    xmlns =     {
        value = "xmlns CDATA #FIXED 'http://www.w3.org/2000/svg'\n      xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'";
    };
}

=====================================================================================


Printing description of self->attlistDictionary:
{
    a =     {
        value = INCLUDE;
    };
    altGlyph =     {
        value = INCLUDE;
    };
    altGlyphDef =     {
        value = INCLUDE;
    };
    altGlyphItem =     {
        value = INCLUDE;
    };
    animate =     {
        value = INCLUDE;
    };
    animateColor =     {
        value = INCLUDE;
    };
    animateMotion =     {
        value = INCLUDE;
    };
    animateTransform =     {
        value = INCLUDE;
    };
    circle =     {
        value = INCLUDE;
    };
    clipPath =     {
        value = INCLUDE;
    };
    "color-profile" =     {
        value = INCLUDE;
    };
    cursor =     {
        value = INCLUDE;
    };
    defs =     {
        value = INCLUDE;
    };
    desc =     {
        value = INCLUDE;
    };
    ellipse =     {
        value = INCLUDE;
    };
    feBlend =     {
        value = INCLUDE;
    };
    feColorMatrix =     {
        value = INCLUDE;
    };
    feComponentTransfer =     {
        value = INCLUDE;
    };
    feComposite =     {
        value = INCLUDE;
    };
    feConvolveMatrix =     {
        value = INCLUDE;
    };
    feDiffuseLighting =     {
        value = INCLUDE;
    };
    feDisplacementMap =     {
        value = INCLUDE;
    };
    feDistantLight =     {
        value = INCLUDE;
    };
    feFlood =     {
        value = INCLUDE;
    };
    feFuncA =     {
        value = INCLUDE;
    };
    feFuncB =     {
        value = INCLUDE;
    };
    feFuncG =     {
        value = INCLUDE;
    };
    feFuncR =     {
        value = INCLUDE;
    };
    feGaussianBlur =     {
        value = INCLUDE;
    };
    feImage =     {
        value = INCLUDE;
    };
    feMerge =     {
        value = INCLUDE;
    };
    feMergeNode =     {
        value = INCLUDE;
    };
    feMorphology =     {
        value = INCLUDE;
    };
    feOffset =     {
        value = INCLUDE;
    };
    fePointLight =     {
        value = INCLUDE;
    };
    feSpecularLighting =     {
        value = INCLUDE;
    };
    feSpotLight =     {
        value = INCLUDE;
    };
    feTile =     {
        value = INCLUDE;
    };
    feTurbulence =     {
        value = INCLUDE;
    };
    filter =     {
        value = INCLUDE;
    };
    font =     {
        value = INCLUDE;
    };
    "font-face" =     {
        value = INCLUDE;
    };
    "font-face-format" =     {
        value = INCLUDE;
    };
    "font-face-name" =     {
        value = INCLUDE;
    };
    "font-face-src" =     {
        value = INCLUDE;
    };
    "font-face-uri" =     {
        value = INCLUDE;
    };
    foreignObject =     {
        value = INCLUDE;
    };
    g =     {
        value = INCLUDE;
    };
    glyph =     {
        value = INCLUDE;
    };
    glyphRef =     {
        value = INCLUDE;
    };
    hkern =     {
        value = INCLUDE;
    };
    image =     {
        value = INCLUDE;
    };
    line =     {
        value = INCLUDE;
    };
    linearGradient =     {
        value = INCLUDE;
    };
    marker =     {
        value = INCLUDE;
    };
    mask =     {
        value = INCLUDE;
    };
    metadata =     {
        value = INCLUDE;
    };
    "missing-glyph" =     {
        value = INCLUDE;
    };
    mpath =     {
        value = INCLUDE;
    };
    path =     {
        value = INCLUDE;
    };
    pattern =     {
        value = INCLUDE;
    };
    polygon =     {
        value = INCLUDE;
    };
    polyline =     {
        value = INCLUDE;
    };
    radialGradient =     {
        value = INCLUDE;
    };
    rect =     {
        value = INCLUDE;
    };
    script =     {
        value = INCLUDE;
    };
    set =     {
        value = INCLUDE;
    };
    stop =     {
        value = INCLUDE;
    };
    style =     {
        value = INCLUDE;
    };
    svg =     {
        value = INCLUDE;
    };
    switch =     {
        value = INCLUDE;
    };
    symbol =     {
        value = INCLUDE;
    };
    text =     {
        value = INCLUDE;
    };
    textPath =     {
        value = INCLUDE;
    };
    title =     {
        value = INCLUDE;
    };
    tref =     {
        value = INCLUDE;
    };
    tspan =     {
        value = INCLUDE;
    };
    use =     {
        value = INCLUDE;
    };
    view =     {
        value = INCLUDE;
    };
    vkern =     {
        value = INCLUDE;
    };
}

=====================================================================================


Printing description of self->datatypesDictionary:
{
    BaselineShiftValue =     {
        value = CDATA;
    };
    Boolean =     {
        value = "( false | true )";
    };
    ClassList =     {
        value = CDATA;
    };
    ClipFillRule =     {
        value = "( nonzero | evenodd | inherit )";
    };
    ClipPathValue =     {
        value = CDATA;
    };
    ClipValue =     {
        value = CDATA;
    };
    Color =     {
        value = CDATA;
    };
    ContentType =     {
        value = CDATA;
    };
    Coordinate =     {
        value = CDATA;
    };
    Coordinates =     {
        value = CDATA;
    };
    CursorValue =     {
        value = CDATA;
    };
    EnableBackgroundValue =     {
        value = CDATA;
    };
    ExtensionList =     {
        value = CDATA;
    };
    FeatureList =     {
        value = CDATA;
    };
    FilterValue =     {
        value = CDATA;
    };
    FontFamilyValue =     {
        value = CDATA;
    };
    FontSizeAdjustValue =     {
        value = CDATA;
    };
    FontSizeValue =     {
        value = CDATA;
    };
    GlyphOrientationHorizontalValue =     {
        value = CDATA;
    };
    GlyphOrientationVerticalValue =     {
        value = CDATA;
    };
    Integer =     {
        value = CDATA;
    };
    KerningValue =     {
        value = CDATA;
    };
    LanguageCode =     {
        value = NMTOKEN;
    };
    LanguageCodes =     {
        value = CDATA;
    };
    Length =     {
        value = CDATA;
    };
    Lengths =     {
        value = CDATA;
    };
    LinkTarget =     {
        value = NMTOKEN;
    };
    MarkerValue =     {
        value = CDATA;
    };
    MaskValue =     {
        value = CDATA;
    };
    MediaDesc =     {
        value = CDATA;
    };
    Number =     {
        value = CDATA;
    };
    NumberOptionalNumber =     {
        value = CDATA;
    };
    NumberOrPercentage =     {
        value = CDATA;
    };
    Numbers =     {
        value = CDATA;
    };
    OpacityValue =     {
        value = CDATA;
    };
    Paint =     {
        value = CDATA;
    };
    PathData =     {
        value = CDATA;
    };
    Points =     {
        value = CDATA;
    };
    PreserveAspectRatioSpec =     {
        value = CDATA;
    };
    SVGColor =     {
        value = CDATA;
    };
    Script =     {
        value = CDATA;
    };
    SpacingValue =     {
        value = CDATA;
    };
    StrokeDashArrayValue =     {
        value = CDATA;
    };
    StrokeDashOffsetValue =     {
        value = CDATA;
    };
    StrokeMiterLimitValue =     {
        value = CDATA;
    };
    StrokeWidthValue =     {
        value = CDATA;
    };
    StyleSheet =     {
        value = CDATA;
    };
    Text =     {
        value = CDATA;
    };
    TextDecorationValue =     {
        value = CDATA;
    };
    TransformList =     {
        value = CDATA;
    };
    URI =     {
        value = CDATA;
    };
    ViewBoxSpec =     {
        value = CDATA;
    };
}

=====================================================================================


Printing description of self->elementsDictionary:
{
    a =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = a;
                xml = "<!ATTLIST a id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a systemLanguage CDATA #IMPLIED>";
            };
            target =             {
                "attribute_name" = target;
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = a;
                xml = "<!ATTLIST a target NMTOKEN #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onRequest
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onRequest\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a xlink:actuate (onRequest) #FIXED \"onRequest\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a xlink:href CDATA #REQUIRED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    new,
                    replace
                );
                "default_value" =                 (
                    "\"replace\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a xlink:show (new|replace) \"replace\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = a;
                xml = "<!ATTLIST a xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = a;
                xml = "<!ATTLIST a xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = a;
                xml = "<!ATTLIST a xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(#PCDATA | desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT a (#PCDATA | desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    altGlyph =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            dx =             {
                "attribute_name" = dx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph dx CDATA #IMPLIED>";
            };
            dy =             {
                "attribute_name" = dy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph dy CDATA #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            format =             {
                "attribute_name" = format;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph format CDATA #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph glyph-orientation-vertical CDATA #IMPLIED>";
            };
            glyphRef =             {
                "attribute_name" = glyphRef;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph glyphRef CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph requiredFeatures CDATA #IMPLIED>";
            };
            rotate =             {
                "attribute_name" = rotate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph rotate CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph x CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyph;
                xml = "<!ATTLIST altGlyph y CDATA #IMPLIED>";
            };
        };
        value = "(#PCDATA)*";
        xml = "<!ELEMENT altGlyph (#PCDATA)*>";
    };
    altGlyphDef =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = altGlyphDef;
                xml = "<!ATTLIST altGlyphDef id ID #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyphDef;
                xml = "<!ATTLIST altGlyphDef xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = altGlyphDef;
                xml = "<!ATTLIST altGlyphDef xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyphDef;
                xml = "<!ATTLIST altGlyphDef xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(glyphRef+ | altGlyphItem+)";
        xml = "<!ELEMENT altGlyphDef (glyphRef+ | altGlyphItem+)>";
    };
    altGlyphItem =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = altGlyphItem;
                xml = "<!ATTLIST altGlyphItem id ID #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = altGlyphItem;
                xml = "<!ATTLIST altGlyphItem xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = altGlyphItem;
                xml = "<!ATTLIST altGlyphItem xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = altGlyphItem;
                xml = "<!ATTLIST altGlyphItem xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(glyphRef)+";
        xml = "<!ELEMENT altGlyphItem (glyphRef)+>";
    };
    animate =     {
        attributes =         {
            accumulate =             {
                "attribute_name" = accumulate;
                "attribute_type" =                 (
                    none,
                    sum
                );
                "default_value" =                 (
                    "\"none\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate accumulate (none|sum) \"none\">";
            };
            additive =             {
                "attribute_name" = additive;
                "attribute_type" =                 (
                    replace,
                    sum
                );
                "default_value" =                 (
                    "\"replace\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate additive (replace|sum) \"replace\">";
            };
            attributeName =             {
                "attribute_name" = attributeName;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate attributeName CDATA #REQUIRED>";
            };
            attributeType =             {
                "attribute_name" = attributeType;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate attributeType CDATA #IMPLIED>";
            };
            begin =             {
                "attribute_name" = begin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate begin CDATA #IMPLIED>";
            };
            by =             {
                "attribute_name" = by;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate by CDATA #IMPLIED>";
            };
            calcMode =             {
                "attribute_name" = calcMode;
                "attribute_type" =                 (
                    discrete,
                    linear,
                    paced,
                    spline
                );
                "default_value" =                 (
                    "\"linear\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate calcMode (discrete|linear|paced|spline) \"linear\">";
            };
            dur =             {
                "attribute_name" = dur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate dur CDATA #IMPLIED>";
            };
            end =             {
                "attribute_name" = end;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate end CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    remove,
                    freeze
                );
                "default_value" =                 (
                    "\"remove\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate fill (remove|freeze) \"remove\">";
            };
            from =             {
                "attribute_name" = from;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate from CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate id ID #IMPLIED>";
            };
            keySplines =             {
                "attribute_name" = keySplines;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate keySplines CDATA #IMPLIED>";
            };
            keyTimes =             {
                "attribute_name" = keyTimes;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate keyTimes CDATA #IMPLIED>";
            };
            max =             {
                "attribute_name" = max;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate max CDATA #IMPLIED>";
            };
            min =             {
                "attribute_name" = min;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate min CDATA #IMPLIED>";
            };
            onbegin =             {
                "attribute_name" = onbegin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate onbegin CDATA #IMPLIED>";
            };
            onend =             {
                "attribute_name" = onend;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate onend CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate onload CDATA #IMPLIED>";
            };
            onrepeat =             {
                "attribute_name" = onrepeat;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate onrepeat CDATA #IMPLIED>";
            };
            repeatCount =             {
                "attribute_name" = repeatCount;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate repeatCount CDATA #IMPLIED>";
            };
            repeatDur =             {
                "attribute_name" = repeatDur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate repeatDur CDATA #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate requiredFeatures CDATA #IMPLIED>";
            };
            restart =             {
                "attribute_name" = restart;
                "attribute_type" =                 (
                    always,
                    never,
                    whenNotActive
                );
                "default_value" =                 (
                    "\"always\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate restart (always|never|whenNotActive) \"always\">";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate systemLanguage CDATA #IMPLIED>";
            };
            to =             {
                "attribute_name" = to;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate to CDATA #IMPLIED>";
            };
            values =             {
                "attribute_name" = values;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate values CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animate;
                xml = "<!ATTLIST animate xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(desc | title | metadata)*";
        xml = "<!ELEMENT animate (desc | title | metadata)*>";
    };
    animateColor =     {
        attributes =         {
            accumulate =             {
                "attribute_name" = accumulate;
                "attribute_type" =                 (
                    none,
                    sum
                );
                "default_value" =                 (
                    "\"none\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor accumulate (none|sum) \"none\">";
            };
            additive =             {
                "attribute_name" = additive;
                "attribute_type" =                 (
                    replace,
                    sum
                );
                "default_value" =                 (
                    "\"replace\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor additive (replace|sum) \"replace\">";
            };
            attributeName =             {
                "attribute_name" = attributeName;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor attributeName CDATA #REQUIRED>";
            };
            attributeType =             {
                "attribute_name" = attributeType;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor attributeType CDATA #IMPLIED>";
            };
            begin =             {
                "attribute_name" = begin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor begin CDATA #IMPLIED>";
            };
            by =             {
                "attribute_name" = by;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor by CDATA #IMPLIED>";
            };
            calcMode =             {
                "attribute_name" = calcMode;
                "attribute_type" =                 (
                    discrete,
                    linear,
                    paced,
                    spline
                );
                "default_value" =                 (
                    "\"linear\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor calcMode (discrete|linear|paced|spline) \"linear\">";
            };
            dur =             {
                "attribute_name" = dur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor dur CDATA #IMPLIED>";
            };
            end =             {
                "attribute_name" = end;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor end CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    remove,
                    freeze
                );
                "default_value" =                 (
                    "\"remove\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor fill (remove|freeze) \"remove\">";
            };
            from =             {
                "attribute_name" = from;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor from CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor id ID #IMPLIED>";
            };
            keySplines =             {
                "attribute_name" = keySplines;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor keySplines CDATA #IMPLIED>";
            };
            keyTimes =             {
                "attribute_name" = keyTimes;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor keyTimes CDATA #IMPLIED>";
            };
            max =             {
                "attribute_name" = max;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor max CDATA #IMPLIED>";
            };
            min =             {
                "attribute_name" = min;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor min CDATA #IMPLIED>";
            };
            onbegin =             {
                "attribute_name" = onbegin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor onbegin CDATA #IMPLIED>";
            };
            onend =             {
                "attribute_name" = onend;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor onend CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor onload CDATA #IMPLIED>";
            };
            onrepeat =             {
                "attribute_name" = onrepeat;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor onrepeat CDATA #IMPLIED>";
            };
            repeatCount =             {
                "attribute_name" = repeatCount;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor repeatCount CDATA #IMPLIED>";
            };
            repeatDur =             {
                "attribute_name" = repeatDur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor repeatDur CDATA #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor requiredFeatures CDATA #IMPLIED>";
            };
            restart =             {
                "attribute_name" = restart;
                "attribute_type" =                 (
                    always,
                    never,
                    whenNotActive
                );
                "default_value" =                 (
                    "\"always\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor restart (always|never|whenNotActive) \"always\">";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor systemLanguage CDATA #IMPLIED>";
            };
            to =             {
                "attribute_name" = to;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor to CDATA #IMPLIED>";
            };
            values =             {
                "attribute_name" = values;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor values CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateColor;
                xml = "<!ATTLIST animateColor xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(desc | title | metadata)*";
        xml = "<!ELEMENT animateColor (desc | title | metadata)*>";
    };
    animateMotion =     {
        attributes =         {
            accumulate =             {
                "attribute_name" = accumulate;
                "attribute_type" =                 (
                    none,
                    sum
                );
                "default_value" =                 (
                    "\"none\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion accumulate (none|sum) \"none\">";
            };
            additive =             {
                "attribute_name" = additive;
                "attribute_type" =                 (
                    replace,
                    sum
                );
                "default_value" =                 (
                    "\"replace\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion additive (replace|sum) \"replace\">";
            };
            begin =             {
                "attribute_name" = begin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion begin CDATA #IMPLIED>";
            };
            by =             {
                "attribute_name" = by;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion by CDATA #IMPLIED>";
            };
            calcMode =             {
                "attribute_name" = calcMode;
                "attribute_type" =                 (
                    discrete,
                    linear,
                    paced,
                    spline
                );
                "default_value" =                 (
                    "\"paced\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion calcMode (discrete|linear|paced|spline) \"paced\">";
            };
            dur =             {
                "attribute_name" = dur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion dur CDATA #IMPLIED>";
            };
            end =             {
                "attribute_name" = end;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion end CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    remove,
                    freeze
                );
                "default_value" =                 (
                    "\"remove\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion fill (remove|freeze) \"remove\">";
            };
            from =             {
                "attribute_name" = from;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion from CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion id ID #IMPLIED>";
            };
            keyPoints =             {
                "attribute_name" = keyPoints;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion keyPoints CDATA #IMPLIED>";
            };
            keySplines =             {
                "attribute_name" = keySplines;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion keySplines CDATA #IMPLIED>";
            };
            keyTimes =             {
                "attribute_name" = keyTimes;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion keyTimes CDATA #IMPLIED>";
            };
            max =             {
                "attribute_name" = max;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion max CDATA #IMPLIED>";
            };
            min =             {
                "attribute_name" = min;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion min CDATA #IMPLIED>";
            };
            onbegin =             {
                "attribute_name" = onbegin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion onbegin CDATA #IMPLIED>";
            };
            onend =             {
                "attribute_name" = onend;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion onend CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion onload CDATA #IMPLIED>";
            };
            onrepeat =             {
                "attribute_name" = onrepeat;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion onrepeat CDATA #IMPLIED>";
            };
            origin =             {
                "attribute_name" = origin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion origin CDATA #IMPLIED>";
            };
            path =             {
                "attribute_name" = path;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion path CDATA #IMPLIED>";
            };
            repeatCount =             {
                "attribute_name" = repeatCount;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion repeatCount CDATA #IMPLIED>";
            };
            repeatDur =             {
                "attribute_name" = repeatDur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion repeatDur CDATA #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion requiredFeatures CDATA #IMPLIED>";
            };
            restart =             {
                "attribute_name" = restart;
                "attribute_type" =                 (
                    always,
                    never,
                    whenNotActive
                );
                "default_value" =                 (
                    "\"always\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion restart (always|never|whenNotActive) \"always\">";
            };
            rotate =             {
                "attribute_name" = rotate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion rotate CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion systemLanguage CDATA #IMPLIED>";
            };
            to =             {
                "attribute_name" = to;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion to CDATA #IMPLIED>";
            };
            values =             {
                "attribute_name" = values;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion values CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateMotion;
                xml = "<!ATTLIST animateMotion xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "((mpath, (desc | title | metadata)*) | ((desc | title | metadata)+, mpath, (desc | title | metadata)*))";
        xml = "<!ELEMENT animateMotion ((mpath, (desc | title | metadata)*) | ((desc | title | metadata)+, mpath, (desc | title | metadata)*))>";
    };
    animateTransform =     {
        attributes =         {
            accumulate =             {
                "attribute_name" = accumulate;
                "attribute_type" =                 (
                    none,
                    sum
                );
                "default_value" =                 (
                    "\"none\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform accumulate (none|sum) \"none\">";
            };
            additive =             {
                "attribute_name" = additive;
                "attribute_type" =                 (
                    replace,
                    sum
                );
                "default_value" =                 (
                    "\"replace\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform additive (replace|sum) \"replace\">";
            };
            attributeName =             {
                "attribute_name" = attributeName;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform attributeName CDATA #REQUIRED>";
            };
            attributeType =             {
                "attribute_name" = attributeType;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform attributeType CDATA #IMPLIED>";
            };
            begin =             {
                "attribute_name" = begin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform begin CDATA #IMPLIED>";
            };
            by =             {
                "attribute_name" = by;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform by CDATA #IMPLIED>";
            };
            calcMode =             {
                "attribute_name" = calcMode;
                "attribute_type" =                 (
                    discrete,
                    linear,
                    paced,
                    spline
                );
                "default_value" =                 (
                    "\"linear\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform calcMode (discrete|linear|paced|spline) \"linear\">";
            };
            dur =             {
                "attribute_name" = dur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform dur CDATA #IMPLIED>";
            };
            end =             {
                "attribute_name" = end;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform end CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    remove,
                    freeze
                );
                "default_value" =                 (
                    "\"remove\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform fill (remove|freeze) \"remove\">";
            };
            from =             {
                "attribute_name" = from;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform from CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform id ID #IMPLIED>";
            };
            keySplines =             {
                "attribute_name" = keySplines;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform keySplines CDATA #IMPLIED>";
            };
            keyTimes =             {
                "attribute_name" = keyTimes;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform keyTimes CDATA #IMPLIED>";
            };
            max =             {
                "attribute_name" = max;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform max CDATA #IMPLIED>";
            };
            min =             {
                "attribute_name" = min;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform min CDATA #IMPLIED>";
            };
            onbegin =             {
                "attribute_name" = onbegin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform onbegin CDATA #IMPLIED>";
            };
            onend =             {
                "attribute_name" = onend;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform onend CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform onload CDATA #IMPLIED>";
            };
            onrepeat =             {
                "attribute_name" = onrepeat;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform onrepeat CDATA #IMPLIED>";
            };
            repeatCount =             {
                "attribute_name" = repeatCount;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform repeatCount CDATA #IMPLIED>";
            };
            repeatDur =             {
                "attribute_name" = repeatDur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform repeatDur CDATA #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform requiredFeatures CDATA #IMPLIED>";
            };
            restart =             {
                "attribute_name" = restart;
                "attribute_type" =                 (
                    always,
                    never,
                    whenNotActive
                );
                "default_value" =                 (
                    "\"always\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform restart (always|never|whenNotActive) \"always\">";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform systemLanguage CDATA #IMPLIED>";
            };
            to =             {
                "attribute_name" = to;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform to CDATA #IMPLIED>";
            };
            type =             {
                "attribute_name" = type;
                "attribute_type" =                 (
                    translate,
                    scale,
                    rotate,
                    skewX,
                    skewY
                );
                "default_value" =                 (
                    "\"translate\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform type (translate|scale|rotate|skewX|skewY) \"translate\">";
            };
            values =             {
                "attribute_name" = values;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform values CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = animateTransform;
                xml = "<!ATTLIST animateTransform xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(desc | title | metadata)*";
        xml = "<!ELEMENT animateTransform (desc | title | metadata)*>";
    };
    circle =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle cursor CDATA #IMPLIED>";
            };
            cx =             {
                "attribute_name" = cx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle cx CDATA #IMPLIED>";
            };
            cy =             {
                "attribute_name" = cy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle cy CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            r =             {
                "attribute_name" = r;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle r CDATA #REQUIRED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = circle;
                xml = "<!ATTLIST circle xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*";
        xml = "<!ELEMENT circle (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>";
    };
    clipPath =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            clipPathUnits =             {
                "attribute_name" = clipPathUnits;
                "attribute_type" =                 (
                    userSpaceOnUse,
                    objectBoundingBox
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath clipPathUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = clipPath;
                xml = "<!ATTLIST clipPath xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | use | path | rect | circle | line | ellipse | polyline | polygon | text)*";
        xml = "<!ELEMENT clipPath (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | use | path | rect | circle | line | ellipse | polyline | polygon | text)*>";
    };
    "color-profile" =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile id ID #IMPLIED>";
            };
            local =             {
                "attribute_name" = local;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile local CDATA #IMPLIED>";
            };
            name =             {
                "attribute_name" = name;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile name CDATA #REQUIRED>";
            };
            "rendering-intent" =             {
                "attribute_name" = "rendering-intent";
                "attribute_type" =                 (
                    auto,
                    perceptual,
                    "relative-colorimetric",
                    saturation,
                    "absolute-colorimetric"
                );
                "default_value" =                 (
                    "\"auto\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile rendering-intent (auto|perceptual|relative-colorimetric|saturation|absolute-colorimetric) \"auto\">";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "color-profile";
                xml = "<!ATTLIST color-profile xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(desc | title | metadata)*";
        xml = "<!ELEMENT color-profile (desc | title | metadata)*>";
    };
    cursor =     {
        attributes =         {
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor externalResourcesRequired (false|true) #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor id ID #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor requiredFeatures CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor systemLanguage CDATA #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor x CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xlink:href CDATA #REQUIRED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = cursor;
                xml = "<!ATTLIST cursor y CDATA #IMPLIED>";
            };
        };
        value = "(desc | title | metadata)*";
        xml = "<!ELEMENT cursor (desc | title | metadata)*>";
    };
    defs =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = defs;
                xml = "<!ATTLIST defs xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT defs (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    desc =     {
        attributes =         {
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = desc;
                xml = "<!ATTLIST desc class CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = desc;
                xml = "<!ATTLIST desc id ID #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = desc;
                xml = "<!ATTLIST desc style CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = desc;
                xml = "<!ATTLIST desc xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = desc;
                xml = "<!ATTLIST desc xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = desc;
                xml = "<!ATTLIST desc xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(#PCDATA)*";
        xml = "<!ELEMENT desc (#PCDATA)*>";
    };
    ellipse =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse cursor CDATA #IMPLIED>";
            };
            cx =             {
                "attribute_name" = cx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse cx CDATA #IMPLIED>";
            };
            cy =             {
                "attribute_name" = cy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse cy CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse requiredFeatures CDATA #IMPLIED>";
            };
            rx =             {
                "attribute_name" = rx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse rx CDATA #REQUIRED>";
            };
            ry =             {
                "attribute_name" = ry;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse ry CDATA #REQUIRED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = ellipse;
                xml = "<!ATTLIST ellipse xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*";
        xml = "<!ELEMENT ellipse (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>";
    };
    feBlend =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend in CDATA #IMPLIED>";
            };
            in2 =             {
                "attribute_name" = in2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend in2 CDATA #REQUIRED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend mask CDATA #IMPLIED>";
            };
            mode =             {
                "attribute_name" = mode;
                "attribute_type" =                 (
                    normal,
                    multiply,
                    screen,
                    darken,
                    lighten
                );
                "default_value" =                 (
                    "\"normal\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend mode (normal|multiply|screen|darken|lighten) \"normal\">";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feBlend;
                xml = "<!ATTLIST feBlend y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feBlend (animate | set)*>";
    };
    feColorMatrix =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix in CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            type =             {
                "attribute_name" = type;
                "attribute_type" =                 (
                    matrix,
                    saturate,
                    hueRotate,
                    luminanceToAlpha
                );
                "default_value" =                 (
                    "\"matrix\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix type (matrix|saturate|hueRotate|luminanceToAlpha) \"matrix\">";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            values =             {
                "attribute_name" = values;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix values CDATA #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feColorMatrix;
                xml = "<!ATTLIST feColorMatrix y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feColorMatrix (animate | set)*>";
    };
    feComponentTransfer =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer in CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComponentTransfer;
                xml = "<!ATTLIST feComponentTransfer y CDATA #IMPLIED>";
            };
        };
        value = "(feFuncR?, feFuncG?, feFuncB?, feFuncA?)";
        xml = "<!ELEMENT feComponentTransfer (feFuncR?, feFuncG?, feFuncB?, feFuncA?)>";
    };
    feComposite =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite in CDATA #IMPLIED>";
            };
            in2 =             {
                "attribute_name" = in2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite in2 CDATA #REQUIRED>";
            };
            k1 =             {
                "attribute_name" = k1;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite k1 CDATA #IMPLIED>";
            };
            k2 =             {
                "attribute_name" = k2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite k2 CDATA #IMPLIED>";
            };
            k3 =             {
                "attribute_name" = k3;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite k3 CDATA #IMPLIED>";
            };
            k4 =             {
                "attribute_name" = k4;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite k4 CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite opacity CDATA #IMPLIED>";
            };
            operator =             {
                "attribute_name" = operator;
                "attribute_type" =                 (
                    over,
                    in,
                    out,
                    atop,
                    xor,
                    arithmetic
                );
                "default_value" =                 (
                    "\"over\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite operator (over|in|out|atop|xor|arithmetic) \"over\">";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feComposite;
                xml = "<!ATTLIST feComposite y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feComposite (animate | set)*>";
    };
    feConvolveMatrix =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix baseline-shift CDATA #IMPLIED>";
            };
            bias =             {
                "attribute_name" = bias;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix bias CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            divisor =             {
                "attribute_name" = divisor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix divisor CDATA #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            edgeMode =             {
                "attribute_name" = edgeMode;
                "attribute_type" =                 (
                    duplicate,
                    wrap,
                    none
                );
                "default_value" =                 (
                    "\"duplicate\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix edgeMode (duplicate|wrap|none) \"duplicate\">";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix in CDATA #IMPLIED>";
            };
            kernelMatrix =             {
                "attribute_name" = kernelMatrix;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix kernelMatrix CDATA #REQUIRED>";
            };
            kernelUnitLength =             {
                "attribute_name" = kernelUnitLength;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix kernelUnitLength CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix opacity CDATA #IMPLIED>";
            };
            order =             {
                "attribute_name" = order;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix order CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            preserveAlpha =             {
                "attribute_name" = preserveAlpha;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix preserveAlpha (false|true) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix style CDATA #IMPLIED>";
            };
            targetX =             {
                "attribute_name" = targetX;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix targetX CDATA #IMPLIED>";
            };
            targetY =             {
                "attribute_name" = targetY;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix targetY CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feConvolveMatrix;
                xml = "<!ATTLIST feConvolveMatrix y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feConvolveMatrix (animate | set)*>";
    };
    feDiffuseLighting =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting cursor CDATA #IMPLIED>";
            };
            diffuseConstant =             {
                "attribute_name" = diffuseConstant;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting diffuseConstant CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting in CDATA #IMPLIED>";
            };
            kernelUnitLength =             {
                "attribute_name" = kernelUnitLength;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting kernelUnitLength CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting style CDATA #IMPLIED>";
            };
            surfaceScale =             {
                "attribute_name" = surfaceScale;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting surfaceScale CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDiffuseLighting;
                xml = "<!ATTLIST feDiffuseLighting y CDATA #IMPLIED>";
            };
        };
        value = "((feDistantLight | fePointLight | feSpotLight), (animate | set | animateColor)*)";
        xml = "<!ELEMENT feDiffuseLighting ((feDistantLight | fePointLight | feSpotLight), (animate | set | animateColor)*)>";
    };
    feDisplacementMap =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap in CDATA #IMPLIED>";
            };
            in2 =             {
                "attribute_name" = in2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap in2 CDATA #REQUIRED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap result CDATA #IMPLIED>";
            };
            scale =             {
                "attribute_name" = scale;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap scale CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap x CDATA #IMPLIED>";
            };
            xChannelSelector =             {
                "attribute_name" = xChannelSelector;
                "attribute_type" =                 (
                    R,
                    G,
                    B,
                    A
                );
                "default_value" =                 (
                    "\"A\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap xChannelSelector (R|G|B|A) \"A\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap y CDATA #IMPLIED>";
            };
            yChannelSelector =             {
                "attribute_name" = yChannelSelector;
                "attribute_type" =                 (
                    R,
                    G,
                    B,
                    A
                );
                "default_value" =                 (
                    "\"A\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDisplacementMap;
                xml = "<!ATTLIST feDisplacementMap yChannelSelector (R|G|B|A) \"A\">";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feDisplacementMap (animate | set)*>";
    };
    feDistantLight =     {
        attributes =         {
            azimuth =             {
                "attribute_name" = azimuth;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDistantLight;
                xml = "<!ATTLIST feDistantLight azimuth CDATA #IMPLIED>";
            };
            elevation =             {
                "attribute_name" = elevation;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDistantLight;
                xml = "<!ATTLIST feDistantLight elevation CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feDistantLight;
                xml = "<!ATTLIST feDistantLight id ID #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feDistantLight;
                xml = "<!ATTLIST feDistantLight xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feDistantLight;
                xml = "<!ATTLIST feDistantLight xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feDistantLight;
                xml = "<!ATTLIST feDistantLight xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feDistantLight (animate | set)*>";
    };
    feFlood =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFlood;
                xml = "<!ATTLIST feFlood y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set | animateColor)*";
        xml = "<!ELEMENT feFlood (animate | set | animateColor)*>";
    };
    feFuncA =     {
        attributes =         {
            amplitude =             {
                "attribute_name" = amplitude;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA amplitude CDATA #IMPLIED>";
            };
            exponent =             {
                "attribute_name" = exponent;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA exponent CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA id ID #IMPLIED>";
            };
            intercept =             {
                "attribute_name" = intercept;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA intercept CDATA #IMPLIED>";
            };
            offset =             {
                "attribute_name" = offset;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA offset CDATA #IMPLIED>";
            };
            slope =             {
                "attribute_name" = slope;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA slope CDATA #IMPLIED>";
            };
            tableValues =             {
                "attribute_name" = tableValues;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA tableValues CDATA #IMPLIED>";
            };
            type =             {
                "attribute_name" = type;
                "attribute_type" =                 (
                    identity,
                    table,
                    discrete,
                    linear,
                    gamma
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA type (identity|table|discrete|linear|gamma) #REQUIRED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFuncA;
                xml = "<!ATTLIST feFuncA xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feFuncA (animate | set)*>";
    };
    feFuncB =     {
        attributes =         {
            amplitude =             {
                "attribute_name" = amplitude;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB amplitude CDATA #IMPLIED>";
            };
            exponent =             {
                "attribute_name" = exponent;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB exponent CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB id ID #IMPLIED>";
            };
            intercept =             {
                "attribute_name" = intercept;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB intercept CDATA #IMPLIED>";
            };
            offset =             {
                "attribute_name" = offset;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB offset CDATA #IMPLIED>";
            };
            slope =             {
                "attribute_name" = slope;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB slope CDATA #IMPLIED>";
            };
            tableValues =             {
                "attribute_name" = tableValues;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB tableValues CDATA #IMPLIED>";
            };
            type =             {
                "attribute_name" = type;
                "attribute_type" =                 (
                    identity,
                    table,
                    discrete,
                    linear,
                    gamma
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB type (identity|table|discrete|linear|gamma) #REQUIRED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFuncB;
                xml = "<!ATTLIST feFuncB xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feFuncB (animate | set)*>";
    };
    feFuncG =     {
        attributes =         {
            amplitude =             {
                "attribute_name" = amplitude;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG amplitude CDATA #IMPLIED>";
            };
            exponent =             {
                "attribute_name" = exponent;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG exponent CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG id ID #IMPLIED>";
            };
            intercept =             {
                "attribute_name" = intercept;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG intercept CDATA #IMPLIED>";
            };
            offset =             {
                "attribute_name" = offset;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG offset CDATA #IMPLIED>";
            };
            slope =             {
                "attribute_name" = slope;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG slope CDATA #IMPLIED>";
            };
            tableValues =             {
                "attribute_name" = tableValues;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG tableValues CDATA #IMPLIED>";
            };
            type =             {
                "attribute_name" = type;
                "attribute_type" =                 (
                    identity,
                    table,
                    discrete,
                    linear,
                    gamma
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG type (identity|table|discrete|linear|gamma) #REQUIRED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFuncG;
                xml = "<!ATTLIST feFuncG xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feFuncG (animate | set)*>";
    };
    feFuncR =     {
        attributes =         {
            amplitude =             {
                "attribute_name" = amplitude;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR amplitude CDATA #IMPLIED>";
            };
            exponent =             {
                "attribute_name" = exponent;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR exponent CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR id ID #IMPLIED>";
            };
            intercept =             {
                "attribute_name" = intercept;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR intercept CDATA #IMPLIED>";
            };
            offset =             {
                "attribute_name" = offset;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR offset CDATA #IMPLIED>";
            };
            slope =             {
                "attribute_name" = slope;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR slope CDATA #IMPLIED>";
            };
            tableValues =             {
                "attribute_name" = tableValues;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR tableValues CDATA #IMPLIED>";
            };
            type =             {
                "attribute_name" = type;
                "attribute_type" =                 (
                    identity,
                    table,
                    discrete,
                    linear,
                    gamma
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR type (identity|table|discrete|linear|gamma) #REQUIRED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feFuncR;
                xml = "<!ATTLIST feFuncR xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feFuncR (animate | set)*>";
    };
    feGaussianBlur =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur in CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            stdDeviation =             {
                "attribute_name" = stdDeviation;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stdDeviation CDATA #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feGaussianBlur;
                xml = "<!ATTLIST feGaussianBlur y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feGaussianBlur (animate | set)*>";
    };
    feImage =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            preserveAspectRatio =             {
                "attribute_name" = preserveAspectRatio;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "\"xMidYMid",
                    "meet\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage preserveAspectRatio CDATA \"xMidYMid meet\">";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage x CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xlink:href CDATA #REQUIRED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    embed
                );
                "default_value" =                 (
                    "\"embed\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xlink:show (embed) \"embed\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feImage;
                xml = "<!ATTLIST feImage y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set | animateTransform)*";
        xml = "<!ELEMENT feImage (animate | set | animateTransform)*>";
    };
    feMerge =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMerge;
                xml = "<!ATTLIST feMerge y CDATA #IMPLIED>";
            };
        };
        value = "(feMergeNode)*";
        xml = "<!ELEMENT feMerge (feMergeNode)*>";
    };
    feMergeNode =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feMergeNode;
                xml = "<!ATTLIST feMergeNode id ID #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMergeNode;
                xml = "<!ATTLIST feMergeNode in CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMergeNode;
                xml = "<!ATTLIST feMergeNode xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feMergeNode;
                xml = "<!ATTLIST feMergeNode xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMergeNode;
                xml = "<!ATTLIST feMergeNode xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feMergeNode (animate | set)*>";
    };
    feMorphology =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology in CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology opacity CDATA #IMPLIED>";
            };
            operator =             {
                "attribute_name" = operator;
                "attribute_type" =                 (
                    erode,
                    dilate
                );
                "default_value" =                 (
                    "\"erode\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology operator (erode|dilate) \"erode\">";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            radius =             {
                "attribute_name" = radius;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology radius CDATA #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feMorphology;
                xml = "<!ATTLIST feMorphology y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feMorphology (animate | set)*>";
    };
    feOffset =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            dx =             {
                "attribute_name" = dx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset dx CDATA #IMPLIED>";
            };
            dy =             {
                "attribute_name" = dy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset dy CDATA #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset in CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feOffset;
                xml = "<!ATTLIST feOffset y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feOffset (animate | set)*>";
    };
    fePointLight =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = fePointLight;
                xml = "<!ATTLIST fePointLight id ID #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = fePointLight;
                xml = "<!ATTLIST fePointLight x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = fePointLight;
                xml = "<!ATTLIST fePointLight xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = fePointLight;
                xml = "<!ATTLIST fePointLight xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = fePointLight;
                xml = "<!ATTLIST fePointLight xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = fePointLight;
                xml = "<!ATTLIST fePointLight y CDATA #IMPLIED>";
            };
            z =             {
                "attribute_name" = z;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = fePointLight;
                xml = "<!ATTLIST fePointLight z CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT fePointLight (animate | set)*>";
    };
    feSpecularLighting =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting in CDATA #IMPLIED>";
            };
            kernelUnitLength =             {
                "attribute_name" = kernelUnitLength;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting kernelUnitLength CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            specularConstant =             {
                "attribute_name" = specularConstant;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting specularConstant CDATA #IMPLIED>";
            };
            specularExponent =             {
                "attribute_name" = specularExponent;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting specularExponent CDATA #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting style CDATA #IMPLIED>";
            };
            surfaceScale =             {
                "attribute_name" = surfaceScale;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting surfaceScale CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpecularLighting;
                xml = "<!ATTLIST feSpecularLighting y CDATA #IMPLIED>";
            };
        };
        value = "((feDistantLight | fePointLight | feSpotLight), (animate | set | animateColor)*)";
        xml = "<!ELEMENT feSpecularLighting ((feDistantLight | fePointLight | feSpotLight), (animate | set | animateColor)*)>";
    };
    feSpotLight =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight id ID #IMPLIED>";
            };
            limitingConeAngle =             {
                "attribute_name" = limitingConeAngle;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight limitingConeAngle CDATA #IMPLIED>";
            };
            pointsAtX =             {
                "attribute_name" = pointsAtX;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight pointsAtX CDATA #IMPLIED>";
            };
            pointsAtY =             {
                "attribute_name" = pointsAtY;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight pointsAtY CDATA #IMPLIED>";
            };
            pointsAtZ =             {
                "attribute_name" = pointsAtZ;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight pointsAtZ CDATA #IMPLIED>";
            };
            specularExponent =             {
                "attribute_name" = specularExponent;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight specularExponent CDATA #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight y CDATA #IMPLIED>";
            };
            z =             {
                "attribute_name" = z;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feSpotLight;
                xml = "<!ATTLIST feSpotLight z CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feSpotLight (animate | set)*>";
    };
    feTile =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            in =             {
                "attribute_name" = in;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile in CDATA #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile result CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTile;
                xml = "<!ATTLIST feTile y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feTile (animate | set)*>";
    };
    feTurbulence =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            baseFrequency =             {
                "attribute_name" = baseFrequency;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence baseFrequency CDATA #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence mask CDATA #IMPLIED>";
            };
            numOctaves =             {
                "attribute_name" = numOctaves;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence numOctaves CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            result =             {
                "attribute_name" = result;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence result CDATA #IMPLIED>";
            };
            seed =             {
                "attribute_name" = seed;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence seed CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            stitchTiles =             {
                "attribute_name" = stitchTiles;
                "attribute_type" =                 (
                    stitch,
                    noStitch
                );
                "default_value" =                 (
                    "\"noStitch\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stitchTiles (stitch|noStitch) \"noStitch\">";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            type =             {
                "attribute_name" = type;
                "attribute_type" =                 (
                    fractalNoise,
                    turbulence
                );
                "default_value" =                 (
                    "\"turbulence\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence type (fractalNoise|turbulence) \"turbulence\">";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = feTurbulence;
                xml = "<!ATTLIST feTurbulence y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set)*";
        xml = "<!ELEMENT feTurbulence (animate | set)*>";
    };
    filter =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter filter CDATA #IMPLIED>";
            };
            filterRes =             {
                "attribute_name" = filterRes;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter filterRes CDATA #IMPLIED>";
            };
            filterUnits =             {
                "attribute_name" = filterUnits;
                "attribute_type" =                 (
                    userSpaceOnUse,
                    objectBoundingBox
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter filterUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            primitiveUnits =             {
                "attribute_name" = primitiveUnits;
                "attribute_type" =                 (
                    userSpaceOnUse,
                    objectBoundingBox
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter primitiveUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter x CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = filter;
                xml = "<!ATTLIST filter y CDATA #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | feBlend | feColorMatrix | feComponentTransfer | feComposite | feConvolveMatrix | feDiffuseLighting | feDisplacementMap | feFlood | feGaussianBlur | feImage | feMerge | feMorphology | feOffset | feSpecularLighting | feTile | feTurbulence)*";
        xml = "<!ELEMENT filter (desc | title | metadata | animate | set | feBlend | feColorMatrix | feComponentTransfer | feComposite | feConvolveMatrix | feDiffuseLighting | feDisplacementMap | feFlood | feGaussianBlur | feImage | feMerge | feMorphology | feOffset | feSpecularLighting | feTile | feTurbulence)*>";
    };
    font =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font glyph-orientation-vertical CDATA #IMPLIED>";
            };
            "horiz-adv-x" =             {
                "attribute_name" = "horiz-adv-x";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font horiz-adv-x CDATA #REQUIRED>";
            };
            "horiz-origin-x" =             {
                "attribute_name" = "horiz-origin-x";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font horiz-origin-x CDATA #IMPLIED>";
            };
            "horiz-origin-y" =             {
                "attribute_name" = "horiz-origin-y";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font horiz-origin-y CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = font;
                xml = "<!ATTLIST font id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            "vert-adv-y" =             {
                "attribute_name" = "vert-adv-y";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font vert-adv-y CDATA #IMPLIED>";
            };
            "vert-origin-x" =             {
                "attribute_name" = "vert-origin-x";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font vert-origin-x CDATA #IMPLIED>";
            };
            "vert-origin-y" =             {
                "attribute_name" = "vert-origin-y";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font vert-origin-y CDATA #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = font;
                xml = "<!ATTLIST font xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = font;
                xml = "<!ATTLIST font xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = font;
                xml = "<!ATTLIST font xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | font-face | missing-glyph | glyph | hkern | vkern)*";
        xml = "<!ELEMENT font (desc | title | metadata | font-face | missing-glyph | glyph | hkern | vkern)*>";
    };
    "font-face" =     {
        attributes =         {
            "accent-height" =             {
                "attribute_name" = "accent-height";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face accent-height CDATA #IMPLIED>";
            };
            alphabetic =             {
                "attribute_name" = alphabetic;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face alphabetic CDATA #IMPLIED>";
            };
            ascent =             {
                "attribute_name" = ascent;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face ascent CDATA #IMPLIED>";
            };
            bbox =             {
                "attribute_name" = bbox;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face bbox CDATA #IMPLIED>";
            };
            "cap-height" =             {
                "attribute_name" = "cap-height";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face cap-height CDATA #IMPLIED>";
            };
            descent =             {
                "attribute_name" = descent;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face descent CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face font-size CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face font-stretch CDATA #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face font-style CDATA #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face font-variant CDATA #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face font-weight CDATA #IMPLIED>";
            };
            hanging =             {
                "attribute_name" = hanging;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face hanging CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face id ID #IMPLIED>";
            };
            ideographic =             {
                "attribute_name" = ideographic;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face ideographic CDATA #IMPLIED>";
            };
            mathematical =             {
                "attribute_name" = mathematical;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face mathematical CDATA #IMPLIED>";
            };
            "overline-position" =             {
                "attribute_name" = "overline-position";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face overline-position CDATA #IMPLIED>";
            };
            "overline-thickness" =             {
                "attribute_name" = "overline-thickness";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face overline-thickness CDATA #IMPLIED>";
            };
            "panose-1" =             {
                "attribute_name" = "panose-1";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face panose-1 CDATA #IMPLIED>";
            };
            slope =             {
                "attribute_name" = slope;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face slope CDATA #IMPLIED>";
            };
            stemh =             {
                "attribute_name" = stemh;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face stemh CDATA #IMPLIED>";
            };
            stemv =             {
                "attribute_name" = stemv;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face stemv CDATA #IMPLIED>";
            };
            "strikethrough-position" =             {
                "attribute_name" = "strikethrough-position";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face strikethrough-position CDATA #IMPLIED>";
            };
            "strikethrough-thickness" =             {
                "attribute_name" = "strikethrough-thickness";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face strikethrough-thickness CDATA #IMPLIED>";
            };
            "underline-position" =             {
                "attribute_name" = "underline-position";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face underline-position CDATA #IMPLIED>";
            };
            "underline-thickness" =             {
                "attribute_name" = "underline-thickness";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face underline-thickness CDATA #IMPLIED>";
            };
            "unicode-range" =             {
                "attribute_name" = "unicode-range";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face unicode-range CDATA #IMPLIED>";
            };
            "units-per-em" =             {
                "attribute_name" = "units-per-em";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face units-per-em CDATA #IMPLIED>";
            };
            "v-alphabetic" =             {
                "attribute_name" = "v-alphabetic";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face v-alphabetic CDATA #IMPLIED>";
            };
            "v-hanging" =             {
                "attribute_name" = "v-hanging";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face v-hanging CDATA #IMPLIED>";
            };
            "v-ideographic" =             {
                "attribute_name" = "v-ideographic";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face v-ideographic CDATA #IMPLIED>";
            };
            "v-mathematical" =             {
                "attribute_name" = "v-mathematical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face v-mathematical CDATA #IMPLIED>";
            };
            widths =             {
                "attribute_name" = widths;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face widths CDATA #IMPLIED>";
            };
            "x-height" =             {
                "attribute_name" = "x-height";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face x-height CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "font-face";
                xml = "<!ATTLIST font-face xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "((font-face-src, (desc | title | metadata)*) | ((desc | title | metadata)+, font-face-src, (desc | title | metadata)*))";
        xml = "<!ELEMENT font-face ((font-face-src, (desc | title | metadata)*) | ((desc | title | metadata)+, font-face-src, (desc | title | metadata)*))>";
    };
    "font-face-format" =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = "font-face-format";
                xml = "<!ATTLIST font-face-format id ID #IMPLIED>";
            };
            string =             {
                "attribute_name" = string;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-format";
                xml = "<!ATTLIST font-face-format string CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-format";
                xml = "<!ATTLIST font-face-format xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = "font-face-format";
                xml = "<!ATTLIST font-face-format xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "font-face-format";
                xml = "<!ATTLIST font-face-format xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "";
        xml = "<!ELEMENT font-face-format EMPTY>";
    };
    "font-face-name" =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = "font-face-name";
                xml = "<!ATTLIST font-face-name id ID #IMPLIED>";
            };
            name =             {
                "attribute_name" = name;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-name";
                xml = "<!ATTLIST font-face-name name CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-name";
                xml = "<!ATTLIST font-face-name xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = "font-face-name";
                xml = "<!ATTLIST font-face-name xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "font-face-name";
                xml = "<!ATTLIST font-face-name xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "";
        xml = "<!ELEMENT font-face-name EMPTY>";
    };
    "font-face-src" =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = "font-face-src";
                xml = "<!ATTLIST font-face-src id ID #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-src";
                xml = "<!ATTLIST font-face-src xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = "font-face-src";
                xml = "<!ATTLIST font-face-src xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "font-face-src";
                xml = "<!ATTLIST font-face-src xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(font-face-uri | font-face-name)+";
        xml = "<!ELEMENT font-face-src (font-face-uri | font-face-name)+>";
    };
    "font-face-uri" =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri id ID #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xlink:href CDATA #REQUIRED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "font-face-uri";
                xml = "<!ATTLIST font-face-uri xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(font-face-format)*";
        xml = "<!ELEMENT font-face-uri (font-face-format)*>";
    };
    foreignObject =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject height CDATA #REQUIRED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject width CDATA #REQUIRED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = foreignObject;
                xml = "<!ATTLIST foreignObject y CDATA #IMPLIED>";
            };
        };
        value = "(#PCDATA)*";
        xml = "<!ELEMENT foreignObject (#PCDATA)*>";
    };
    g =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = g;
                xml = "<!ATTLIST g id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = g;
                xml = "<!ATTLIST g xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = g;
                xml = "<!ATTLIST g xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = g;
                xml = "<!ATTLIST g xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT g (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    glyph =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "arabic-form" =             {
                "attribute_name" = "arabic-form";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph arabic-form CDATA #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph cursor CDATA #IMPLIED>";
            };
            d =             {
                "attribute_name" = d;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph d CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-name" =             {
                "attribute_name" = "glyph-name";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph glyph-name CDATA #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph glyph-orientation-vertical CDATA #IMPLIED>";
            };
            "horiz-adv-x" =             {
                "attribute_name" = "horiz-adv-x";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph horiz-adv-x CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph kerning CDATA #IMPLIED>";
            };
            lang =             {
                "attribute_name" = lang;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph lang CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph opacity CDATA #IMPLIED>";
            };
            orientation =             {
                "attribute_name" = orientation;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph orientation CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            unicode =             {
                "attribute_name" = unicode;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph unicode CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            "vert-adv-y" =             {
                "attribute_name" = "vert-adv-y";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph vert-adv-y CDATA #IMPLIED>";
            };
            "vert-origin-x" =             {
                "attribute_name" = "vert-origin-x";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph vert-origin-x CDATA #IMPLIED>";
            };
            "vert-origin-y" =             {
                "attribute_name" = "vert-origin-y";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph vert-origin-y CDATA #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyph;
                xml = "<!ATTLIST glyph xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT glyph (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    glyphRef =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            dx =             {
                "attribute_name" = dx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef dx CDATA #IMPLIED>";
            };
            dy =             {
                "attribute_name" = dy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef dy CDATA #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            format =             {
                "attribute_name" = format;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef format CDATA #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef glyph-orientation-vertical CDATA #IMPLIED>";
            };
            glyphRef =             {
                "attribute_name" = glyphRef;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef glyphRef CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef x CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = glyphRef;
                xml = "<!ATTLIST glyphRef y CDATA #IMPLIED>";
            };
        };
        value = "";
        xml = "<!ELEMENT glyphRef EMPTY>";
    };
    hkern =     {
        attributes =         {
            g1 =             {
                "attribute_name" = g1;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = hkern;
                xml = "<!ATTLIST hkern g1 CDATA #IMPLIED>";
            };
            g2 =             {
                "attribute_name" = g2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = hkern;
                xml = "<!ATTLIST hkern g2 CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = hkern;
                xml = "<!ATTLIST hkern id ID #IMPLIED>";
            };
            k =             {
                "attribute_name" = k;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = hkern;
                xml = "<!ATTLIST hkern k CDATA #REQUIRED>";
            };
            u1 =             {
                "attribute_name" = u1;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = hkern;
                xml = "<!ATTLIST hkern u1 CDATA #IMPLIED>";
            };
            u2 =             {
                "attribute_name" = u2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = hkern;
                xml = "<!ATTLIST hkern u2 CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = hkern;
                xml = "<!ATTLIST hkern xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = hkern;
                xml = "<!ATTLIST hkern xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = hkern;
                xml = "<!ATTLIST hkern xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "";
        xml = "<!ELEMENT hkern EMPTY>";
    };
    image =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image height CDATA #REQUIRED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = image;
                xml = "<!ATTLIST image id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            preserveAspectRatio =             {
                "attribute_name" = preserveAspectRatio;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "\"xMidYMid",
                    "meet\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image preserveAspectRatio CDATA \"xMidYMid meet\">";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image width CDATA #REQUIRED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image x CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image xlink:href CDATA #REQUIRED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    embed
                );
                "default_value" =                 (
                    "\"embed\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image xlink:show (embed) \"embed\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = image;
                xml = "<!ATTLIST image xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = image;
                xml = "<!ATTLIST image xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = image;
                xml = "<!ATTLIST image y CDATA #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*";
        xml = "<!ELEMENT image (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>";
    };
    line =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = line;
                xml = "<!ATTLIST line id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x1 =             {
                "attribute_name" = x1;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line x1 CDATA #IMPLIED>";
            };
            x2 =             {
                "attribute_name" = x2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line x2 CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = line;
                xml = "<!ATTLIST line xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = line;
                xml = "<!ATTLIST line xml:space (default|preserve) #IMPLIED>";
            };
            y1 =             {
                "attribute_name" = y1;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line y1 CDATA #IMPLIED>";
            };
            y2 =             {
                "attribute_name" = y2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = line;
                xml = "<!ATTLIST line y2 CDATA #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*";
        xml = "<!ELEMENT line (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>";
    };
    linearGradient =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient glyph-orientation-vertical CDATA #IMPLIED>";
            };
            gradientTransform =             {
                "attribute_name" = gradientTransform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient gradientTransform CDATA #IMPLIED>";
            };
            gradientUnits =             {
                "attribute_name" = gradientUnits;
                "attribute_type" =                 (
                    userSpaceOnUse,
                    objectBoundingBox
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient gradientUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            spreadMethod =             {
                "attribute_name" = spreadMethod;
                "attribute_type" =                 (
                    pad,
                    reflect,
                    repeat
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient spreadMethod (pad|reflect|repeat) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x1 =             {
                "attribute_name" = x1;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient x1 CDATA #IMPLIED>";
            };
            x2 =             {
                "attribute_name" = x2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient x2 CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y1 =             {
                "attribute_name" = y1;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient y1 CDATA #IMPLIED>";
            };
            y2 =             {
                "attribute_name" = y2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = linearGradient;
                xml = "<!ATTLIST linearGradient y2 CDATA #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | stop | animate | set | animateTransform)*";
        xml = "<!ELEMENT linearGradient (desc | title | metadata | stop | animate | set | animateTransform)*>";
    };
    marker =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker marker-start CDATA #IMPLIED>";
            };
            markerHeight =             {
                "attribute_name" = markerHeight;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker markerHeight CDATA #IMPLIED>";
            };
            markerUnits =             {
                "attribute_name" = markerUnits;
                "attribute_type" =                 (
                    strokeWidth,
                    userSpaceOnUse
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker markerUnits (strokeWidth|userSpaceOnUse) #IMPLIED>";
            };
            markerWidth =             {
                "attribute_name" = markerWidth;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker markerWidth CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker opacity CDATA #IMPLIED>";
            };
            orient =             {
                "attribute_name" = orient;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker orient CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            preserveAspectRatio =             {
                "attribute_name" = preserveAspectRatio;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "\"xMidYMid",
                    "meet\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker preserveAspectRatio CDATA \"xMidYMid meet\">";
            };
            refX =             {
                "attribute_name" = refX;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker refX CDATA #IMPLIED>";
            };
            refY =             {
                "attribute_name" = refY;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker refY CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            viewBox =             {
                "attribute_name" = viewBox;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker viewBox CDATA #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = marker;
                xml = "<!ATTLIST marker xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT marker (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    mask =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask mask CDATA #IMPLIED>";
            };
            maskContentUnits =             {
                "attribute_name" = maskContentUnits;
                "attribute_type" =                 (
                    userSpaceOnUse,
                    objectBoundingBox
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask maskContentUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>";
            };
            maskUnits =             {
                "attribute_name" = maskUnits;
                "attribute_type" =                 (
                    userSpaceOnUse,
                    objectBoundingBox
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask maskUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mask;
                xml = "<!ATTLIST mask y CDATA #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT mask (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    metadata =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = metadata;
                xml = "<!ATTLIST metadata id ID #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = metadata;
                xml = "<!ATTLIST metadata xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = metadata;
                xml = "<!ATTLIST metadata xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = metadata;
                xml = "<!ATTLIST metadata xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(#PCDATA)*";
        xml = "<!ELEMENT metadata (#PCDATA)*>";
    };
    "missing-glyph" =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph cursor CDATA #IMPLIED>";
            };
            d =             {
                "attribute_name" = d;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph d CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph glyph-orientation-vertical CDATA #IMPLIED>";
            };
            "horiz-adv-x" =             {
                "attribute_name" = "horiz-adv-x";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph horiz-adv-x CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            "vert-adv-y" =             {
                "attribute_name" = "vert-adv-y";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph vert-adv-y CDATA #IMPLIED>";
            };
            "vert-origin-x" =             {
                "attribute_name" = "vert-origin-x";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph vert-origin-x CDATA #IMPLIED>";
            };
            "vert-origin-y" =             {
                "attribute_name" = "vert-origin-y";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph vert-origin-y CDATA #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = "missing-glyph";
                xml = "<!ATTLIST missing-glyph xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT missing-glyph (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    mpath =     {
        attributes =         {
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath externalResourcesRequired (false|true) #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath id ID #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xlink:href CDATA #REQUIRED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = mpath;
                xml = "<!ATTLIST mpath xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(desc | title | metadata)*";
        xml = "<!ELEMENT mpath (desc | title | metadata)*>";
    };
    path =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path cursor CDATA #IMPLIED>";
            };
            d =             {
                "attribute_name" = d;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path d CDATA #REQUIRED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = path;
                xml = "<!ATTLIST path id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            pathLength =             {
                "attribute_name" = pathLength;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path pathLength CDATA #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = path;
                xml = "<!ATTLIST path xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = path;
                xml = "<!ATTLIST path xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = path;
                xml = "<!ATTLIST path xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*";
        xml = "<!ELEMENT path (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>";
    };
    pattern =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            patternContentUnits =             {
                "attribute_name" = patternContentUnits;
                "attribute_type" =                 (
                    userSpaceOnUse,
                    objectBoundingBox
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern patternContentUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>";
            };
            patternTransform =             {
                "attribute_name" = patternTransform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern patternTransform CDATA #IMPLIED>";
            };
            patternUnits =             {
                "attribute_name" = patternUnits;
                "attribute_type" =                 (
                    userSpaceOnUse,
                    objectBoundingBox
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern patternUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            preserveAspectRatio =             {
                "attribute_name" = preserveAspectRatio;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "\"xMidYMid",
                    "meet\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern preserveAspectRatio CDATA \"xMidYMid meet\">";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            viewBox =             {
                "attribute_name" = viewBox;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern viewBox CDATA #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern x CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = pattern;
                xml = "<!ATTLIST pattern y CDATA #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT pattern (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    polygon =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            points =             {
                "attribute_name" = points;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon points CDATA #REQUIRED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polygon;
                xml = "<!ATTLIST polygon xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*";
        xml = "<!ELEMENT polygon (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>";
    };
    polyline =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            points =             {
                "attribute_name" = points;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline points CDATA #REQUIRED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = polyline;
                xml = "<!ATTLIST polyline xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*";
        xml = "<!ELEMENT polyline (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>";
    };
    radialGradient =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient cursor CDATA #IMPLIED>";
            };
            cx =             {
                "attribute_name" = cx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient cx CDATA #IMPLIED>";
            };
            cy =             {
                "attribute_name" = cy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient cy CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            fx =             {
                "attribute_name" = fx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient fx CDATA #IMPLIED>";
            };
            fy =             {
                "attribute_name" = fy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient fy CDATA #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient glyph-orientation-vertical CDATA #IMPLIED>";
            };
            gradientTransform =             {
                "attribute_name" = gradientTransform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient gradientTransform CDATA #IMPLIED>";
            };
            gradientUnits =             {
                "attribute_name" = gradientUnits;
                "attribute_type" =                 (
                    userSpaceOnUse,
                    objectBoundingBox
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient gradientUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient mask CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            r =             {
                "attribute_name" = r;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient r CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            spreadMethod =             {
                "attribute_name" = spreadMethod;
                "attribute_type" =                 (
                    pad,
                    reflect,
                    repeat
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient spreadMethod (pad|reflect|repeat) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = radialGradient;
                xml = "<!ATTLIST radialGradient xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(desc | title | metadata | stop | animate | set | animateTransform)*";
        xml = "<!ELEMENT radialGradient (desc | title | metadata | stop | animate | set | animateTransform)*>";
    };
    rect =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect height CDATA #REQUIRED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect requiredFeatures CDATA #IMPLIED>";
            };
            rx =             {
                "attribute_name" = rx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect rx CDATA #IMPLIED>";
            };
            ry =             {
                "attribute_name" = ry;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect ry CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect width CDATA #REQUIRED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = rect;
                xml = "<!ATTLIST rect y CDATA #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*";
        xml = "<!ELEMENT rect (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>";
    };
    script =     {
        attributes =         {
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = script;
                xml = "<!ATTLIST script externalResourcesRequired (false|true) #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = script;
                xml = "<!ATTLIST script id ID #IMPLIED>";
            };
            type =             {
                "attribute_name" = type;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = script;
                xml = "<!ATTLIST script type CDATA #REQUIRED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = script;
                xml = "<!ATTLIST script xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = script;
                xml = "<!ATTLIST script xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = script;
                xml = "<!ATTLIST script xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = script;
                xml = "<!ATTLIST script xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = script;
                xml = "<!ATTLIST script xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = script;
                xml = "<!ATTLIST script xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = script;
                xml = "<!ATTLIST script xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = script;
                xml = "<!ATTLIST script xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = script;
                xml = "<!ATTLIST script xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = script;
                xml = "<!ATTLIST script xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = script;
                xml = "<!ATTLIST script xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(#PCDATA)*";
        xml = "<!ELEMENT script (#PCDATA)*>";
    };
    set =     {
        attributes =         {
            attributeName =             {
                "attribute_name" = attributeName;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set attributeName CDATA #REQUIRED>";
            };
            attributeType =             {
                "attribute_name" = attributeType;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set attributeType CDATA #IMPLIED>";
            };
            begin =             {
                "attribute_name" = begin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set begin CDATA #IMPLIED>";
            };
            dur =             {
                "attribute_name" = dur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set dur CDATA #IMPLIED>";
            };
            end =             {
                "attribute_name" = end;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set end CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = set;
                xml = "<!ATTLIST set externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    remove,
                    freeze
                );
                "default_value" =                 (
                    "\"remove\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = set;
                xml = "<!ATTLIST set fill (remove|freeze) \"remove\">";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = set;
                xml = "<!ATTLIST set id ID #IMPLIED>";
            };
            max =             {
                "attribute_name" = max;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set max CDATA #IMPLIED>";
            };
            min =             {
                "attribute_name" = min;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set min CDATA #IMPLIED>";
            };
            onbegin =             {
                "attribute_name" = onbegin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set onbegin CDATA #IMPLIED>";
            };
            onend =             {
                "attribute_name" = onend;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set onend CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set onload CDATA #IMPLIED>";
            };
            onrepeat =             {
                "attribute_name" = onrepeat;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set onrepeat CDATA #IMPLIED>";
            };
            repeatCount =             {
                "attribute_name" = repeatCount;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set repeatCount CDATA #IMPLIED>";
            };
            repeatDur =             {
                "attribute_name" = repeatDur;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set repeatDur CDATA #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set requiredFeatures CDATA #IMPLIED>";
            };
            restart =             {
                "attribute_name" = restart;
                "attribute_type" =                 (
                    always,
                    never,
                    whenNotActive
                );
                "default_value" =                 (
                    "\"always\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = set;
                xml = "<!ATTLIST set restart (always|never|whenNotActive) \"always\">";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set systemLanguage CDATA #IMPLIED>";
            };
            to =             {
                "attribute_name" = to;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set to CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = set;
                xml = "<!ATTLIST set xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set xlink:href CDATA #IMPLIED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = set;
                xml = "<!ATTLIST set xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = set;
                xml = "<!ATTLIST set xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = set;
                xml = "<!ATTLIST set xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = set;
                xml = "<!ATTLIST set xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = set;
                xml = "<!ATTLIST set xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(desc | title | metadata)*";
        xml = "<!ELEMENT set (desc | title | metadata)*>";
    };
    stop =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop enable-background CDATA #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop mask CDATA #IMPLIED>";
            };
            offset =             {
                "attribute_name" = offset;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop offset CDATA #REQUIRED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = stop;
                xml = "<!ATTLIST stop xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(animate | set | animateColor)*";
        xml = "<!ELEMENT stop (animate | set | animateColor)*>";
    };
    style =     {
        attributes =         {
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = style;
                xml = "<!ATTLIST style id ID #IMPLIED>";
            };
            media =             {
                "attribute_name" = media;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = style;
                xml = "<!ATTLIST style media CDATA #IMPLIED>";
            };
            title =             {
                "attribute_name" = title;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = style;
                xml = "<!ATTLIST style title CDATA #IMPLIED>";
            };
            type =             {
                "attribute_name" = type;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = style;
                xml = "<!ATTLIST style type CDATA #REQUIRED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = style;
                xml = "<!ATTLIST style xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = style;
                xml = "<!ATTLIST style xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    preserve
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"preserve\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = style;
                xml = "<!ATTLIST style xml:space (preserve) #FIXED \"preserve\">";
            };
        };
        value = "(#PCDATA)*";
        xml = "<!ELEMENT style (#PCDATA)*>";
    };
    svg =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            baseProfile =             {
                "attribute_name" = baseProfile;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg baseProfile CDATA #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            contentScriptType =             {
                "attribute_name" = contentScriptType;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "\"application/ecmascript\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg contentScriptType CDATA \"application/ecmascript\">";
            };
            contentStyleType =             {
                "attribute_name" = contentStyleType;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "\"text/css\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg contentStyleType CDATA \"text/css\">";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg mask CDATA #IMPLIED>";
            };
            onabort =             {
                "attribute_name" = onabort;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onabort CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onclick CDATA #IMPLIED>";
            };
            onerror =             {
                "attribute_name" = onerror;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onerror CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onmouseup CDATA #IMPLIED>";
            };
            onresize =             {
                "attribute_name" = onresize;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onresize CDATA #IMPLIED>";
            };
            onscroll =             {
                "attribute_name" = onscroll;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onscroll CDATA #IMPLIED>";
            };
            onunload =             {
                "attribute_name" = onunload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onunload CDATA #IMPLIED>";
            };
            onzoom =             {
                "attribute_name" = onzoom;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg onzoom CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            preserveAspectRatio =             {
                "attribute_name" = preserveAspectRatio;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "\"xMidYMid",
                    "meet\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg preserveAspectRatio CDATA \"xMidYMid meet\">";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            version =             {
                "attribute_name" = version;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"1.1\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg version CDATA #FIXED \"1.1\">";
            };
            viewBox =             {
                "attribute_name" = viewBox;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg viewBox CDATA #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg xml:space (default|preserve) #IMPLIED>";
            };
            xmlns =             {
                "attribute_name" = xmlns;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/2000/svg\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg xmlns CDATA #FIXED \"http://www.w3.org/2000/svg\">";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg y CDATA #IMPLIED>";
            };
            zoomAndPan =             {
                "attribute_name" = zoomAndPan;
                "attribute_type" =                 (
                    disable,
                    magnify
                );
                "default_value" =                 (
                    "\"magnify\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = svg;
                xml = "<!ATTLIST svg zoomAndPan (disable|magnify) \"magnify\">";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT svg (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    switch =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = switch;
                xml = "<!ATTLIST switch xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | svg | g | use | text | animate | set | animateMotion | animateColor | animateTransform | switch | image | path | rect | circle | line | ellipse | polyline | polygon | a | foreignObject)*";
        xml = "<!ELEMENT switch (desc | title | metadata | svg | g | use | text | animate | set | animateMotion | animateColor | animateTransform | switch | image | path | rect | circle | line | ellipse | polyline | polygon | a | foreignObject)*>";
    };
    symbol =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            preserveAspectRatio =             {
                "attribute_name" = preserveAspectRatio;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "\"xMidYMid",
                    "meet\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol preserveAspectRatio CDATA \"xMidYMid meet\">";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol style CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            viewBox =             {
                "attribute_name" = viewBox;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol viewBox CDATA #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = symbol;
                xml = "<!ATTLIST symbol xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*";
        xml = "<!ELEMENT symbol (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>";
    };
    text =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            dx =             {
                "attribute_name" = dx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text dx CDATA #IMPLIED>";
            };
            dy =             {
                "attribute_name" = dy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text dy CDATA #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = text;
                xml = "<!ATTLIST text id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text kerning CDATA #IMPLIED>";
            };
            lengthAdjust =             {
                "attribute_name" = lengthAdjust;
                "attribute_type" =                 (
                    spacing,
                    spacingAndGlyphs
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text lengthAdjust (spacing|spacingAndGlyphs) #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text requiredFeatures CDATA #IMPLIED>";
            };
            rotate =             {
                "attribute_name" = rotate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text rotate CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            textLength =             {
                "attribute_name" = textLength;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text textLength CDATA #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = text;
                xml = "<!ATTLIST text xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = text;
                xml = "<!ATTLIST text xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = text;
                xml = "<!ATTLIST text y CDATA #IMPLIED>";
            };
        };
        value = "(#PCDATA | desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | tspan | tref | textPath | altGlyph | a)*";
        xml = "<!ELEMENT text (#PCDATA | desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | tspan | tref | textPath | altGlyph | a)*>";
    };
    textPath =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath kerning CDATA #IMPLIED>";
            };
            lengthAdjust =             {
                "attribute_name" = lengthAdjust;
                "attribute_type" =                 (
                    spacing,
                    spacingAndGlyphs
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath lengthAdjust (spacing|spacingAndGlyphs) #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath mask CDATA #IMPLIED>";
            };
            method =             {
                "attribute_name" = method;
                "attribute_type" =                 (
                    align,
                    stretch
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath method (align|stretch) #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            spacing =             {
                "attribute_name" = spacing;
                "attribute_type" =                 (
                    auto,
                    exact
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath spacing (auto|exact) #IMPLIED>";
            };
            startOffset =             {
                "attribute_name" = startOffset;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath startOffset CDATA #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            textLength =             {
                "attribute_name" = textLength;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath textLength CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xlink:href CDATA #REQUIRED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = textPath;
                xml = "<!ATTLIST textPath xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
        };
        value = "(#PCDATA | tspan | tref | altGlyph | animate | set | animateColor | desc | title | metadata | a)*";
        xml = "<!ELEMENT textPath (#PCDATA | tspan | tref | altGlyph | animate | set | animateColor | desc | title | metadata | a)*>";
    };
    title =     {
        attributes =         {
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = title;
                xml = "<!ATTLIST title class CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = title;
                xml = "<!ATTLIST title id ID #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = title;
                xml = "<!ATTLIST title style CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = title;
                xml = "<!ATTLIST title xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = title;
                xml = "<!ATTLIST title xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = title;
                xml = "<!ATTLIST title xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "(#PCDATA)*";
        xml = "<!ELEMENT title (#PCDATA)*>";
    };
    tref =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            dx =             {
                "attribute_name" = dx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref dx CDATA #IMPLIED>";
            };
            dy =             {
                "attribute_name" = dy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref dy CDATA #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref kerning CDATA #IMPLIED>";
            };
            lengthAdjust =             {
                "attribute_name" = lengthAdjust;
                "attribute_type" =                 (
                    spacing,
                    spacingAndGlyphs
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref lengthAdjust (spacing|spacingAndGlyphs) #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref requiredFeatures CDATA #IMPLIED>";
            };
            rotate =             {
                "attribute_name" = rotate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref rotate CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            textLength =             {
                "attribute_name" = textLength;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref textLength CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref x CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xlink:href CDATA #REQUIRED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    other
                );
                "default_value" =                 (
                    "\"other\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xlink:show (other) \"other\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tref;
                xml = "<!ATTLIST tref y CDATA #IMPLIED>";
            };
        };
        value = "(animate | set | animateColor | desc | title | metadata)*";
        xml = "<!ELEMENT tref (animate | set | animateColor | desc | title | metadata)*>";
    };
    tspan =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            dx =             {
                "attribute_name" = dx;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan dx CDATA #IMPLIED>";
            };
            dy =             {
                "attribute_name" = dy;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan dy CDATA #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan glyph-orientation-vertical CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan kerning CDATA #IMPLIED>";
            };
            lengthAdjust =             {
                "attribute_name" = lengthAdjust;
                "attribute_type" =                 (
                    spacing,
                    spacingAndGlyphs
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan lengthAdjust (spacing|spacingAndGlyphs) #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan requiredFeatures CDATA #IMPLIED>";
            };
            rotate =             {
                "attribute_name" = rotate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan rotate CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            textLength =             {
                "attribute_name" = textLength;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan textLength CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan visibility (visible|hidden|inherit) #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan x CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan xml:space (default|preserve) #IMPLIED>";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = tspan;
                xml = "<!ATTLIST tspan y CDATA #IMPLIED>";
            };
        };
        value = "(#PCDATA | tspan | tref | altGlyph | animate | set | animateColor | desc | title | metadata | a)*";
        xml = "<!ELEMENT tspan (#PCDATA | tspan | tref | altGlyph | animate | set | animateColor | desc | title | metadata | a)*>";
    };
    use =     {
        attributes =         {
            "alignment-baseline" =             {
                "attribute_name" = "alignment-baseline";
                "attribute_type" =                 (
                    auto,
                    baseline,
                    "before-edge",
                    "text-before-edge",
                    middle,
                    central,
                    "after-edge",
                    "text-after-edge",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>";
            };
            "baseline-shift" =             {
                "attribute_name" = "baseline-shift";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use baseline-shift CDATA #IMPLIED>";
            };
            class =             {
                "attribute_name" = class;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use class CDATA #IMPLIED>";
            };
            clip =             {
                "attribute_name" = clip;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use clip CDATA #IMPLIED>";
            };
            "clip-path" =             {
                "attribute_name" = "clip-path";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use clip-path CDATA #IMPLIED>";
            };
            "clip-rule" =             {
                "attribute_name" = "clip-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use clip-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            color =             {
                "attribute_name" = color;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use color CDATA #IMPLIED>";
            };
            "color-interpolation" =             {
                "attribute_name" = "color-interpolation";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-interpolation-filters" =             {
                "attribute_name" = "color-interpolation-filters";
                "attribute_type" =                 (
                    auto,
                    sRGB,
                    linearRGB,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>";
            };
            "color-profile" =             {
                "attribute_name" = "color-profile";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use color-profile CDATA #IMPLIED>";
            };
            "color-rendering" =             {
                "attribute_name" = "color-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            cursor =             {
                "attribute_name" = cursor;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use cursor CDATA #IMPLIED>";
            };
            direction =             {
                "attribute_name" = direction;
                "attribute_type" =                 (
                    ltr,
                    rtl,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use direction (ltr|rtl|inherit) #IMPLIED>";
            };
            display =             {
                "attribute_name" = display;
                "attribute_type" =                 (
                    inline,
                    block,
                    "list-item",
                    "run-in",
                    compact,
                    marker,
                    table,
                    "inline-table",
                    "table-row-group",
                    "table-header-group",
                    "table-footer-group",
                    "table-row",
                    "table-column-group",
                    "table-column",
                    "table-cell",
                    "table-caption",
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>";
            };
            "dominant-baseline" =             {
                "attribute_name" = "dominant-baseline";
                "attribute_type" =                 (
                    auto,
                    "use-script",
                    "no-change",
                    "reset-size",
                    ideographic,
                    alphabetic,
                    hanging,
                    mathematical,
                    central,
                    middle,
                    "text-after-edge",
                    "text-before-edge",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>";
            };
            "enable-background" =             {
                "attribute_name" = "enable-background";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use enable-background CDATA #IMPLIED>";
            };
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use externalResourcesRequired (false|true) #IMPLIED>";
            };
            fill =             {
                "attribute_name" = fill;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use fill CDATA #IMPLIED>";
            };
            "fill-opacity" =             {
                "attribute_name" = "fill-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use fill-opacity CDATA #IMPLIED>";
            };
            "fill-rule" =             {
                "attribute_name" = "fill-rule";
                "attribute_type" =                 (
                    nonzero,
                    evenodd,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use fill-rule (nonzero|evenodd|inherit) #IMPLIED>";
            };
            filter =             {
                "attribute_name" = filter;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use filter CDATA #IMPLIED>";
            };
            "flood-color" =             {
                "attribute_name" = "flood-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use flood-color CDATA #IMPLIED>";
            };
            "flood-opacity" =             {
                "attribute_name" = "flood-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use flood-opacity CDATA #IMPLIED>";
            };
            "font-family" =             {
                "attribute_name" = "font-family";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use font-family CDATA #IMPLIED>";
            };
            "font-size" =             {
                "attribute_name" = "font-size";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use font-size CDATA #IMPLIED>";
            };
            "font-size-adjust" =             {
                "attribute_name" = "font-size-adjust";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use font-size-adjust CDATA #IMPLIED>";
            };
            "font-stretch" =             {
                "attribute_name" = "font-stretch";
                "attribute_type" =                 (
                    normal,
                    wider,
                    narrower,
                    "ultra-condensed",
                    "extra-condensed",
                    condensed,
                    "semi-condensed",
                    "semi-expanded",
                    expanded,
                    "extra-expanded",
                    "ultra-expanded",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>";
            };
            "font-style" =             {
                "attribute_name" = "font-style";
                "attribute_type" =                 (
                    normal,
                    italic,
                    oblique,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use font-style (normal|italic|oblique|inherit) #IMPLIED>";
            };
            "font-variant" =             {
                "attribute_name" = "font-variant";
                "attribute_type" =                 (
                    normal,
                    "small-caps",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use font-variant (normal|small-caps|inherit) #IMPLIED>";
            };
            "font-weight" =             {
                "attribute_name" = "font-weight";
                "attribute_type" =                 (
                    normal,
                    bold,
                    bolder,
                    lighter,
                    100,
                    200,
                    300,
                    400,
                    500,
                    600,
                    700,
                    800,
                    900,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>";
            };
            "glyph-orientation-horizontal" =             {
                "attribute_name" = "glyph-orientation-horizontal";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use glyph-orientation-horizontal CDATA #IMPLIED>";
            };
            "glyph-orientation-vertical" =             {
                "attribute_name" = "glyph-orientation-vertical";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use glyph-orientation-vertical CDATA #IMPLIED>";
            };
            height =             {
                "attribute_name" = height;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use height CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = use;
                xml = "<!ATTLIST use id ID #IMPLIED>";
            };
            "image-rendering" =             {
                "attribute_name" = "image-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeQuality,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>";
            };
            kerning =             {
                "attribute_name" = kerning;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use kerning CDATA #IMPLIED>";
            };
            "letter-spacing" =             {
                "attribute_name" = "letter-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use letter-spacing CDATA #IMPLIED>";
            };
            "lighting-color" =             {
                "attribute_name" = "lighting-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use lighting-color CDATA #IMPLIED>";
            };
            "marker-end" =             {
                "attribute_name" = "marker-end";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use marker-end CDATA #IMPLIED>";
            };
            "marker-mid" =             {
                "attribute_name" = "marker-mid";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use marker-mid CDATA #IMPLIED>";
            };
            "marker-start" =             {
                "attribute_name" = "marker-start";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use marker-start CDATA #IMPLIED>";
            };
            mask =             {
                "attribute_name" = mask;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use mask CDATA #IMPLIED>";
            };
            onactivate =             {
                "attribute_name" = onactivate;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onactivate CDATA #IMPLIED>";
            };
            onclick =             {
                "attribute_name" = onclick;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onclick CDATA #IMPLIED>";
            };
            onfocusin =             {
                "attribute_name" = onfocusin;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onfocusin CDATA #IMPLIED>";
            };
            onfocusout =             {
                "attribute_name" = onfocusout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onfocusout CDATA #IMPLIED>";
            };
            onload =             {
                "attribute_name" = onload;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onload CDATA #IMPLIED>";
            };
            onmousedown =             {
                "attribute_name" = onmousedown;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onmousedown CDATA #IMPLIED>";
            };
            onmousemove =             {
                "attribute_name" = onmousemove;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onmousemove CDATA #IMPLIED>";
            };
            onmouseout =             {
                "attribute_name" = onmouseout;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onmouseout CDATA #IMPLIED>";
            };
            onmouseover =             {
                "attribute_name" = onmouseover;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onmouseover CDATA #IMPLIED>";
            };
            onmouseup =             {
                "attribute_name" = onmouseup;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use onmouseup CDATA #IMPLIED>";
            };
            opacity =             {
                "attribute_name" = opacity;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use opacity CDATA #IMPLIED>";
            };
            overflow =             {
                "attribute_name" = overflow;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    scroll,
                    auto,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>";
            };
            "pointer-events" =             {
                "attribute_name" = "pointer-events";
                "attribute_type" =                 (
                    visiblePainted,
                    visibleFill,
                    visibleStroke,
                    visible,
                    painted,
                    fill,
                    stroke,
                    all,
                    none,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>";
            };
            requiredExtensions =             {
                "attribute_name" = requiredExtensions;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use requiredExtensions CDATA #IMPLIED>";
            };
            requiredFeatures =             {
                "attribute_name" = requiredFeatures;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use requiredFeatures CDATA #IMPLIED>";
            };
            "shape-rendering" =             {
                "attribute_name" = "shape-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    crispEdges,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>";
            };
            "stop-color" =             {
                "attribute_name" = "stop-color";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use stop-color CDATA #IMPLIED>";
            };
            "stop-opacity" =             {
                "attribute_name" = "stop-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use stop-opacity CDATA #IMPLIED>";
            };
            stroke =             {
                "attribute_name" = stroke;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use stroke CDATA #IMPLIED>";
            };
            "stroke-dasharray" =             {
                "attribute_name" = "stroke-dasharray";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use stroke-dasharray CDATA #IMPLIED>";
            };
            "stroke-dashoffset" =             {
                "attribute_name" = "stroke-dashoffset";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use stroke-dashoffset CDATA #IMPLIED>";
            };
            "stroke-linecap" =             {
                "attribute_name" = "stroke-linecap";
                "attribute_type" =                 (
                    butt,
                    round,
                    square,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use stroke-linecap (butt|round|square|inherit) #IMPLIED>";
            };
            "stroke-linejoin" =             {
                "attribute_name" = "stroke-linejoin";
                "attribute_type" =                 (
                    miter,
                    round,
                    bevel,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>";
            };
            "stroke-miterlimit" =             {
                "attribute_name" = "stroke-miterlimit";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use stroke-miterlimit CDATA #IMPLIED>";
            };
            "stroke-opacity" =             {
                "attribute_name" = "stroke-opacity";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use stroke-opacity CDATA #IMPLIED>";
            };
            "stroke-width" =             {
                "attribute_name" = "stroke-width";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use stroke-width CDATA #IMPLIED>";
            };
            style =             {
                "attribute_name" = style;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use style CDATA #IMPLIED>";
            };
            systemLanguage =             {
                "attribute_name" = systemLanguage;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use systemLanguage CDATA #IMPLIED>";
            };
            "text-anchor" =             {
                "attribute_name" = "text-anchor";
                "attribute_type" =                 (
                    start,
                    middle,
                    end,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use text-anchor (start|middle|end|inherit) #IMPLIED>";
            };
            "text-decoration" =             {
                "attribute_name" = "text-decoration";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use text-decoration CDATA #IMPLIED>";
            };
            "text-rendering" =             {
                "attribute_name" = "text-rendering";
                "attribute_type" =                 (
                    auto,
                    optimizeSpeed,
                    optimizeLegibility,
                    geometricPrecision,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>";
            };
            transform =             {
                "attribute_name" = transform;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use transform CDATA #IMPLIED>";
            };
            "unicode-bidi" =             {
                "attribute_name" = "unicode-bidi";
                "attribute_type" =                 (
                    normal,
                    embed,
                    "bidi-override",
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>";
            };
            visibility =             {
                "attribute_name" = visibility;
                "attribute_type" =                 (
                    visible,
                    hidden,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use visibility (visible|hidden|inherit) #IMPLIED>";
            };
            width =             {
                "attribute_name" = width;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use width CDATA #IMPLIED>";
            };
            "word-spacing" =             {
                "attribute_name" = "word-spacing";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use word-spacing CDATA #IMPLIED>";
            };
            "writing-mode" =             {
                "attribute_name" = "writing-mode";
                "attribute_type" =                 (
                    "lr-tb",
                    "rl-tb",
                    "tb-rl",
                    lr,
                    rl,
                    tb,
                    inherit
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>";
            };
            x =             {
                "attribute_name" = x;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use x CDATA #IMPLIED>";
            };
            "xlink:actuate" =             {
                "attribute_name" = "xlink:actuate";
                "attribute_type" =                 (
                    onLoad
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"onLoad\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use xlink:actuate (onLoad) #FIXED \"onLoad\">";
            };
            "xlink:arcrole" =             {
                "attribute_name" = "xlink:arcrole";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use xlink:arcrole CDATA #IMPLIED>";
            };
            "xlink:href" =             {
                "attribute_name" = "xlink:href";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use xlink:href CDATA #REQUIRED>";
            };
            "xlink:role" =             {
                "attribute_name" = "xlink:role";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use xlink:role CDATA #IMPLIED>";
            };
            "xlink:show" =             {
                "attribute_name" = "xlink:show";
                "attribute_type" =                 (
                    embed
                );
                "default_value" =                 (
                    "\"embed\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use xlink:show (embed) \"embed\">";
            };
            "xlink:title" =             {
                "attribute_name" = "xlink:title";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use xlink:title CDATA #IMPLIED>";
            };
            "xlink:type" =             {
                "attribute_name" = "xlink:type";
                "attribute_type" =                 (
                    simple
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"simple\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use xlink:type (simple) #FIXED \"simple\">";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = use;
                xml = "<!ATTLIST use xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = use;
                xml = "<!ATTLIST use xml:space (default|preserve) #IMPLIED>";
            };
            "xmlns:xlink" =             {
                "attribute_name" = "xmlns:xlink";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#FIXED",
                    "\"http://www.w3.org/1999/xlink\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use xmlns:xlink CDATA #FIXED \"http://www.w3.org/1999/xlink\">";
            };
            y =             {
                "attribute_name" = y;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = use;
                xml = "<!ATTLIST use y CDATA #IMPLIED>";
            };
        };
        value = "(desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*";
        xml = "<!ELEMENT use (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>";
    };
    view =     {
        attributes =         {
            externalResourcesRequired =             {
                "attribute_name" = externalResourcesRequired;
                "attribute_type" =                 (
                    false,
                    true
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = view;
                xml = "<!ATTLIST view externalResourcesRequired (false|true) #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = view;
                xml = "<!ATTLIST view id ID #IMPLIED>";
            };
            preserveAspectRatio =             {
                "attribute_name" = preserveAspectRatio;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "\"xMidYMid",
                    "meet\""
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = view;
                xml = "<!ATTLIST view preserveAspectRatio CDATA \"xMidYMid meet\">";
            };
            viewBox =             {
                "attribute_name" = viewBox;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = view;
                xml = "<!ATTLIST view viewBox CDATA #IMPLIED>";
            };
            viewTarget =             {
                "attribute_name" = viewTarget;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = view;
                xml = "<!ATTLIST view viewTarget CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = view;
                xml = "<!ATTLIST view xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = view;
                xml = "<!ATTLIST view xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = view;
                xml = "<!ATTLIST view xml:space (default|preserve) #IMPLIED>";
            };
            zoomAndPan =             {
                "attribute_name" = zoomAndPan;
                "attribute_type" =                 (
                    disable,
                    magnify
                );
                "default_value" =                 (
                    "\"magnify\""
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = view;
                xml = "<!ATTLIST view zoomAndPan (disable|magnify) \"magnify\">";
            };
        };
        value = "(desc | title | metadata)*";
        xml = "<!ELEMENT view (desc | title | metadata)*>";
    };
    vkern =     {
        attributes =         {
            g1 =             {
                "attribute_name" = g1;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = vkern;
                xml = "<!ATTLIST vkern g1 CDATA #IMPLIED>";
            };
            g2 =             {
                "attribute_name" = g2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = vkern;
                xml = "<!ATTLIST vkern g2 CDATA #IMPLIED>";
            };
            id =             {
                "attribute_name" = id;
                "attribute_type" =                 (
                    ID
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeIDKind;
                "element_name" = vkern;
                xml = "<!ATTLIST vkern id ID #IMPLIED>";
            };
            k =             {
                "attribute_name" = k;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#REQUIRED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = vkern;
                xml = "<!ATTLIST vkern k CDATA #REQUIRED>";
            };
            u1 =             {
                "attribute_name" = u1;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = vkern;
                xml = "<!ATTLIST vkern u1 CDATA #IMPLIED>";
            };
            u2 =             {
                "attribute_name" = u2;
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = vkern;
                xml = "<!ATTLIST vkern u2 CDATA #IMPLIED>";
            };
            "xml:base" =             {
                "attribute_name" = "xml:base";
                "attribute_type" =                 (
                    CDATA
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeCDATAKind;
                "element_name" = vkern;
                xml = "<!ATTLIST vkern xml:base CDATA #IMPLIED>";
            };
            "xml:lang" =             {
                "attribute_name" = "xml:lang";
                "attribute_type" =                 (
                    NMTOKEN
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeNMTokenKind;
                "element_name" = vkern;
                xml = "<!ATTLIST vkern xml:lang NMTOKEN #IMPLIED>";
            };
            "xml:space" =             {
                "attribute_name" = "xml:space";
                "attribute_type" =                 (
                    default,
                    preserve
                );
                "default_value" =                 (
                    "#IMPLIED"
                );
                description = NSXMLAttributeEnumerationKind;
                "element_name" = vkern;
                xml = "<!ATTLIST vkern xml:space (default|preserve) #IMPLIED>";
            };
        };
        value = "";
        xml = "<!ELEMENT vkern EMPTY>";
    };
}

=====================================================================================


Printing description of self->elementContentsDictionary:
{
    a =     {
        "#PCDATA" = "#PCDATA";
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    altGlyph =     {
        "#PCDATA" = "#PCDATA";
    };
    altGlyphDef =     {
        "altGlyphItem+" = "altGlyphItem+";
        "glyphRef+" = "glyphRef+";
    };
    altGlyphItem =     {
        "glyphRef+" = "glyphRef+";
    };
    animate =     {
        desc = desc;
        metadata = metadata;
        title = title;
    };
    animateColor =     {
        desc = desc;
        metadata = metadata;
        title = title;
    };
    animateMotion =     {
        desc = desc;
        metadata = metadata;
        "metadata\n        ?" = "metadata\n        ?";
        "metadata\n       +,\n           mpath,\n\t         desc" = "metadata\n       +,\n           mpath,\n\t         desc";
        "mpath,\n          desc" = "mpath,\n          desc";
        title = title;
    };
    animateTransform =     {
        desc = desc;
        metadata = metadata;
        title = title;
    };
    circle =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    clipPath =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        desc = desc;
        ellipse = ellipse;
        line = line;
        metadata = metadata;
        path = path;
        polygon = polygon;
        polyline = polyline;
        rect = rect;
        set = set;
        text = text;
        title = title;
        use = use;
    };
    "color-profile" =     {
        desc = desc;
        metadata = metadata;
        title = title;
    };
    cursor =     {
        desc = desc;
        metadata = metadata;
        title = title;
    };
    defs =     {
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    desc =     {
        "#PCDATA" = "#PCDATA";
    };
    ellipse =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    feBlend =     {
        animate = animate;
        set = set;
    };
    feColorMatrix =     {
        animate = animate;
        set = set;
    };
    feComponentTransfer =     {
        "feFuncR?, feFuncG?, feFuncB?,\n       feFuncA?" = "feFuncR?, feFuncG?, feFuncB?,\n       feFuncA?";
    };
    feComposite =     {
        animate = animate;
        set = set;
    };
    feConvolveMatrix =     {
        animate = animate;
        set = set;
    };
    feDiffuseLighting =     {
        animateColor = animateColor;
        feDistantLight = feDistantLight;
        fePointLight = fePointLight;
        "feSpotLight ,  animate" = "feSpotLight ,  animate";
        set = set;
    };
    feDisplacementMap =     {
        animate = animate;
        set = set;
    };
    feDistantLight =     {
        animate = animate;
        set = set;
    };
    feFlood =     {
        animate = animate;
        animateColor = animateColor;
        set = set;
    };
    feFuncA =     {
        animate = animate;
        set = set;
    };
    feFuncB =     {
        animate = animate;
        set = set;
    };
    feFuncG =     {
        animate = animate;
        set = set;
    };
    feFuncR =     {
        animate = animate;
        set = set;
    };
    feGaussianBlur =     {
        animate = animate;
        set = set;
    };
    feImage =     {
        animate = animate;
        animateTransform = animateTransform;
        set = set;
    };
    feMerge =     {
        feMergeNode = feMergeNode;
    };
    feMergeNode =     {
        animate = animate;
        set = set;
    };
    feMorphology =     {
        animate = animate;
        set = set;
    };
    feOffset =     {
        animate = animate;
        set = set;
    };
    fePointLight =     {
        animate = animate;
        set = set;
    };
    feSpecularLighting =     {
        animateColor = animateColor;
        feDistantLight = feDistantLight;
        fePointLight = fePointLight;
        "feSpotLight ,  animate" = "feSpotLight ,  animate";
        set = set;
    };
    feSpotLight =     {
        animate = animate;
        set = set;
    };
    feTile =     {
        animate = animate;
        set = set;
    };
    feTurbulence =     {
        animate = animate;
        set = set;
    };
    filter =     {
        animate = animate;
        desc = desc;
        feBlend = feBlend;
        feColorMatrix = feColorMatrix;
        feComponentTransfer = feComponentTransfer;
        feComposite = feComposite;
        feConvolveMatrix = feConvolveMatrix;
        feDiffuseLighting = feDiffuseLighting;
        feDisplacementMap = feDisplacementMap;
        feFlood = feFlood;
        feGaussianBlur = feGaussianBlur;
        feImage = feImage;
        feMerge = feMerge;
        feMorphology = feMorphology;
        feOffset = feOffset;
        feSpecularLighting = feSpecularLighting;
        feTile = feTile;
        feTurbulence = feTurbulence;
        metadata = metadata;
        set = set;
        title = title;
    };
    font =     {
        desc = desc;
        "font-face" = "font-face";
        glyph = glyph;
        hkern = hkern;
        metadata = metadata;
        "missing-glyph" = "missing-glyph";
        title = title;
        vkern = vkern;
    };
    "font-face" =     {
        desc = desc;
        "font-face-src,\n          desc" = "font-face-src,\n          desc";
        metadata = metadata;
        "metadata\n        ?" = "metadata\n        ?";
        "metadata\n       +,\n             font-face-src,\n\t           desc" = "metadata\n       +,\n             font-face-src,\n\t           desc";
        title = title;
    };
    "font-face-format" =     {
        EMPTY = EMPTY;
    };
    "font-face-name" =     {
        EMPTY = EMPTY;
    };
    "font-face-src" =     {
        "font-face-name\n        +" = "font-face-name\n        +";
        "font-face-uri" = "font-face-uri";
    };
    "font-face-uri" =     {
        "font-face-format" = "font-face-format";
    };
    foreignObject =     {
        "#PCDATA" = "#PCDATA";
    };
    g =     {
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    glyph =     {
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    glyphRef =     {
        EMPTY = EMPTY;
    };
    hkern =     {
        EMPTY = EMPTY;
    };
    image =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    line =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    linearGradient =     {
        animate = animate;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        stop = stop;
        title = title;
    };
    marker =     {
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    mask =     {
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    metadata =     {
        "#PCDATA" = "#PCDATA";
    };
    "missing-glyph" =     {
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    mpath =     {
        desc = desc;
        metadata = metadata;
        title = title;
    };
    path =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    pattern =     {
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    polygon =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    polyline =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    radialGradient =     {
        animate = animate;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        stop = stop;
        title = title;
    };
    rect =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    script =     {
        "#PCDATA" = "#PCDATA";
    };
    set =     {
        desc = desc;
        metadata = metadata;
        title = title;
    };
    stop =     {
        animate = animate;
        animateColor = animateColor;
        set = set;
    };
    style =     {
        "#PCDATA" = "#PCDATA";
    };
    svg =     {
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    switch =     {
        a = a;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        desc = desc;
        ellipse = ellipse;
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        metadata = metadata;
        path = path;
        polygon = polygon;
        polyline = polyline;
        rect = rect;
        set = set;
        svg = svg;
        switch = switch;
        text = text;
        title = title;
        use = use;
    };
    symbol =     {
        a = a;
        altGlyphDef = altGlyphDef;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        circle = circle;
        clipPath = clipPath;
        "color-profile" = "color-profile";
        cursor = cursor;
        defs = defs;
        desc = desc;
        ellipse = ellipse;
        filter = filter;
        font = font;
        "font-face" = "font-face";
        foreignObject = foreignObject;
        g = g;
        image = image;
        line = line;
        linearGradient = linearGradient;
        marker = marker;
        mask = mask;
        metadata = metadata;
        path = path;
        pattern = pattern;
        polygon = polygon;
        polyline = polyline;
        radialGradient = radialGradient;
        rect = rect;
        script = script;
        set = set;
        style = style;
        svg = svg;
        switch = switch;
        symbol = symbol;
        text = text;
        title = title;
        use = use;
        view = view;
    };
    text =     {
        "#PCDATA" = "#PCDATA";
        a = a;
        altGlyph = altGlyph;
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        textPath = textPath;
        title = title;
        tref = tref;
        tspan = tspan;
    };
    textPath =     {
        "#PCDATA" = "#PCDATA";
        a = a;
        altGlyph = altGlyph;
        animate = animate;
        animateColor = animateColor;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
        tref = tref;
        tspan = tspan;
    };
    title =     {
        "#PCDATA" = "#PCDATA";
    };
    tref =     {
        animate = animate;
        animateColor = animateColor;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    tspan =     {
        "#PCDATA" = "#PCDATA";
        a = a;
        altGlyph = altGlyph;
        animate = animate;
        animateColor = animateColor;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
        tref = tref;
        tspan = tspan;
    };
    use =     {
        animate = animate;
        animateColor = animateColor;
        animateMotion = animateMotion;
        animateTransform = animateTransform;
        desc = desc;
        metadata = metadata;
        set = set;
        title = title;
    };
    view =     {
        desc = desc;
        metadata = metadata;
        title = title;
    };
    vkern =     {
        EMPTY = EMPTY;
    };
}

=====================================================================================


Printing description of self->svgXmlDtd:
    <!ENTITY % SVG.version "-//W3C//DTD SVG 1.1//EN">
    <!ENTITY % NS.prefixed "IGNORE">
    <!ENTITY % SVG.prefix "">
    <!ENTITY % SVG.profile "">
    <!ENTITY % svg-prefw-redecl.module "IGNORE">
    <!ENTITY % svg-model.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Document Model//EN" "svg11-model.mod">
    <!ENTITY % svg-attribs.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Attribute Collection//EN" "svg11-attribs.mod">
    <!ENTITY % svg-framework.module "INCLUDE">
    <!ENTITY % svg-framework.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Modular Framework//EN" "svg-framework.mod">
    <!ENTITY % svg-datatypes.module "INCLUDE">
    <!ENTITY % svg-datatypes.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Datatypes//EN" "svg-datatypes.mod">
    <!ENTITY % Boolean.datatype "( false | true )">
    <!ENTITY % ClipFillRule.datatype "( nonzero | evenodd | inherit )">
    <!ENTITY % ContentType.datatype "CDATA">
    <!ENTITY % Coordinate.datatype "CDATA">
    <!ENTITY % Coordinates.datatype "CDATA">
    <!ENTITY % Color.datatype "CDATA">
    <!ENTITY % Integer.datatype "CDATA">
    <!ENTITY % LanguageCode.datatype "NMTOKEN">
    <!ENTITY % LanguageCodes.datatype "CDATA">
    <!ENTITY % Length.datatype "CDATA">
    <!ENTITY % Lengths.datatype "CDATA">
    <!ENTITY % Number.datatype "CDATA">
    <!ENTITY % Numbers.datatype "CDATA">
    <!ENTITY % OpacityValue.datatype "CDATA">
    <!ENTITY % PathData.datatype "CDATA">
    <!ENTITY % PreserveAspectRatioSpec.datatype "CDATA">
    <!ENTITY % Script.datatype "CDATA">
    <!ENTITY % SVGColor.datatype "CDATA">
    <!ENTITY % Text.datatype "CDATA">
    <!ENTITY % TransformList.datatype "CDATA">
    <!ENTITY % URI.datatype "CDATA">
    <!ENTITY % ViewBoxSpec.datatype "CDATA">
    <!ENTITY % svg-qname.module "INCLUDE">
    <!ENTITY % svg-qname.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Qualified Name//EN" "svg-qname.mod">
    <!ENTITY % SVG.prefixed "IGNORE">
    <!ENTITY % SVG.xmlns "http://www.w3.org/2000/svg">
    <!ENTITY % XLINK.xmlns "http://www.w3.org/1999/xlink">
    <!ENTITY % XLINK.prefix "xlink">
    <!ENTITY % SVG.pfx "">
    <!ENTITY % XLINK.pfx "xlink:">
    <!ENTITY % SVG.xmlns.extra.attrib "">
    <!ENTITY % XLINK.xmlns.attrib "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'">
    <!ENTITY % NS.decl.attrib "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'
     ">
    <!ENTITY % SVG.xmlns.attrib "xmlns CDATA #FIXED 'http://www.w3.org/2000/svg'
      xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'">
    <!ENTITY % SVG.svg.qname "svg">
    <!ENTITY % SVG.g.qname "g">
    <!ENTITY % SVG.defs.qname "defs">
    <!ENTITY % SVG.desc.qname "desc">
    <!ENTITY % SVG.title.qname "title">
    <!ENTITY % SVG.metadata.qname "metadata">
    <!ENTITY % SVG.symbol.qname "symbol">
    <!ENTITY % SVG.use.qname "use">
    <!ENTITY % SVG.switch.qname "switch">
    <!ENTITY % SVG.image.qname "image">
    <!ENTITY % SVG.style.qname "style">
    <!ENTITY % SVG.path.qname "path">
    <!ENTITY % SVG.rect.qname "rect">
    <!ENTITY % SVG.circle.qname "circle">
    <!ENTITY % SVG.line.qname "line">
    <!ENTITY % SVG.ellipse.qname "ellipse">
    <!ENTITY % SVG.polyline.qname "polyline">
    <!ENTITY % SVG.polygon.qname "polygon">
    <!ENTITY % SVG.text.qname "text">
    <!ENTITY % SVG.tspan.qname "tspan">
    <!ENTITY % SVG.tref.qname "tref">
    <!ENTITY % SVG.textPath.qname "textPath">
    <!ENTITY % SVG.altGlyph.qname "altGlyph">
    <!ENTITY % SVG.altGlyphDef.qname "altGlyphDef">
    <!ENTITY % SVG.altGlyphItem.qname "altGlyphItem">
    <!ENTITY % SVG.glyphRef.qname "glyphRef">
    <!ENTITY % SVG.marker.qname "marker">
    <!ENTITY % SVG.color-profile.qname "color-profile">
    <!ENTITY % SVG.linearGradient.qname "linearGradient">
    <!ENTITY % SVG.radialGradient.qname "radialGradient">
    <!ENTITY % SVG.stop.qname "stop">
    <!ENTITY % SVG.pattern.qname "pattern">
    <!ENTITY % SVG.clipPath.qname "clipPath">
    <!ENTITY % SVG.mask.qname "mask">
    <!ENTITY % SVG.filter.qname "filter">
    <!ENTITY % SVG.feBlend.qname "feBlend">
    <!ENTITY % SVG.feColorMatrix.qname "feColorMatrix">
    <!ENTITY % SVG.feComponentTransfer.qname "feComponentTransfer">
    <!ENTITY % SVG.feComposite.qname "feComposite">
    <!ENTITY % SVG.feConvolveMatrix.qname "feConvolveMatrix">
    <!ENTITY % SVG.feDiffuseLighting.qname "feDiffuseLighting">
    <!ENTITY % SVG.feDisplacementMap.qname "feDisplacementMap">
    <!ENTITY % SVG.feFlood.qname "feFlood">
    <!ENTITY % SVG.feGaussianBlur.qname "feGaussianBlur">
    <!ENTITY % SVG.feImage.qname "feImage">
    <!ENTITY % SVG.feMerge.qname "feMerge">
    <!ENTITY % SVG.feMergeNode.qname "feMergeNode">
    <!ENTITY % SVG.feMorphology.qname "feMorphology">
    <!ENTITY % SVG.feOffset.qname "feOffset">
    <!ENTITY % SVG.feSpecularLighting.qname "feSpecularLighting">
    <!ENTITY % SVG.feTile.qname "feTile">
    <!ENTITY % SVG.feTurbulence.qname "feTurbulence">
    <!ENTITY % SVG.feDistantLight.qname "feDistantLight">
    <!ENTITY % SVG.fePointLight.qname "fePointLight">
    <!ENTITY % SVG.feSpotLight.qname "feSpotLight">
    <!ENTITY % SVG.feFuncR.qname "feFuncR">
    <!ENTITY % SVG.feFuncG.qname "feFuncG">
    <!ENTITY % SVG.feFuncB.qname "feFuncB">
    <!ENTITY % SVG.feFuncA.qname "feFuncA">
    <!ENTITY % SVG.cursor.qname "cursor">
    <!ENTITY % SVG.a.qname "a">
    <!ENTITY % SVG.view.qname "view">
    <!ENTITY % SVG.script.qname "script">
    <!ENTITY % SVG.animate.qname "animate">
    <!ENTITY % SVG.set.qname "set">
    <!ENTITY % SVG.animateMotion.qname "animateMotion">
    <!ENTITY % SVG.animateColor.qname "animateColor">
    <!ENTITY % SVG.animateTransform.qname "animateTransform">
    <!ENTITY % SVG.mpath.qname "mpath">
    <!ENTITY % SVG.font.qname "font">
    <!ENTITY % SVG.font-face.qname "font-face">
    <!ENTITY % SVG.glyph.qname "glyph">
    <!ENTITY % SVG.missing-glyph.qname "missing-glyph">
    <!ENTITY % SVG.hkern.qname "hkern">
    <!ENTITY % SVG.vkern.qname "vkern">
    <!ENTITY % SVG.font-face-src.qname "font-face-src">
    <!ENTITY % SVG.font-face-uri.qname "font-face-uri">
    <!ENTITY % SVG.font-face-format.qname "font-face-format">
    <!ENTITY % SVG.font-face-name.qname "font-face-name">
    <!ENTITY % SVG.foreignObject.qname "foreignObject">
    <!ENTITY % svg-model.module "INCLUDE">
    <!ENTITY % SVG.Description.extra.class "">
    <!ENTITY % SVG.Description.class "desc | title | metadata
     ">
    <!ENTITY % SVG.Use.extra.class "">
    <!ENTITY % SVG.Use.class "| use ">
    <!ENTITY % SVG.Structure.extra.class "">
    <!ENTITY % SVG.Structure.class "| svg | g | defs | symbol
       | use  ">
    <!ENTITY % SVG.Conditional.extra.class "">
    <!ENTITY % SVG.Conditional.class "| switch ">
    <!ENTITY % SVG.Image.extra.class "">
    <!ENTITY % SVG.Image.class "| image ">
    <!ENTITY % SVG.Style.extra.class "">
    <!ENTITY % SVG.Style.class "| style ">
    <!ENTITY % SVG.Shape.extra.class "">
    <!ENTITY % SVG.Shape.class "| path | rect | circle
     | line | ellipse | polyline
     | polygon ">
    <!ENTITY % SVG.Text.extra.class "">
    <!ENTITY % SVG.Text.class "| text | altGlyphDef ">
    <!ENTITY % SVG.TextContent.extra.class "">
    <!ENTITY % SVG.TextContent.class "| tspan | tref | textPath
     | altGlyph ">
    <!ENTITY % SVG.Marker.extra.class "">
    <!ENTITY % SVG.Marker.class "| marker ">
    <!ENTITY % SVG.ColorProfile.extra.class "">
    <!ENTITY % SVG.ColorProfile.class "| color-profile ">
    <!ENTITY % SVG.Gradient.extra.class "">
    <!ENTITY % SVG.Gradient.class "| linearGradient | radialGradient
       ">
    <!ENTITY % SVG.Pattern.extra.class "">
    <!ENTITY % SVG.Pattern.class "| pattern ">
    <!ENTITY % SVG.Clip.extra.class "">
    <!ENTITY % SVG.Clip.class "| clipPath ">
    <!ENTITY % SVG.Mask.extra.class "">
    <!ENTITY % SVG.Mask.class "| mask ">
    <!ENTITY % SVG.Filter.extra.class "">
    <!ENTITY % SVG.Filter.class "| filter ">
    <!ENTITY % SVG.FilterPrimitive.extra.class "">
    <!ENTITY % SVG.FilterPrimitive.class "| feBlend | feColorMatrix
     | feComponentTransfer | feComposite
     | feConvolveMatrix | feDiffuseLighting
     | feDisplacementMap | feFlood
     | feGaussianBlur | feImage | feMerge
     | feMorphology | feOffset
     | feSpecularLighting | feTile
     | feTurbulence ">
    <!ENTITY % SVG.Cursor.extra.class "">
    <!ENTITY % SVG.Cursor.class "| cursor ">
    <!ENTITY % SVG.Hyperlink.extra.class "">
    <!ENTITY % SVG.Hyperlink.class "| a ">
    <!ENTITY % SVG.View.extra.class "">
    <!ENTITY % SVG.View.class "| view ">
    <!ENTITY % SVG.Script.extra.class "">
    <!ENTITY % SVG.Script.class "| script ">
    <!ENTITY % SVG.Animation.extra.class "">
    <!ENTITY % SVG.Animation.class "animate | set | animateMotion |
     animateColor | animateTransform
     ">
    <!ENTITY % SVG.Font.extra.class "">
    <!ENTITY % SVG.Font.class "| font | font-face ">
    <!ENTITY % SVG.Extensibility.extra.class "">
    <!ENTITY % SVG.Extensibility.class "| foreignObject ">
    <!ENTITY % svg-attribs.module "INCLUDE">
    <!ENTITY % ExtensionList.datatype "CDATA">
    <!ENTITY % FeatureList.datatype "CDATA">
    <!ENTITY % SVG.Conditional.extra.attrib "">
    <!ENTITY % SVG.Conditional.attrib "requiredFeatures CDATA #IMPLIED
     requiredExtensions CDATA #IMPLIED
     systemLanguage CDATA #IMPLIED
     ">
    <!ENTITY % ClassList.datatype "CDATA">
    <!ENTITY % StyleSheet.datatype "CDATA">
    <!ENTITY % SVG.Style.extra.attrib "">
    <!ENTITY % SVG.Style.attrib "style CDATA #IMPLIED
     class CDATA #IMPLIED
     ">
    <!ENTITY % BaselineShiftValue.datatype "CDATA">
    <!ENTITY % FontFamilyValue.datatype "CDATA">
    <!ENTITY % FontSizeValue.datatype "CDATA">
    <!ENTITY % FontSizeAdjustValue.datatype "CDATA">
    <!ENTITY % GlyphOrientationHorizontalValue.datatype "CDATA">
    <!ENTITY % GlyphOrientationVerticalValue.datatype "CDATA">
    <!ENTITY % KerningValue.datatype "CDATA">
    <!ENTITY % SpacingValue.datatype "CDATA">
    <!ENTITY % TextDecorationValue.datatype "CDATA">
    <!ENTITY % SVG.Text.extra.attrib "">
    <!ENTITY % SVG.Text.attrib "writing-mode ( lr-tb | rl-tb | tb-rl | lr | rl | tb | inherit ) #IMPLIED
     ">
    <!ENTITY % SVG.TextContent.extra.attrib "">
    <!ENTITY % SVG.TextContent.attrib "alignment-baseline ( auto | baseline | before-edge | text-before-edge |
                          middle | central | after-edge | text-after-edge |
                          ideographic | alphabetic | hanging | mathematical |
                          inherit ) #IMPLIED
     baseline-shift CDATA #IMPLIED
     direction ( ltr | rtl | inherit ) #IMPLIED
     dominant-baseline ( auto | use-script | no-change | reset-size |
                         ideographic | alphabetic | hanging | mathematical |
                         central | middle | text-after-edge | text-before-edge |
                         inherit ) #IMPLIED
     glyph-orientation-horizontal CDATA
                                  #IMPLIED
     glyph-orientation-vertical CDATA
                                #IMPLIED
     kerning CDATA #IMPLIED
     letter-spacing CDATA #IMPLIED
     text-anchor ( start | middle | end | inherit ) #IMPLIED
     text-decoration CDATA #IMPLIED
     unicode-bidi ( normal | embed | bidi-override | inherit ) #IMPLIED
     word-spacing CDATA #IMPLIED
     ">
    <!ENTITY % SVG.Font.extra.attrib "">
    <!ENTITY % SVG.Font.attrib "font-family CDATA #IMPLIED
     font-size CDATA #IMPLIED
     font-size-adjust CDATA #IMPLIED
     font-stretch ( normal | wider | narrower | ultra-condensed |
                    extra-condensed | condensed | semi-condensed |
                    semi-expanded | expanded | extra-expanded |
                    ultra-expanded | inherit ) #IMPLIED
     font-style ( normal | italic | oblique | inherit ) #IMPLIED
     font-variant ( normal | small-caps | inherit ) #IMPLIED
     font-weight ( normal | bold | bolder | lighter | 100 | 200 | 300 | 400 |
                   500 | 600 | 700 | 800 | 900 | inherit ) #IMPLIED
     ">
    <!ENTITY % MarkerValue.datatype "CDATA">
    <!ENTITY % SVG.Marker.extra.attrib "">
    <!ENTITY % SVG.Marker.attrib "marker-start CDATA #IMPLIED
     marker-mid CDATA #IMPLIED
     marker-end CDATA #IMPLIED
     ">
    <!ENTITY % SVG.ColorProfile.extra.attrib "">
    <!ENTITY % SVG.ColorProfile.attrib "color-profile CDATA #IMPLIED
     ">
    <!ENTITY % NumberOrPercentage.datatype "CDATA">
    <!ENTITY % SVG.Gradient.extra.attrib "">
    <!ENTITY % SVG.Gradient.attrib "stop-color CDATA #IMPLIED
     stop-opacity CDATA #IMPLIED
     ">
    <!ENTITY % ClipPathValue.datatype "CDATA">
    <!ENTITY % SVG.Clip.extra.attrib "">
    <!ENTITY % SVG.Clip.attrib "clip-path CDATA #IMPLIED
     clip-rule ( nonzero | evenodd | inherit ) #IMPLIED
     ">
    <!ENTITY % MaskValue.datatype "CDATA">
    <!ENTITY % SVG.Mask.extra.attrib "">
    <!ENTITY % SVG.Mask.attrib "mask CDATA #IMPLIED
     ">
    <!ENTITY % FilterValue.datatype "CDATA">
    <!ENTITY % NumberOptionalNumber.datatype "CDATA">
    <!ENTITY % SVG.Filter.extra.attrib "">
    <!ENTITY % SVG.Filter.attrib "filter CDATA #IMPLIED
     ">
    <!ENTITY % SVG.FilterColor.extra.attrib "">
    <!ENTITY % SVG.FilterColor.attrib "color-interpolation-filters ( auto | sRGB | linearRGB | inherit )
                                   #IMPLIED
     ">
    <!ENTITY % CursorValue.datatype "CDATA">
    <!ENTITY % SVG.Cursor.extra.attrib "">
    <!ENTITY % SVG.Cursor.attrib "cursor CDATA #IMPLIED
     ">
    <!ENTITY % svg-postfw-redecl.module "IGNORE">
    <!ENTITY % svg-core-attrib.module "INCLUDE">
    <!ENTITY % svg-core-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Core Attribute//EN" "svg-core-attrib.mod">
    <!ENTITY % SVG.id.attrib "id ID #IMPLIED">
    <!ENTITY % SVG.base.attrib "xml:base CDATA #IMPLIED">
    <!ENTITY % SVG.lang.attrib "xml:lang NMTOKEN #IMPLIED">
    <!ENTITY % SVG.space.attrib "xml:space ( default | preserve ) #IMPLIED">
    <!ENTITY % SVG.Core.extra.attrib "">
    <!ENTITY % SVG.Core.attrib "id ID #IMPLIED
     xml:base CDATA #IMPLIED
     xml:lang NMTOKEN #IMPLIED
     xml:space ( default | preserve ) #IMPLIED
     ">
    <!ENTITY % svg-container-attrib.module "INCLUDE">
    <!ENTITY % svg-container-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Container Attribute//EN" "svg-container-attrib.mod">
    <!ENTITY % EnableBackgroundValue.datatype "CDATA">
    <!ENTITY % SVG.enable-background.attrib "enable-background CDATA #IMPLIED">
    <!ENTITY % SVG.Container.extra.attrib "">
    <!ENTITY % SVG.Container.attrib "enable-background CDATA #IMPLIED
     ">
    <!ENTITY % svg-viewport-attrib.module "INCLUDE">
    <!ENTITY % svg-viewport-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Viewport Attribute//EN" "svg-viewport-attrib.mod">
    <!ENTITY % ClipValue.datatype "CDATA">
    <!ENTITY % SVG.clip.attrib "clip CDATA #IMPLIED">
    <!ENTITY % SVG.overflow.attrib "overflow ( visible | hidden | scroll | auto | inherit ) #IMPLIED">
    <!ENTITY % SVG.Viewport.extra.attrib "">
    <!ENTITY % SVG.Viewport.attrib "clip CDATA #IMPLIED
     overflow ( visible | hidden | scroll | auto | inherit ) #IMPLIED
     ">
    <!ENTITY % svg-paint-attrib.module "INCLUDE">
    <!ENTITY % svg-paint-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Paint Attribute//EN" "svg-paint-attrib.mod">
    <!ENTITY % Paint.datatype "CDATA">
    <!ENTITY % StrokeDashArrayValue.datatype "CDATA">
    <!ENTITY % StrokeDashOffsetValue.datatype "CDATA">
    <!ENTITY % StrokeMiterLimitValue.datatype "CDATA">
    <!ENTITY % StrokeWidthValue.datatype "CDATA">
    <!ENTITY % SVG.fill.attrib "fill CDATA #IMPLIED">
    <!ENTITY % SVG.fill-rule.attrib "fill-rule ( nonzero | evenodd | inherit ) #IMPLIED">
    <!ENTITY % SVG.stroke.attrib "stroke CDATA #IMPLIED">
    <!ENTITY % SVG.stroke-dasharray.attrib "stroke-dasharray CDATA #IMPLIED">
    <!ENTITY % SVG.stroke-dashoffset.attrib "stroke-dashoffset CDATA #IMPLIED">
    <!ENTITY % SVG.stroke-linecap.attrib "stroke-linecap ( butt | round | square | inherit ) #IMPLIED">
    <!ENTITY % SVG.stroke-linejoin.attrib "stroke-linejoin ( miter | round | bevel | inherit ) #IMPLIED">
    <!ENTITY % SVG.stroke-miterlimit.attrib "stroke-miterlimit CDATA #IMPLIED">
    <!ENTITY % SVG.stroke-width.attrib "stroke-width CDATA #IMPLIED">
    <!ENTITY % SVG.Paint.extra.attrib "">
    <!ENTITY % SVG.Paint.attrib "fill CDATA #IMPLIED
     fill-rule ( nonzero | evenodd | inherit ) #IMPLIED
     stroke CDATA #IMPLIED
     stroke-dasharray CDATA #IMPLIED
     stroke-dashoffset CDATA #IMPLIED
     stroke-linecap ( butt | round | square | inherit ) #IMPLIED
     stroke-linejoin ( miter | round | bevel | inherit ) #IMPLIED
     stroke-miterlimit CDATA #IMPLIED
     stroke-width CDATA #IMPLIED
     ">
    <!ENTITY % SVG.color.attrib "color CDATA #IMPLIED">
    <!ENTITY % SVG.color-interpolation.attrib "color-interpolation ( auto | sRGB | linearRGB | inherit ) #IMPLIED">
    <!ENTITY % SVG.color-rendering.attrib "color-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )
                       #IMPLIED">
    <!ENTITY % SVG.Color.extra.attrib "">
    <!ENTITY % SVG.Color.attrib "color CDATA #IMPLIED
     color-interpolation ( auto | sRGB | linearRGB | inherit ) #IMPLIED
     color-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )
                       #IMPLIED
     ">
    <!ENTITY % svg-opacity-attrib.module "INCLUDE">
    <!ENTITY % svg-opacity-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Paint Opacity Attribute//EN" "svg-opacity-attrib.mod">
    <!ENTITY % SVG.opacity.attrib "opacity CDATA #IMPLIED">
    <!ENTITY % SVG.fill-opacity.attrib "fill-opacity CDATA #IMPLIED">
    <!ENTITY % SVG.stroke-opacity.attrib "stroke-opacity CDATA #IMPLIED">
    <!ENTITY % SVG.Opacity.extra.attrib "">
    <!ENTITY % SVG.Opacity.attrib "opacity CDATA #IMPLIED
     fill-opacity CDATA #IMPLIED
     stroke-opacity CDATA #IMPLIED
     ">
    <!ENTITY % svg-graphics-attrib.module "INCLUDE">
    <!ENTITY % svg-graphics-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Graphics Attribute//EN" "svg-graphics-attrib.mod">
    <!ENTITY % SVG.display.attrib "display ( inline | block | list-item | run-in | compact | marker |
               table | inline-table | table-row-group | table-header-group |
               table-footer-group | table-row | table-column-group |
               table-column | table-cell | table-caption | none | inherit )
               #IMPLIED">
    <!ENTITY % SVG.image-rendering.attrib "image-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )
                       #IMPLIED">
    <!ENTITY % SVG.pointer-events.attrib "pointer-events ( visiblePainted | visibleFill | visibleStroke | visible |
                      painted | fill | stroke | all | none | inherit )
                      #IMPLIED">
    <!ENTITY % SVG.shape-rendering.attrib "shape-rendering ( auto | optimizeSpeed | crispEdges | geometricPrecision |
                       inherit ) #IMPLIED">
    <!ENTITY % SVG.text-rendering.attrib "text-rendering ( auto | optimizeSpeed | optimizeLegibility |
                      geometricPrecision | inherit ) #IMPLIED">
    <!ENTITY % SVG.visibility.attrib "visibility ( visible | hidden | inherit ) #IMPLIED">
    <!ENTITY % SVG.Graphics.extra.attrib "">
    <!ENTITY % SVG.Graphics.attrib "display ( inline | block | list-item | run-in | compact | marker |
               table | inline-table | table-row-group | table-header-group |
               table-footer-group | table-row | table-column-group |
               table-column | table-cell | table-caption | none | inherit )
               #IMPLIED
     image-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )
                       #IMPLIED
     pointer-events ( visiblePainted | visibleFill | visibleStroke | visible |
                      painted | fill | stroke | all | none | inherit )
                      #IMPLIED
     shape-rendering ( auto | optimizeSpeed | crispEdges | geometricPrecision |
                       inherit ) #IMPLIED
     text-rendering ( auto | optimizeSpeed | optimizeLegibility |
                      geometricPrecision | inherit ) #IMPLIED
     visibility ( visible | hidden | inherit ) #IMPLIED
     ">
    <!ENTITY % svg-docevents-attrib.module "INCLUDE">
    <!ENTITY % svg-docevents-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Document Events Attribute//EN" "svg-docevents-attrib.mod">
    <!ENTITY % SVG.onunload.attrib "onunload CDATA #IMPLIED">
    <!ENTITY % SVG.onabort.attrib "onabort CDATA #IMPLIED">
    <!ENTITY % SVG.onerror.attrib "onerror CDATA #IMPLIED">
    <!ENTITY % SVG.onresize.attrib "onresize CDATA #IMPLIED">
    <!ENTITY % SVG.onscroll.attrib "onscroll CDATA #IMPLIED">
    <!ENTITY % SVG.onzoom.attrib "onzoom CDATA #IMPLIED">
    <!ENTITY % SVG.DocumentEvents.extra.attrib "">
    <!ENTITY % SVG.DocumentEvents.attrib "onunload CDATA #IMPLIED
     onabort CDATA #IMPLIED
     onerror CDATA #IMPLIED
     onresize CDATA #IMPLIED
     onscroll CDATA #IMPLIED
     onzoom CDATA #IMPLIED
     ">
    <!ENTITY % svg-graphevents-attrib.module "INCLUDE">
    <!ENTITY % svg-graphevents-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Graphical Element Events Attribute//EN" "svg-graphevents-attrib.mod">
    <!ENTITY % SVG.onfocusin.attrib "onfocusin CDATA #IMPLIED">
    <!ENTITY % SVG.onfocusout.attrib "onfocusout CDATA #IMPLIED">
    <!ENTITY % SVG.onactivate.attrib "onactivate CDATA #IMPLIED">
    <!ENTITY % SVG.onclick.attrib "onclick CDATA #IMPLIED">
    <!ENTITY % SVG.onmousedown.attrib "onmousedown CDATA #IMPLIED">
    <!ENTITY % SVG.onmouseup.attrib "onmouseup CDATA #IMPLIED">
    <!ENTITY % SVG.onmouseover.attrib "onmouseover CDATA #IMPLIED">
    <!ENTITY % SVG.onmousemove.attrib "onmousemove CDATA #IMPLIED">
    <!ENTITY % SVG.onmouseout.attrib "onmouseout CDATA #IMPLIED">
    <!ENTITY % SVG.onload.attrib "onload CDATA #IMPLIED">
    <!ENTITY % SVG.GraphicalEvents.extra.attrib "">
    <!ENTITY % SVG.GraphicalEvents.attrib "onfocusin CDATA #IMPLIED
     onfocusout CDATA #IMPLIED
     onactivate CDATA #IMPLIED
     onclick CDATA #IMPLIED
     onmousedown CDATA #IMPLIED
     onmouseup CDATA #IMPLIED
     onmouseover CDATA #IMPLIED
     onmousemove CDATA #IMPLIED
     onmouseout CDATA #IMPLIED
     onload CDATA #IMPLIED
     ">
    <!ENTITY % svg-animevents-attrib.module "INCLUDE">
    <!ENTITY % svg-animevents-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 Animation Events Attribute//EN" "svg-animevents-attrib.mod">
    <!ENTITY % SVG.onbegin.attrib "onbegin CDATA #IMPLIED">
    <!ENTITY % SVG.onend.attrib "onend CDATA #IMPLIED">
    <!ENTITY % SVG.onrepeat.attrib "onrepeat CDATA #IMPLIED">
    <!ENTITY % SVG.AnimationEvents.extra.attrib "">
    <!ENTITY % SVG.AnimationEvents.attrib "onbegin CDATA #IMPLIED
     onend CDATA #IMPLIED
     onrepeat CDATA #IMPLIED
     onload CDATA #IMPLIED
     ">
    <!ENTITY % svg-xlink-attrib.module "INCLUDE">
    <!ENTITY % svg-xlink-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 XLink Attribute//EN" "svg-xlink-attrib.mod">
    <!ENTITY % SVG.XLink.extra.attrib "">
    <!ENTITY % SVG.XLink.attrib "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'
     xlink:type ( simple ) #FIXED 'simple'
     xlink:href CDATA #IMPLIED
     xlink:role CDATA #IMPLIED
     xlink:arcrole CDATA #IMPLIED
     xlink:title CDATA #IMPLIED
     xlink:show ( other ) 'other'
     xlink:actuate ( onLoad ) #FIXED 'onLoad'
     ">
    <!ENTITY % SVG.XLinkRequired.extra.attrib "">
    <!ENTITY % SVG.XLinkRequired.attrib "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'
     xlink:type ( simple ) #FIXED 'simple'
     xlink:href CDATA #REQUIRED
     xlink:role CDATA #IMPLIED
     xlink:arcrole CDATA #IMPLIED
     xlink:title CDATA #IMPLIED
     xlink:show ( other ) 'other'
     xlink:actuate ( onLoad ) #FIXED 'onLoad'
     ">
    <!ENTITY % SVG.XLinkEmbed.extra.attrib "">
    <!ENTITY % SVG.XLinkEmbed.attrib "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'
     xlink:type ( simple ) #FIXED 'simple'
     xlink:href CDATA #REQUIRED
     xlink:role CDATA #IMPLIED
     xlink:arcrole CDATA #IMPLIED
     xlink:title CDATA #IMPLIED
     xlink:show ( embed ) 'embed'
     xlink:actuate ( onLoad ) #FIXED 'onLoad'
     ">
    <!ENTITY % SVG.XLinkReplace.extra.attrib "">
    <!ENTITY % SVG.XLinkReplace.attrib "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'
     xlink:type ( simple ) #FIXED 'simple'
     xlink:href CDATA #REQUIRED
     xlink:role CDATA #IMPLIED
     xlink:arcrole CDATA #IMPLIED
     xlink:title CDATA #IMPLIED
     xlink:show ( new | replace ) 'replace'
     xlink:actuate ( onRequest ) #FIXED 'onRequest'
     ">
    <!ENTITY % svg-extresources-attrib.module "INCLUDE">
    <!ENTITY % svg-extresources-attrib.mod PUBLIC "-//W3C//ENTITIES SVG 1.1 External Resources Attribute//EN" "svg-extresources-attrib.mod">
    <!ENTITY % SVG.externalResourcesRequired.attrib "externalResourcesRequired ( false | true ) #IMPLIED">
    <!ENTITY % SVG.External.extra.attrib "">
    <!ENTITY % SVG.External.attrib "externalResourcesRequired ( false | true ) #IMPLIED
     ">
    <!ENTITY % svg-structure.module "INCLUDE">
    <!ENTITY % svg-structure.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Structure//EN" "svg-structure.mod">
    <!ENTITY % SVG.Presentation.extra.attrib "">
    <!ENTITY % SVG.Presentation.attrib "enable-background CDATA #IMPLIED
     
     clip CDATA #IMPLIED
     overflow ( visible | hidden | scroll | auto | inherit ) #IMPLIED
     
     writing-mode ( lr-tb | rl-tb | tb-rl | lr | rl | tb | inherit ) #IMPLIED
     
     alignment-baseline ( auto | baseline | before-edge | text-before-edge |
                          middle | central | after-edge | text-after-edge |
                          ideographic | alphabetic | hanging | mathematical |
                          inherit ) #IMPLIED
     baseline-shift CDATA #IMPLIED
     direction ( ltr | rtl | inherit ) #IMPLIED
     dominant-baseline ( auto | use-script | no-change | reset-size |
                         ideographic | alphabetic | hanging | mathematical |
                         central | middle | text-after-edge | text-before-edge |
                         inherit ) #IMPLIED
     glyph-orientation-horizontal CDATA
                                  #IMPLIED
     glyph-orientation-vertical CDATA
                                #IMPLIED
     kerning CDATA #IMPLIED
     letter-spacing CDATA #IMPLIED
     text-anchor ( start | middle | end | inherit ) #IMPLIED
     text-decoration CDATA #IMPLIED
     unicode-bidi ( normal | embed | bidi-override | inherit ) #IMPLIED
     word-spacing CDATA #IMPLIED
     
     font-family CDATA #IMPLIED
     font-size CDATA #IMPLIED
     font-size-adjust CDATA #IMPLIED
     font-stretch ( normal | wider | narrower | ultra-condensed |
                    extra-condensed | condensed | semi-condensed |
                    semi-expanded | expanded | extra-expanded |
                    ultra-expanded | inherit ) #IMPLIED
     font-style ( normal | italic | oblique | inherit ) #IMPLIED
     font-variant ( normal | small-caps | inherit ) #IMPLIED
     font-weight ( normal | bold | bolder | lighter | 100 | 200 | 300 | 400 |
                   500 | 600 | 700 | 800 | 900 | inherit ) #IMPLIED
     
     fill CDATA #IMPLIED
     fill-rule ( nonzero | evenodd | inherit ) #IMPLIED
     stroke CDATA #IMPLIED
     stroke-dasharray CDATA #IMPLIED
     stroke-dashoffset CDATA #IMPLIED
     stroke-linecap ( butt | round | square | inherit ) #IMPLIED
     stroke-linejoin ( miter | round | bevel | inherit ) #IMPLIED
     stroke-miterlimit CDATA #IMPLIED
     stroke-width CDATA #IMPLIED
     
     color CDATA #IMPLIED
     color-interpolation ( auto | sRGB | linearRGB | inherit ) #IMPLIED
     color-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )
                       #IMPLIED
     
     opacity CDATA #IMPLIED
     fill-opacity CDATA #IMPLIED
     stroke-opacity CDATA #IMPLIED
     
     display ( inline | block | list-item | run-in | compact | marker |
               table | inline-table | table-row-group | table-header-group |
               table-footer-group | table-row | table-column-group |
               table-column | table-cell | table-caption | none | inherit )
               #IMPLIED
     image-rendering ( auto | optimizeSpeed | optimizeQuality | inherit )
                       #IMPLIED
     pointer-events ( visiblePainted | visibleFill | visibleStroke | visible |
                      painted | fill | stroke | all | none | inherit )
                      #IMPLIED
     shape-rendering ( auto | optimizeSpeed | crispEdges | geometricPrecision |
                       inherit ) #IMPLIED
     text-rendering ( auto | optimizeSpeed | optimizeLegibility |
                      geometricPrecision | inherit ) #IMPLIED
     visibility ( visible | hidden | inherit ) #IMPLIED
     
     marker-start CDATA #IMPLIED
     marker-mid CDATA #IMPLIED
     marker-end CDATA #IMPLIED
     
     color-profile CDATA #IMPLIED
     
     stop-color CDATA #IMPLIED
     stop-opacity CDATA #IMPLIED
     
     clip-path CDATA #IMPLIED
     clip-rule ( nonzero | evenodd | inherit ) #IMPLIED
     
     mask CDATA #IMPLIED
     
     filter CDATA #IMPLIED
     
     color-interpolation-filters ( auto | sRGB | linearRGB | inherit )
                                   #IMPLIED
     
     cursor CDATA #IMPLIED
     
     flood-color CDATA #IMPLIED
     flood-opacity CDATA #IMPLIED
     lighting-color CDATA #IMPLIED
     ">
    <!ENTITY % SVG.svg.extra.content "">
    <!ENTITY % SVG.svg.element "INCLUDE">
    <!ENTITY % SVG.svg.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | svg | g | defs | symbol
       | use  
       | switch  | image  | style 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT svg (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.svg.attlist "INCLUDE">
    <!ATTLIST svg xmlns CDATA #FIXED "http://www.w3.org/2000/svg">
    <!ATTLIST svg xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST svg id ID #IMPLIED>
    <!ATTLIST svg xml:base CDATA #IMPLIED>
    <!ATTLIST svg xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST svg xml:space (default|preserve) #IMPLIED>
    <!ATTLIST svg requiredFeatures CDATA #IMPLIED>
    <!ATTLIST svg requiredExtensions CDATA #IMPLIED>
    <!ATTLIST svg systemLanguage CDATA #IMPLIED>
    <!ATTLIST svg style CDATA #IMPLIED>
    <!ATTLIST svg class CDATA #IMPLIED>
    <!ATTLIST svg enable-background CDATA #IMPLIED>
    <!ATTLIST svg clip CDATA #IMPLIED>
    <!ATTLIST svg overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST svg writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST svg alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST svg baseline-shift CDATA #IMPLIED>
    <!ATTLIST svg direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST svg dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST svg glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST svg glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST svg kerning CDATA #IMPLIED>
    <!ATTLIST svg letter-spacing CDATA #IMPLIED>
    <!ATTLIST svg text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST svg text-decoration CDATA #IMPLIED>
    <!ATTLIST svg unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST svg word-spacing CDATA #IMPLIED>
    <!ATTLIST svg font-family CDATA #IMPLIED>
    <!ATTLIST svg font-size CDATA #IMPLIED>
    <!ATTLIST svg font-size-adjust CDATA #IMPLIED>
    <!ATTLIST svg font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST svg font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST svg font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST svg font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST svg fill CDATA #IMPLIED>
    <!ATTLIST svg fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST svg stroke CDATA #IMPLIED>
    <!ATTLIST svg stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST svg stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST svg stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST svg stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST svg stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST svg stroke-width CDATA #IMPLIED>
    <!ATTLIST svg color CDATA #IMPLIED>
    <!ATTLIST svg color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST svg color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST svg opacity CDATA #IMPLIED>
    <!ATTLIST svg fill-opacity CDATA #IMPLIED>
    <!ATTLIST svg stroke-opacity CDATA #IMPLIED>
    <!ATTLIST svg display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST svg image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST svg pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST svg shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST svg text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST svg visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST svg marker-start CDATA #IMPLIED>
    <!ATTLIST svg marker-mid CDATA #IMPLIED>
    <!ATTLIST svg marker-end CDATA #IMPLIED>
    <!ATTLIST svg color-profile CDATA #IMPLIED>
    <!ATTLIST svg stop-color CDATA #IMPLIED>
    <!ATTLIST svg stop-opacity CDATA #IMPLIED>
    <!ATTLIST svg clip-path CDATA #IMPLIED>
    <!ATTLIST svg clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST svg mask CDATA #IMPLIED>
    <!ATTLIST svg filter CDATA #IMPLIED>
    <!ATTLIST svg color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST svg cursor CDATA #IMPLIED>
    <!ATTLIST svg flood-color CDATA #IMPLIED>
    <!ATTLIST svg flood-opacity CDATA #IMPLIED>
    <!ATTLIST svg lighting-color CDATA #IMPLIED>
    <!ATTLIST svg onunload CDATA #IMPLIED>
    <!ATTLIST svg onabort CDATA #IMPLIED>
    <!ATTLIST svg onerror CDATA #IMPLIED>
    <!ATTLIST svg onresize CDATA #IMPLIED>
    <!ATTLIST svg onscroll CDATA #IMPLIED>
    <!ATTLIST svg onzoom CDATA #IMPLIED>
    <!ATTLIST svg onfocusin CDATA #IMPLIED>
    <!ATTLIST svg onfocusout CDATA #IMPLIED>
    <!ATTLIST svg onactivate CDATA #IMPLIED>
    <!ATTLIST svg onclick CDATA #IMPLIED>
    <!ATTLIST svg onmousedown CDATA #IMPLIED>
    <!ATTLIST svg onmouseup CDATA #IMPLIED>
    <!ATTLIST svg onmouseover CDATA #IMPLIED>
    <!ATTLIST svg onmousemove CDATA #IMPLIED>
    <!ATTLIST svg onmouseout CDATA #IMPLIED>
    <!ATTLIST svg onload CDATA #IMPLIED>
    <!ATTLIST svg externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST svg x CDATA #IMPLIED>
    <!ATTLIST svg y CDATA #IMPLIED>
    <!ATTLIST svg width CDATA #IMPLIED>
    <!ATTLIST svg height CDATA #IMPLIED>
    <!ATTLIST svg viewBox CDATA #IMPLIED>
    <!ATTLIST svg preserveAspectRatio CDATA "xMidYMid meet">
    <!ATTLIST svg zoomAndPan (disable|magnify) "magnify">
    <!ATTLIST svg version CDATA #FIXED "1.1">
    <!ATTLIST svg baseProfile CDATA #IMPLIED>
    <!ATTLIST svg contentScriptType CDATA "application/ecmascript">
    <!ATTLIST svg contentStyleType CDATA "text/css">
    <!ENTITY % SVG.g.extra.content "">
    <!ENTITY % SVG.g.element "INCLUDE">
    <!ENTITY % SVG.g.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | svg | g | defs | symbol
       | use  
       | switch  | image  | style 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT g (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.g.attlist "INCLUDE">
    <!ATTLIST g id ID #IMPLIED>
    <!ATTLIST g xml:base CDATA #IMPLIED>
    <!ATTLIST g xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST g xml:space (default|preserve) #IMPLIED>
    <!ATTLIST g requiredFeatures CDATA #IMPLIED>
    <!ATTLIST g requiredExtensions CDATA #IMPLIED>
    <!ATTLIST g systemLanguage CDATA #IMPLIED>
    <!ATTLIST g style CDATA #IMPLIED>
    <!ATTLIST g class CDATA #IMPLIED>
    <!ATTLIST g enable-background CDATA #IMPLIED>
    <!ATTLIST g clip CDATA #IMPLIED>
    <!ATTLIST g overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST g writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST g alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST g baseline-shift CDATA #IMPLIED>
    <!ATTLIST g direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST g dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST g glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST g glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST g kerning CDATA #IMPLIED>
    <!ATTLIST g letter-spacing CDATA #IMPLIED>
    <!ATTLIST g text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST g text-decoration CDATA #IMPLIED>
    <!ATTLIST g unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST g word-spacing CDATA #IMPLIED>
    <!ATTLIST g font-family CDATA #IMPLIED>
    <!ATTLIST g font-size CDATA #IMPLIED>
    <!ATTLIST g font-size-adjust CDATA #IMPLIED>
    <!ATTLIST g font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST g font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST g font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST g font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST g fill CDATA #IMPLIED>
    <!ATTLIST g fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST g stroke CDATA #IMPLIED>
    <!ATTLIST g stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST g stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST g stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST g stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST g stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST g stroke-width CDATA #IMPLIED>
    <!ATTLIST g color CDATA #IMPLIED>
    <!ATTLIST g color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST g color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST g opacity CDATA #IMPLIED>
    <!ATTLIST g fill-opacity CDATA #IMPLIED>
    <!ATTLIST g stroke-opacity CDATA #IMPLIED>
    <!ATTLIST g display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST g image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST g pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST g shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST g text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST g visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST g marker-start CDATA #IMPLIED>
    <!ATTLIST g marker-mid CDATA #IMPLIED>
    <!ATTLIST g marker-end CDATA #IMPLIED>
    <!ATTLIST g color-profile CDATA #IMPLIED>
    <!ATTLIST g stop-color CDATA #IMPLIED>
    <!ATTLIST g stop-opacity CDATA #IMPLIED>
    <!ATTLIST g clip-path CDATA #IMPLIED>
    <!ATTLIST g clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST g mask CDATA #IMPLIED>
    <!ATTLIST g filter CDATA #IMPLIED>
    <!ATTLIST g color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST g cursor CDATA #IMPLIED>
    <!ATTLIST g flood-color CDATA #IMPLIED>
    <!ATTLIST g flood-opacity CDATA #IMPLIED>
    <!ATTLIST g lighting-color CDATA #IMPLIED>
    <!ATTLIST g onfocusin CDATA #IMPLIED>
    <!ATTLIST g onfocusout CDATA #IMPLIED>
    <!ATTLIST g onactivate CDATA #IMPLIED>
    <!ATTLIST g onclick CDATA #IMPLIED>
    <!ATTLIST g onmousedown CDATA #IMPLIED>
    <!ATTLIST g onmouseup CDATA #IMPLIED>
    <!ATTLIST g onmouseover CDATA #IMPLIED>
    <!ATTLIST g onmousemove CDATA #IMPLIED>
    <!ATTLIST g onmouseout CDATA #IMPLIED>
    <!ATTLIST g onload CDATA #IMPLIED>
    <!ATTLIST g externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST g transform CDATA #IMPLIED>
    <!ENTITY % SVG.defs.extra.content "">
    <!ENTITY % SVG.defs.element "INCLUDE">
    <!ENTITY % SVG.defs.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | svg | g | defs | symbol
       | use  
       | switch  | image  | style 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT defs (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.defs.attlist "INCLUDE">
    <!ATTLIST defs id ID #IMPLIED>
    <!ATTLIST defs xml:base CDATA #IMPLIED>
    <!ATTLIST defs xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST defs xml:space (default|preserve) #IMPLIED>
    <!ATTLIST defs requiredFeatures CDATA #IMPLIED>
    <!ATTLIST defs requiredExtensions CDATA #IMPLIED>
    <!ATTLIST defs systemLanguage CDATA #IMPLIED>
    <!ATTLIST defs style CDATA #IMPLIED>
    <!ATTLIST defs class CDATA #IMPLIED>
    <!ATTLIST defs enable-background CDATA #IMPLIED>
    <!ATTLIST defs clip CDATA #IMPLIED>
    <!ATTLIST defs overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST defs writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST defs alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST defs baseline-shift CDATA #IMPLIED>
    <!ATTLIST defs direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST defs dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST defs glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST defs glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST defs kerning CDATA #IMPLIED>
    <!ATTLIST defs letter-spacing CDATA #IMPLIED>
    <!ATTLIST defs text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST defs text-decoration CDATA #IMPLIED>
    <!ATTLIST defs unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST defs word-spacing CDATA #IMPLIED>
    <!ATTLIST defs font-family CDATA #IMPLIED>
    <!ATTLIST defs font-size CDATA #IMPLIED>
    <!ATTLIST defs font-size-adjust CDATA #IMPLIED>
    <!ATTLIST defs font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST defs font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST defs font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST defs font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST defs fill CDATA #IMPLIED>
    <!ATTLIST defs fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST defs stroke CDATA #IMPLIED>
    <!ATTLIST defs stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST defs stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST defs stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST defs stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST defs stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST defs stroke-width CDATA #IMPLIED>
    <!ATTLIST defs color CDATA #IMPLIED>
    <!ATTLIST defs color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST defs color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST defs opacity CDATA #IMPLIED>
    <!ATTLIST defs fill-opacity CDATA #IMPLIED>
    <!ATTLIST defs stroke-opacity CDATA #IMPLIED>
    <!ATTLIST defs display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST defs image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST defs pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST defs shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST defs text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST defs visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST defs marker-start CDATA #IMPLIED>
    <!ATTLIST defs marker-mid CDATA #IMPLIED>
    <!ATTLIST defs marker-end CDATA #IMPLIED>
    <!ATTLIST defs color-profile CDATA #IMPLIED>
    <!ATTLIST defs stop-color CDATA #IMPLIED>
    <!ATTLIST defs stop-opacity CDATA #IMPLIED>
    <!ATTLIST defs clip-path CDATA #IMPLIED>
    <!ATTLIST defs clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST defs mask CDATA #IMPLIED>
    <!ATTLIST defs filter CDATA #IMPLIED>
    <!ATTLIST defs color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST defs cursor CDATA #IMPLIED>
    <!ATTLIST defs flood-color CDATA #IMPLIED>
    <!ATTLIST defs flood-opacity CDATA #IMPLIED>
    <!ATTLIST defs lighting-color CDATA #IMPLIED>
    <!ATTLIST defs onfocusin CDATA #IMPLIED>
    <!ATTLIST defs onfocusout CDATA #IMPLIED>
    <!ATTLIST defs onactivate CDATA #IMPLIED>
    <!ATTLIST defs onclick CDATA #IMPLIED>
    <!ATTLIST defs onmousedown CDATA #IMPLIED>
    <!ATTLIST defs onmouseup CDATA #IMPLIED>
    <!ATTLIST defs onmouseover CDATA #IMPLIED>
    <!ATTLIST defs onmousemove CDATA #IMPLIED>
    <!ATTLIST defs onmouseout CDATA #IMPLIED>
    <!ATTLIST defs onload CDATA #IMPLIED>
    <!ATTLIST defs externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST defs transform CDATA #IMPLIED>
    <!ENTITY % SVG.desc.extra.content "">
    <!ENTITY % SVG.desc.element "INCLUDE">
    <!ENTITY % SVG.desc.content "( #PCDATA  )*">
    <!ELEMENT desc (#PCDATA)*>
    <!ENTITY % SVG.desc.attlist "INCLUDE">
    <!ATTLIST desc id ID #IMPLIED>
    <!ATTLIST desc xml:base CDATA #IMPLIED>
    <!ATTLIST desc xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST desc xml:space (default|preserve) #IMPLIED>
    <!ATTLIST desc style CDATA #IMPLIED>
    <!ATTLIST desc class CDATA #IMPLIED>
    <!ENTITY % SVG.title.extra.content "">
    <!ENTITY % SVG.title.element "INCLUDE">
    <!ENTITY % SVG.title.content "( #PCDATA  )*">
    <!ELEMENT title (#PCDATA)*>
    <!ENTITY % SVG.title.attlist "INCLUDE">
    <!ATTLIST title id ID #IMPLIED>
    <!ATTLIST title xml:base CDATA #IMPLIED>
    <!ATTLIST title xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST title xml:space (default|preserve) #IMPLIED>
    <!ATTLIST title style CDATA #IMPLIED>
    <!ATTLIST title class CDATA #IMPLIED>
    <!ENTITY % SVG.metadata.extra.content "">
    <!ENTITY % SVG.metadata.element "INCLUDE">
    <!ENTITY % SVG.metadata.content "( #PCDATA  )*">
    <!ELEMENT metadata (#PCDATA)*>
    <!ENTITY % SVG.metadata.attlist "INCLUDE">
    <!ATTLIST metadata id ID #IMPLIED>
    <!ATTLIST metadata xml:base CDATA #IMPLIED>
    <!ATTLIST metadata xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST metadata xml:space (default|preserve) #IMPLIED>
    <!ENTITY % SVG.symbol.extra.content "">
    <!ENTITY % SVG.symbol.element "INCLUDE">
    <!ENTITY % SVG.symbol.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | svg | g | defs | symbol
       | use  
       | switch  | image  | style 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT symbol (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.symbol.attlist "INCLUDE">
    <!ATTLIST symbol id ID #IMPLIED>
    <!ATTLIST symbol xml:base CDATA #IMPLIED>
    <!ATTLIST symbol xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST symbol xml:space (default|preserve) #IMPLIED>
    <!ATTLIST symbol style CDATA #IMPLIED>
    <!ATTLIST symbol class CDATA #IMPLIED>
    <!ATTLIST symbol enable-background CDATA #IMPLIED>
    <!ATTLIST symbol clip CDATA #IMPLIED>
    <!ATTLIST symbol overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST symbol writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST symbol alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST symbol baseline-shift CDATA #IMPLIED>
    <!ATTLIST symbol direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST symbol dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST symbol glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST symbol glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST symbol kerning CDATA #IMPLIED>
    <!ATTLIST symbol letter-spacing CDATA #IMPLIED>
    <!ATTLIST symbol text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST symbol text-decoration CDATA #IMPLIED>
    <!ATTLIST symbol unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST symbol word-spacing CDATA #IMPLIED>
    <!ATTLIST symbol font-family CDATA #IMPLIED>
    <!ATTLIST symbol font-size CDATA #IMPLIED>
    <!ATTLIST symbol font-size-adjust CDATA #IMPLIED>
    <!ATTLIST symbol font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST symbol font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST symbol font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST symbol font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST symbol fill CDATA #IMPLIED>
    <!ATTLIST symbol fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST symbol stroke CDATA #IMPLIED>
    <!ATTLIST symbol stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST symbol stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST symbol stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST symbol stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST symbol stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST symbol stroke-width CDATA #IMPLIED>
    <!ATTLIST symbol color CDATA #IMPLIED>
    <!ATTLIST symbol color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST symbol color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST symbol opacity CDATA #IMPLIED>
    <!ATTLIST symbol fill-opacity CDATA #IMPLIED>
    <!ATTLIST symbol stroke-opacity CDATA #IMPLIED>
    <!ATTLIST symbol display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST symbol image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST symbol pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST symbol shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST symbol text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST symbol visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST symbol marker-start CDATA #IMPLIED>
    <!ATTLIST symbol marker-mid CDATA #IMPLIED>
    <!ATTLIST symbol marker-end CDATA #IMPLIED>
    <!ATTLIST symbol color-profile CDATA #IMPLIED>
    <!ATTLIST symbol stop-color CDATA #IMPLIED>
    <!ATTLIST symbol stop-opacity CDATA #IMPLIED>
    <!ATTLIST symbol clip-path CDATA #IMPLIED>
    <!ATTLIST symbol clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST symbol mask CDATA #IMPLIED>
    <!ATTLIST symbol filter CDATA #IMPLIED>
    <!ATTLIST symbol color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST symbol cursor CDATA #IMPLIED>
    <!ATTLIST symbol flood-color CDATA #IMPLIED>
    <!ATTLIST symbol flood-opacity CDATA #IMPLIED>
    <!ATTLIST symbol lighting-color CDATA #IMPLIED>
    <!ATTLIST symbol onfocusin CDATA #IMPLIED>
    <!ATTLIST symbol onfocusout CDATA #IMPLIED>
    <!ATTLIST symbol onactivate CDATA #IMPLIED>
    <!ATTLIST symbol onclick CDATA #IMPLIED>
    <!ATTLIST symbol onmousedown CDATA #IMPLIED>
    <!ATTLIST symbol onmouseup CDATA #IMPLIED>
    <!ATTLIST symbol onmouseover CDATA #IMPLIED>
    <!ATTLIST symbol onmousemove CDATA #IMPLIED>
    <!ATTLIST symbol onmouseout CDATA #IMPLIED>
    <!ATTLIST symbol onload CDATA #IMPLIED>
    <!ATTLIST symbol externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST symbol viewBox CDATA #IMPLIED>
    <!ATTLIST symbol preserveAspectRatio CDATA "xMidYMid meet">
    <!ENTITY % SVG.use.extra.content "">
    <!ENTITY % SVG.use.element "INCLUDE">
    <!ENTITY % SVG.use.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
        )*">
    <!ELEMENT use (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>
    <!ENTITY % SVG.use.attlist "INCLUDE">
    <!ATTLIST use id ID #IMPLIED>
    <!ATTLIST use xml:base CDATA #IMPLIED>
    <!ATTLIST use xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST use xml:space (default|preserve) #IMPLIED>
    <!ATTLIST use requiredFeatures CDATA #IMPLIED>
    <!ATTLIST use requiredExtensions CDATA #IMPLIED>
    <!ATTLIST use systemLanguage CDATA #IMPLIED>
    <!ATTLIST use style CDATA #IMPLIED>
    <!ATTLIST use class CDATA #IMPLIED>
    <!ATTLIST use enable-background CDATA #IMPLIED>
    <!ATTLIST use clip CDATA #IMPLIED>
    <!ATTLIST use overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST use writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST use alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST use baseline-shift CDATA #IMPLIED>
    <!ATTLIST use direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST use dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST use glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST use glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST use kerning CDATA #IMPLIED>
    <!ATTLIST use letter-spacing CDATA #IMPLIED>
    <!ATTLIST use text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST use text-decoration CDATA #IMPLIED>
    <!ATTLIST use unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST use word-spacing CDATA #IMPLIED>
    <!ATTLIST use font-family CDATA #IMPLIED>
    <!ATTLIST use font-size CDATA #IMPLIED>
    <!ATTLIST use font-size-adjust CDATA #IMPLIED>
    <!ATTLIST use font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST use font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST use font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST use font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST use fill CDATA #IMPLIED>
    <!ATTLIST use fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST use stroke CDATA #IMPLIED>
    <!ATTLIST use stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST use stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST use stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST use stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST use stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST use stroke-width CDATA #IMPLIED>
    <!ATTLIST use color CDATA #IMPLIED>
    <!ATTLIST use color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST use color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST use opacity CDATA #IMPLIED>
    <!ATTLIST use fill-opacity CDATA #IMPLIED>
    <!ATTLIST use stroke-opacity CDATA #IMPLIED>
    <!ATTLIST use display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST use image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST use pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST use shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST use text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST use visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST use marker-start CDATA #IMPLIED>
    <!ATTLIST use marker-mid CDATA #IMPLIED>
    <!ATTLIST use marker-end CDATA #IMPLIED>
    <!ATTLIST use color-profile CDATA #IMPLIED>
    <!ATTLIST use stop-color CDATA #IMPLIED>
    <!ATTLIST use stop-opacity CDATA #IMPLIED>
    <!ATTLIST use clip-path CDATA #IMPLIED>
    <!ATTLIST use clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST use mask CDATA #IMPLIED>
    <!ATTLIST use filter CDATA #IMPLIED>
    <!ATTLIST use color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST use cursor CDATA #IMPLIED>
    <!ATTLIST use flood-color CDATA #IMPLIED>
    <!ATTLIST use flood-opacity CDATA #IMPLIED>
    <!ATTLIST use lighting-color CDATA #IMPLIED>
    <!ATTLIST use onfocusin CDATA #IMPLIED>
    <!ATTLIST use onfocusout CDATA #IMPLIED>
    <!ATTLIST use onactivate CDATA #IMPLIED>
    <!ATTLIST use onclick CDATA #IMPLIED>
    <!ATTLIST use onmousedown CDATA #IMPLIED>
    <!ATTLIST use onmouseup CDATA #IMPLIED>
    <!ATTLIST use onmouseover CDATA #IMPLIED>
    <!ATTLIST use onmousemove CDATA #IMPLIED>
    <!ATTLIST use onmouseout CDATA #IMPLIED>
    <!ATTLIST use onload CDATA #IMPLIED>
    <!ATTLIST use xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST use xlink:type (simple) #FIXED "simple">
    <!ATTLIST use xlink:href CDATA #REQUIRED>
    <!ATTLIST use xlink:role CDATA #IMPLIED>
    <!ATTLIST use xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST use xlink:title CDATA #IMPLIED>
    <!ATTLIST use xlink:show (embed) "embed">
    <!ATTLIST use xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST use externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST use x CDATA #IMPLIED>
    <!ATTLIST use y CDATA #IMPLIED>
    <!ATTLIST use width CDATA #IMPLIED>
    <!ATTLIST use height CDATA #IMPLIED>
    <!ATTLIST use transform CDATA #IMPLIED>
    <!ENTITY % svg-conditional.module "INCLUDE">
    <!ENTITY % svg-conditional.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Conditional Processing//EN" "svg-conditional.mod">
    <!ENTITY % SVG.switch.extra.content "">
    <!ENTITY % SVG.switch.element "INCLUDE">
    <!ENTITY % SVG.switch.content "( desc | title | metadata
      | svg | g
     | use | text | animate | set | animateMotion |
     animateColor | animateTransform
     
       | switch  | image  | path | rect | circle
     | line | ellipse | polyline
     | polygon 
       | a  | foreignObject 
        )*">
    <!ELEMENT switch (desc | title | metadata | svg | g | use | text | animate | set | animateMotion | animateColor | animateTransform | switch | image | path | rect | circle | line | ellipse | polyline | polygon | a | foreignObject)*>
    <!ENTITY % SVG.switch.attlist "INCLUDE">
    <!ATTLIST switch id ID #IMPLIED>
    <!ATTLIST switch xml:base CDATA #IMPLIED>
    <!ATTLIST switch xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST switch xml:space (default|preserve) #IMPLIED>
    <!ATTLIST switch requiredFeatures CDATA #IMPLIED>
    <!ATTLIST switch requiredExtensions CDATA #IMPLIED>
    <!ATTLIST switch systemLanguage CDATA #IMPLIED>
    <!ATTLIST switch style CDATA #IMPLIED>
    <!ATTLIST switch class CDATA #IMPLIED>
    <!ATTLIST switch enable-background CDATA #IMPLIED>
    <!ATTLIST switch clip CDATA #IMPLIED>
    <!ATTLIST switch overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST switch writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST switch alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST switch baseline-shift CDATA #IMPLIED>
    <!ATTLIST switch direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST switch dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST switch glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST switch glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST switch kerning CDATA #IMPLIED>
    <!ATTLIST switch letter-spacing CDATA #IMPLIED>
    <!ATTLIST switch text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST switch text-decoration CDATA #IMPLIED>
    <!ATTLIST switch unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST switch word-spacing CDATA #IMPLIED>
    <!ATTLIST switch font-family CDATA #IMPLIED>
    <!ATTLIST switch font-size CDATA #IMPLIED>
    <!ATTLIST switch font-size-adjust CDATA #IMPLIED>
    <!ATTLIST switch font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST switch font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST switch font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST switch font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST switch fill CDATA #IMPLIED>
    <!ATTLIST switch fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST switch stroke CDATA #IMPLIED>
    <!ATTLIST switch stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST switch stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST switch stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST switch stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST switch stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST switch stroke-width CDATA #IMPLIED>
    <!ATTLIST switch color CDATA #IMPLIED>
    <!ATTLIST switch color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST switch color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST switch opacity CDATA #IMPLIED>
    <!ATTLIST switch fill-opacity CDATA #IMPLIED>
    <!ATTLIST switch stroke-opacity CDATA #IMPLIED>
    <!ATTLIST switch display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST switch image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST switch pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST switch shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST switch text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST switch visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST switch marker-start CDATA #IMPLIED>
    <!ATTLIST switch marker-mid CDATA #IMPLIED>
    <!ATTLIST switch marker-end CDATA #IMPLIED>
    <!ATTLIST switch color-profile CDATA #IMPLIED>
    <!ATTLIST switch stop-color CDATA #IMPLIED>
    <!ATTLIST switch stop-opacity CDATA #IMPLIED>
    <!ATTLIST switch clip-path CDATA #IMPLIED>
    <!ATTLIST switch clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST switch mask CDATA #IMPLIED>
    <!ATTLIST switch filter CDATA #IMPLIED>
    <!ATTLIST switch color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST switch cursor CDATA #IMPLIED>
    <!ATTLIST switch flood-color CDATA #IMPLIED>
    <!ATTLIST switch flood-opacity CDATA #IMPLIED>
    <!ATTLIST switch lighting-color CDATA #IMPLIED>
    <!ATTLIST switch onfocusin CDATA #IMPLIED>
    <!ATTLIST switch onfocusout CDATA #IMPLIED>
    <!ATTLIST switch onactivate CDATA #IMPLIED>
    <!ATTLIST switch onclick CDATA #IMPLIED>
    <!ATTLIST switch onmousedown CDATA #IMPLIED>
    <!ATTLIST switch onmouseup CDATA #IMPLIED>
    <!ATTLIST switch onmouseover CDATA #IMPLIED>
    <!ATTLIST switch onmousemove CDATA #IMPLIED>
    <!ATTLIST switch onmouseout CDATA #IMPLIED>
    <!ATTLIST switch onload CDATA #IMPLIED>
    <!ATTLIST switch externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST switch transform CDATA #IMPLIED>
    <!ENTITY % svg-image.module "INCLUDE">
    <!ENTITY % svg-image.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Image//EN" "svg-image.mod">
    <!ENTITY % SVG.image.extra.content "">
    <!ENTITY % SVG.image.element "INCLUDE">
    <!ENTITY % SVG.image.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
        )*">
    <!ELEMENT image (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>
    <!ENTITY % SVG.image.attlist "INCLUDE">
    <!ATTLIST image id ID #IMPLIED>
    <!ATTLIST image xml:base CDATA #IMPLIED>
    <!ATTLIST image xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST image xml:space (default|preserve) #IMPLIED>
    <!ATTLIST image requiredFeatures CDATA #IMPLIED>
    <!ATTLIST image requiredExtensions CDATA #IMPLIED>
    <!ATTLIST image systemLanguage CDATA #IMPLIED>
    <!ATTLIST image style CDATA #IMPLIED>
    <!ATTLIST image class CDATA #IMPLIED>
    <!ATTLIST image enable-background CDATA #IMPLIED>
    <!ATTLIST image clip CDATA #IMPLIED>
    <!ATTLIST image overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST image writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST image alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST image baseline-shift CDATA #IMPLIED>
    <!ATTLIST image direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST image dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST image glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST image glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST image kerning CDATA #IMPLIED>
    <!ATTLIST image letter-spacing CDATA #IMPLIED>
    <!ATTLIST image text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST image text-decoration CDATA #IMPLIED>
    <!ATTLIST image unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST image word-spacing CDATA #IMPLIED>
    <!ATTLIST image font-family CDATA #IMPLIED>
    <!ATTLIST image font-size CDATA #IMPLIED>
    <!ATTLIST image font-size-adjust CDATA #IMPLIED>
    <!ATTLIST image font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST image font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST image font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST image font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST image fill CDATA #IMPLIED>
    <!ATTLIST image fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST image stroke CDATA #IMPLIED>
    <!ATTLIST image stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST image stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST image stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST image stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST image stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST image stroke-width CDATA #IMPLIED>
    <!ATTLIST image color CDATA #IMPLIED>
    <!ATTLIST image color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST image color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST image opacity CDATA #IMPLIED>
    <!ATTLIST image fill-opacity CDATA #IMPLIED>
    <!ATTLIST image stroke-opacity CDATA #IMPLIED>
    <!ATTLIST image display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST image image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST image pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST image shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST image text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST image visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST image marker-start CDATA #IMPLIED>
    <!ATTLIST image marker-mid CDATA #IMPLIED>
    <!ATTLIST image marker-end CDATA #IMPLIED>
    <!ATTLIST image color-profile CDATA #IMPLIED>
    <!ATTLIST image stop-color CDATA #IMPLIED>
    <!ATTLIST image stop-opacity CDATA #IMPLIED>
    <!ATTLIST image clip-path CDATA #IMPLIED>
    <!ATTLIST image clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST image mask CDATA #IMPLIED>
    <!ATTLIST image filter CDATA #IMPLIED>
    <!ATTLIST image color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST image cursor CDATA #IMPLIED>
    <!ATTLIST image flood-color CDATA #IMPLIED>
    <!ATTLIST image flood-opacity CDATA #IMPLIED>
    <!ATTLIST image lighting-color CDATA #IMPLIED>
    <!ATTLIST image onfocusin CDATA #IMPLIED>
    <!ATTLIST image onfocusout CDATA #IMPLIED>
    <!ATTLIST image onactivate CDATA #IMPLIED>
    <!ATTLIST image onclick CDATA #IMPLIED>
    <!ATTLIST image onmousedown CDATA #IMPLIED>
    <!ATTLIST image onmouseup CDATA #IMPLIED>
    <!ATTLIST image onmouseover CDATA #IMPLIED>
    <!ATTLIST image onmousemove CDATA #IMPLIED>
    <!ATTLIST image onmouseout CDATA #IMPLIED>
    <!ATTLIST image onload CDATA #IMPLIED>
    <!ATTLIST image xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST image xlink:type (simple) #FIXED "simple">
    <!ATTLIST image xlink:href CDATA #REQUIRED>
    <!ATTLIST image xlink:role CDATA #IMPLIED>
    <!ATTLIST image xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST image xlink:title CDATA #IMPLIED>
    <!ATTLIST image xlink:show (embed) "embed">
    <!ATTLIST image xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST image externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST image x CDATA #IMPLIED>
    <!ATTLIST image y CDATA #IMPLIED>
    <!ATTLIST image width CDATA #REQUIRED>
    <!ATTLIST image height CDATA #REQUIRED>
    <!ATTLIST image preserveAspectRatio CDATA "xMidYMid meet">
    <!ATTLIST image transform CDATA #IMPLIED>
    <!ENTITY % svg-style.module "INCLUDE">
    <!ENTITY % svg-style.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Style//EN" "svg-style.mod">
    <!ENTITY % MediaDesc.datatype "CDATA">
    <!ENTITY % SVG.style.extra.content "">
    <!ENTITY % SVG.style.element "INCLUDE">
    <!ENTITY % SVG.style.content "( #PCDATA  )*">
    <!ELEMENT style (#PCDATA)*>
    <!ENTITY % SVG.style.attlist "INCLUDE">
    <!ATTLIST style xml:space (preserve) #FIXED "preserve">
    <!ATTLIST style id ID #IMPLIED>
    <!ATTLIST style xml:base CDATA #IMPLIED>
    <!ATTLIST style xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST style type CDATA #REQUIRED>
    <!ATTLIST style media CDATA #IMPLIED>
    <!ATTLIST style title CDATA #IMPLIED>
    <!ENTITY % svg-shape.module "INCLUDE">
    <!ENTITY % svg-shape.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Shape//EN" "svg-shape.mod">
    <!ENTITY % Points.datatype "CDATA">
    <!ENTITY % SVG.path.extra.content "">
    <!ENTITY % SVG.path.element "INCLUDE">
    <!ENTITY % SVG.path.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
        )*">
    <!ELEMENT path (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>
    <!ENTITY % SVG.path.attlist "INCLUDE">
    <!ATTLIST path id ID #IMPLIED>
    <!ATTLIST path xml:base CDATA #IMPLIED>
    <!ATTLIST path xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST path xml:space (default|preserve) #IMPLIED>
    <!ATTLIST path requiredFeatures CDATA #IMPLIED>
    <!ATTLIST path requiredExtensions CDATA #IMPLIED>
    <!ATTLIST path systemLanguage CDATA #IMPLIED>
    <!ATTLIST path style CDATA #IMPLIED>
    <!ATTLIST path class CDATA #IMPLIED>
    <!ATTLIST path enable-background CDATA #IMPLIED>
    <!ATTLIST path clip CDATA #IMPLIED>
    <!ATTLIST path overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST path writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST path alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST path baseline-shift CDATA #IMPLIED>
    <!ATTLIST path direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST path dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST path glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST path glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST path kerning CDATA #IMPLIED>
    <!ATTLIST path letter-spacing CDATA #IMPLIED>
    <!ATTLIST path text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST path text-decoration CDATA #IMPLIED>
    <!ATTLIST path unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST path word-spacing CDATA #IMPLIED>
    <!ATTLIST path font-family CDATA #IMPLIED>
    <!ATTLIST path font-size CDATA #IMPLIED>
    <!ATTLIST path font-size-adjust CDATA #IMPLIED>
    <!ATTLIST path font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST path font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST path font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST path font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST path fill CDATA #IMPLIED>
    <!ATTLIST path fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST path stroke CDATA #IMPLIED>
    <!ATTLIST path stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST path stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST path stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST path stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST path stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST path stroke-width CDATA #IMPLIED>
    <!ATTLIST path color CDATA #IMPLIED>
    <!ATTLIST path color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST path color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST path opacity CDATA #IMPLIED>
    <!ATTLIST path fill-opacity CDATA #IMPLIED>
    <!ATTLIST path stroke-opacity CDATA #IMPLIED>
    <!ATTLIST path display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST path image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST path pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST path shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST path text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST path visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST path marker-start CDATA #IMPLIED>
    <!ATTLIST path marker-mid CDATA #IMPLIED>
    <!ATTLIST path marker-end CDATA #IMPLIED>
    <!ATTLIST path color-profile CDATA #IMPLIED>
    <!ATTLIST path stop-color CDATA #IMPLIED>
    <!ATTLIST path stop-opacity CDATA #IMPLIED>
    <!ATTLIST path clip-path CDATA #IMPLIED>
    <!ATTLIST path clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST path mask CDATA #IMPLIED>
    <!ATTLIST path filter CDATA #IMPLIED>
    <!ATTLIST path color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST path cursor CDATA #IMPLIED>
    <!ATTLIST path flood-color CDATA #IMPLIED>
    <!ATTLIST path flood-opacity CDATA #IMPLIED>
    <!ATTLIST path lighting-color CDATA #IMPLIED>
    <!ATTLIST path onfocusin CDATA #IMPLIED>
    <!ATTLIST path onfocusout CDATA #IMPLIED>
    <!ATTLIST path onactivate CDATA #IMPLIED>
    <!ATTLIST path onclick CDATA #IMPLIED>
    <!ATTLIST path onmousedown CDATA #IMPLIED>
    <!ATTLIST path onmouseup CDATA #IMPLIED>
    <!ATTLIST path onmouseover CDATA #IMPLIED>
    <!ATTLIST path onmousemove CDATA #IMPLIED>
    <!ATTLIST path onmouseout CDATA #IMPLIED>
    <!ATTLIST path onload CDATA #IMPLIED>
    <!ATTLIST path externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST path d CDATA #REQUIRED>
    <!ATTLIST path pathLength CDATA #IMPLIED>
    <!ATTLIST path transform CDATA #IMPLIED>
    <!ENTITY % SVG.rect.extra.content "">
    <!ENTITY % SVG.rect.element "INCLUDE">
    <!ENTITY % SVG.rect.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
         )*">
    <!ELEMENT rect (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>
    <!ENTITY % SVG.rect.attlist "INCLUDE">
    <!ATTLIST rect id ID #IMPLIED>
    <!ATTLIST rect xml:base CDATA #IMPLIED>
    <!ATTLIST rect xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST rect xml:space (default|preserve) #IMPLIED>
    <!ATTLIST rect requiredFeatures CDATA #IMPLIED>
    <!ATTLIST rect requiredExtensions CDATA #IMPLIED>
    <!ATTLIST rect systemLanguage CDATA #IMPLIED>
    <!ATTLIST rect style CDATA #IMPLIED>
    <!ATTLIST rect class CDATA #IMPLIED>
    <!ATTLIST rect enable-background CDATA #IMPLIED>
    <!ATTLIST rect clip CDATA #IMPLIED>
    <!ATTLIST rect overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST rect writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST rect alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST rect baseline-shift CDATA #IMPLIED>
    <!ATTLIST rect direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST rect dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST rect glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST rect glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST rect kerning CDATA #IMPLIED>
    <!ATTLIST rect letter-spacing CDATA #IMPLIED>
    <!ATTLIST rect text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST rect text-decoration CDATA #IMPLIED>
    <!ATTLIST rect unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST rect word-spacing CDATA #IMPLIED>
    <!ATTLIST rect font-family CDATA #IMPLIED>
    <!ATTLIST rect font-size CDATA #IMPLIED>
    <!ATTLIST rect font-size-adjust CDATA #IMPLIED>
    <!ATTLIST rect font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST rect font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST rect font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST rect font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST rect fill CDATA #IMPLIED>
    <!ATTLIST rect fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST rect stroke CDATA #IMPLIED>
    <!ATTLIST rect stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST rect stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST rect stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST rect stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST rect stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST rect stroke-width CDATA #IMPLIED>
    <!ATTLIST rect color CDATA #IMPLIED>
    <!ATTLIST rect color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST rect color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST rect opacity CDATA #IMPLIED>
    <!ATTLIST rect fill-opacity CDATA #IMPLIED>
    <!ATTLIST rect stroke-opacity CDATA #IMPLIED>
    <!ATTLIST rect display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST rect image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST rect pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST rect shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST rect text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST rect visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST rect marker-start CDATA #IMPLIED>
    <!ATTLIST rect marker-mid CDATA #IMPLIED>
    <!ATTLIST rect marker-end CDATA #IMPLIED>
    <!ATTLIST rect color-profile CDATA #IMPLIED>
    <!ATTLIST rect stop-color CDATA #IMPLIED>
    <!ATTLIST rect stop-opacity CDATA #IMPLIED>
    <!ATTLIST rect clip-path CDATA #IMPLIED>
    <!ATTLIST rect clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST rect mask CDATA #IMPLIED>
    <!ATTLIST rect filter CDATA #IMPLIED>
    <!ATTLIST rect color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST rect cursor CDATA #IMPLIED>
    <!ATTLIST rect flood-color CDATA #IMPLIED>
    <!ATTLIST rect flood-opacity CDATA #IMPLIED>
    <!ATTLIST rect lighting-color CDATA #IMPLIED>
    <!ATTLIST rect onfocusin CDATA #IMPLIED>
    <!ATTLIST rect onfocusout CDATA #IMPLIED>
    <!ATTLIST rect onactivate CDATA #IMPLIED>
    <!ATTLIST rect onclick CDATA #IMPLIED>
    <!ATTLIST rect onmousedown CDATA #IMPLIED>
    <!ATTLIST rect onmouseup CDATA #IMPLIED>
    <!ATTLIST rect onmouseover CDATA #IMPLIED>
    <!ATTLIST rect onmousemove CDATA #IMPLIED>
    <!ATTLIST rect onmouseout CDATA #IMPLIED>
    <!ATTLIST rect onload CDATA #IMPLIED>
    <!ATTLIST rect externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST rect x CDATA #IMPLIED>
    <!ATTLIST rect y CDATA #IMPLIED>
    <!ATTLIST rect width CDATA #REQUIRED>
    <!ATTLIST rect height CDATA #REQUIRED>
    <!ATTLIST rect rx CDATA #IMPLIED>
    <!ATTLIST rect ry CDATA #IMPLIED>
    <!ATTLIST rect transform CDATA #IMPLIED>
    <!ENTITY % SVG.circle.extra.content "">
    <!ENTITY % SVG.circle.element "INCLUDE">
    <!ENTITY % SVG.circle.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
         )*">
    <!ELEMENT circle (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>
    <!ENTITY % SVG.circle.attlist "INCLUDE">
    <!ATTLIST circle id ID #IMPLIED>
    <!ATTLIST circle xml:base CDATA #IMPLIED>
    <!ATTLIST circle xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST circle xml:space (default|preserve) #IMPLIED>
    <!ATTLIST circle requiredFeatures CDATA #IMPLIED>
    <!ATTLIST circle requiredExtensions CDATA #IMPLIED>
    <!ATTLIST circle systemLanguage CDATA #IMPLIED>
    <!ATTLIST circle style CDATA #IMPLIED>
    <!ATTLIST circle class CDATA #IMPLIED>
    <!ATTLIST circle enable-background CDATA #IMPLIED>
    <!ATTLIST circle clip CDATA #IMPLIED>
    <!ATTLIST circle overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST circle writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST circle alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST circle baseline-shift CDATA #IMPLIED>
    <!ATTLIST circle direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST circle dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST circle glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST circle glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST circle kerning CDATA #IMPLIED>
    <!ATTLIST circle letter-spacing CDATA #IMPLIED>
    <!ATTLIST circle text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST circle text-decoration CDATA #IMPLIED>
    <!ATTLIST circle unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST circle word-spacing CDATA #IMPLIED>
    <!ATTLIST circle font-family CDATA #IMPLIED>
    <!ATTLIST circle font-size CDATA #IMPLIED>
    <!ATTLIST circle font-size-adjust CDATA #IMPLIED>
    <!ATTLIST circle font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST circle font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST circle font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST circle font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST circle fill CDATA #IMPLIED>
    <!ATTLIST circle fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST circle stroke CDATA #IMPLIED>
    <!ATTLIST circle stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST circle stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST circle stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST circle stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST circle stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST circle stroke-width CDATA #IMPLIED>
    <!ATTLIST circle color CDATA #IMPLIED>
    <!ATTLIST circle color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST circle color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST circle opacity CDATA #IMPLIED>
    <!ATTLIST circle fill-opacity CDATA #IMPLIED>
    <!ATTLIST circle stroke-opacity CDATA #IMPLIED>
    <!ATTLIST circle display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST circle image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST circle pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST circle shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST circle text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST circle visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST circle marker-start CDATA #IMPLIED>
    <!ATTLIST circle marker-mid CDATA #IMPLIED>
    <!ATTLIST circle marker-end CDATA #IMPLIED>
    <!ATTLIST circle color-profile CDATA #IMPLIED>
    <!ATTLIST circle stop-color CDATA #IMPLIED>
    <!ATTLIST circle stop-opacity CDATA #IMPLIED>
    <!ATTLIST circle clip-path CDATA #IMPLIED>
    <!ATTLIST circle clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST circle mask CDATA #IMPLIED>
    <!ATTLIST circle filter CDATA #IMPLIED>
    <!ATTLIST circle color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST circle cursor CDATA #IMPLIED>
    <!ATTLIST circle flood-color CDATA #IMPLIED>
    <!ATTLIST circle flood-opacity CDATA #IMPLIED>
    <!ATTLIST circle lighting-color CDATA #IMPLIED>
    <!ATTLIST circle onfocusin CDATA #IMPLIED>
    <!ATTLIST circle onfocusout CDATA #IMPLIED>
    <!ATTLIST circle onactivate CDATA #IMPLIED>
    <!ATTLIST circle onclick CDATA #IMPLIED>
    <!ATTLIST circle onmousedown CDATA #IMPLIED>
    <!ATTLIST circle onmouseup CDATA #IMPLIED>
    <!ATTLIST circle onmouseover CDATA #IMPLIED>
    <!ATTLIST circle onmousemove CDATA #IMPLIED>
    <!ATTLIST circle onmouseout CDATA #IMPLIED>
    <!ATTLIST circle onload CDATA #IMPLIED>
    <!ATTLIST circle externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST circle cx CDATA #IMPLIED>
    <!ATTLIST circle cy CDATA #IMPLIED>
    <!ATTLIST circle r CDATA #REQUIRED>
    <!ATTLIST circle transform CDATA #IMPLIED>
    <!ENTITY % SVG.line.extra.content "">
    <!ENTITY % SVG.line.element "INCLUDE">
    <!ENTITY % SVG.line.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
         )*">
    <!ELEMENT line (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>
    <!ENTITY % SVG.line.attlist "INCLUDE">
    <!ATTLIST line id ID #IMPLIED>
    <!ATTLIST line xml:base CDATA #IMPLIED>
    <!ATTLIST line xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST line xml:space (default|preserve) #IMPLIED>
    <!ATTLIST line requiredFeatures CDATA #IMPLIED>
    <!ATTLIST line requiredExtensions CDATA #IMPLIED>
    <!ATTLIST line systemLanguage CDATA #IMPLIED>
    <!ATTLIST line style CDATA #IMPLIED>
    <!ATTLIST line class CDATA #IMPLIED>
    <!ATTLIST line enable-background CDATA #IMPLIED>
    <!ATTLIST line clip CDATA #IMPLIED>
    <!ATTLIST line overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST line writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST line alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST line baseline-shift CDATA #IMPLIED>
    <!ATTLIST line direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST line dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST line glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST line glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST line kerning CDATA #IMPLIED>
    <!ATTLIST line letter-spacing CDATA #IMPLIED>
    <!ATTLIST line text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST line text-decoration CDATA #IMPLIED>
    <!ATTLIST line unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST line word-spacing CDATA #IMPLIED>
    <!ATTLIST line font-family CDATA #IMPLIED>
    <!ATTLIST line font-size CDATA #IMPLIED>
    <!ATTLIST line font-size-adjust CDATA #IMPLIED>
    <!ATTLIST line font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST line font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST line font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST line font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST line fill CDATA #IMPLIED>
    <!ATTLIST line fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST line stroke CDATA #IMPLIED>
    <!ATTLIST line stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST line stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST line stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST line stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST line stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST line stroke-width CDATA #IMPLIED>
    <!ATTLIST line color CDATA #IMPLIED>
    <!ATTLIST line color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST line color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST line opacity CDATA #IMPLIED>
    <!ATTLIST line fill-opacity CDATA #IMPLIED>
    <!ATTLIST line stroke-opacity CDATA #IMPLIED>
    <!ATTLIST line display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST line image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST line pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST line shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST line text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST line visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST line marker-start CDATA #IMPLIED>
    <!ATTLIST line marker-mid CDATA #IMPLIED>
    <!ATTLIST line marker-end CDATA #IMPLIED>
    <!ATTLIST line color-profile CDATA #IMPLIED>
    <!ATTLIST line stop-color CDATA #IMPLIED>
    <!ATTLIST line stop-opacity CDATA #IMPLIED>
    <!ATTLIST line clip-path CDATA #IMPLIED>
    <!ATTLIST line clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST line mask CDATA #IMPLIED>
    <!ATTLIST line filter CDATA #IMPLIED>
    <!ATTLIST line color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST line cursor CDATA #IMPLIED>
    <!ATTLIST line flood-color CDATA #IMPLIED>
    <!ATTLIST line flood-opacity CDATA #IMPLIED>
    <!ATTLIST line lighting-color CDATA #IMPLIED>
    <!ATTLIST line onfocusin CDATA #IMPLIED>
    <!ATTLIST line onfocusout CDATA #IMPLIED>
    <!ATTLIST line onactivate CDATA #IMPLIED>
    <!ATTLIST line onclick CDATA #IMPLIED>
    <!ATTLIST line onmousedown CDATA #IMPLIED>
    <!ATTLIST line onmouseup CDATA #IMPLIED>
    <!ATTLIST line onmouseover CDATA #IMPLIED>
    <!ATTLIST line onmousemove CDATA #IMPLIED>
    <!ATTLIST line onmouseout CDATA #IMPLIED>
    <!ATTLIST line onload CDATA #IMPLIED>
    <!ATTLIST line externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST line x1 CDATA #IMPLIED>
    <!ATTLIST line y1 CDATA #IMPLIED>
    <!ATTLIST line x2 CDATA #IMPLIED>
    <!ATTLIST line y2 CDATA #IMPLIED>
    <!ATTLIST line transform CDATA #IMPLIED>
    <!ENTITY % SVG.ellipse.extra.content "">
    <!ENTITY % SVG.ellipse.element "INCLUDE">
    <!ENTITY % SVG.ellipse.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
         )*">
    <!ELEMENT ellipse (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>
    <!ENTITY % SVG.ellipse.attlist "INCLUDE">
    <!ATTLIST ellipse id ID #IMPLIED>
    <!ATTLIST ellipse xml:base CDATA #IMPLIED>
    <!ATTLIST ellipse xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST ellipse xml:space (default|preserve) #IMPLIED>
    <!ATTLIST ellipse requiredFeatures CDATA #IMPLIED>
    <!ATTLIST ellipse requiredExtensions CDATA #IMPLIED>
    <!ATTLIST ellipse systemLanguage CDATA #IMPLIED>
    <!ATTLIST ellipse style CDATA #IMPLIED>
    <!ATTLIST ellipse class CDATA #IMPLIED>
    <!ATTLIST ellipse enable-background CDATA #IMPLIED>
    <!ATTLIST ellipse clip CDATA #IMPLIED>
    <!ATTLIST ellipse overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST ellipse writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST ellipse alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST ellipse baseline-shift CDATA #IMPLIED>
    <!ATTLIST ellipse direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST ellipse dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST ellipse glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST ellipse glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST ellipse kerning CDATA #IMPLIED>
    <!ATTLIST ellipse letter-spacing CDATA #IMPLIED>
    <!ATTLIST ellipse text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST ellipse text-decoration CDATA #IMPLIED>
    <!ATTLIST ellipse unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST ellipse word-spacing CDATA #IMPLIED>
    <!ATTLIST ellipse font-family CDATA #IMPLIED>
    <!ATTLIST ellipse font-size CDATA #IMPLIED>
    <!ATTLIST ellipse font-size-adjust CDATA #IMPLIED>
    <!ATTLIST ellipse font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST ellipse font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST ellipse font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST ellipse font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST ellipse fill CDATA #IMPLIED>
    <!ATTLIST ellipse fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST ellipse stroke CDATA #IMPLIED>
    <!ATTLIST ellipse stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST ellipse stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST ellipse stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST ellipse stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST ellipse stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST ellipse stroke-width CDATA #IMPLIED>
    <!ATTLIST ellipse color CDATA #IMPLIED>
    <!ATTLIST ellipse color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST ellipse color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST ellipse opacity CDATA #IMPLIED>
    <!ATTLIST ellipse fill-opacity CDATA #IMPLIED>
    <!ATTLIST ellipse stroke-opacity CDATA #IMPLIED>
    <!ATTLIST ellipse display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST ellipse image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST ellipse pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST ellipse shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST ellipse text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST ellipse visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST ellipse marker-start CDATA #IMPLIED>
    <!ATTLIST ellipse marker-mid CDATA #IMPLIED>
    <!ATTLIST ellipse marker-end CDATA #IMPLIED>
    <!ATTLIST ellipse color-profile CDATA #IMPLIED>
    <!ATTLIST ellipse stop-color CDATA #IMPLIED>
    <!ATTLIST ellipse stop-opacity CDATA #IMPLIED>
    <!ATTLIST ellipse clip-path CDATA #IMPLIED>
    <!ATTLIST ellipse clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST ellipse mask CDATA #IMPLIED>
    <!ATTLIST ellipse filter CDATA #IMPLIED>
    <!ATTLIST ellipse color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST ellipse cursor CDATA #IMPLIED>
    <!ATTLIST ellipse flood-color CDATA #IMPLIED>
    <!ATTLIST ellipse flood-opacity CDATA #IMPLIED>
    <!ATTLIST ellipse lighting-color CDATA #IMPLIED>
    <!ATTLIST ellipse onfocusin CDATA #IMPLIED>
    <!ATTLIST ellipse onfocusout CDATA #IMPLIED>
    <!ATTLIST ellipse onactivate CDATA #IMPLIED>
    <!ATTLIST ellipse onclick CDATA #IMPLIED>
    <!ATTLIST ellipse onmousedown CDATA #IMPLIED>
    <!ATTLIST ellipse onmouseup CDATA #IMPLIED>
    <!ATTLIST ellipse onmouseover CDATA #IMPLIED>
    <!ATTLIST ellipse onmousemove CDATA #IMPLIED>
    <!ATTLIST ellipse onmouseout CDATA #IMPLIED>
    <!ATTLIST ellipse onload CDATA #IMPLIED>
    <!ATTLIST ellipse externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST ellipse cx CDATA #IMPLIED>
    <!ATTLIST ellipse cy CDATA #IMPLIED>
    <!ATTLIST ellipse rx CDATA #REQUIRED>
    <!ATTLIST ellipse ry CDATA #REQUIRED>
    <!ATTLIST ellipse transform CDATA #IMPLIED>
    <!ENTITY % SVG.polyline.extra.content "">
    <!ENTITY % SVG.polyline.element "INCLUDE">
    <!ENTITY % SVG.polyline.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
        )*">
    <!ELEMENT polyline (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>
    <!ENTITY % SVG.polyline.attlist "INCLUDE">
    <!ATTLIST polyline id ID #IMPLIED>
    <!ATTLIST polyline xml:base CDATA #IMPLIED>
    <!ATTLIST polyline xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST polyline xml:space (default|preserve) #IMPLIED>
    <!ATTLIST polyline requiredFeatures CDATA #IMPLIED>
    <!ATTLIST polyline requiredExtensions CDATA #IMPLIED>
    <!ATTLIST polyline systemLanguage CDATA #IMPLIED>
    <!ATTLIST polyline style CDATA #IMPLIED>
    <!ATTLIST polyline class CDATA #IMPLIED>
    <!ATTLIST polyline enable-background CDATA #IMPLIED>
    <!ATTLIST polyline clip CDATA #IMPLIED>
    <!ATTLIST polyline overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST polyline writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST polyline alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST polyline baseline-shift CDATA #IMPLIED>
    <!ATTLIST polyline direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST polyline dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST polyline glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST polyline glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST polyline kerning CDATA #IMPLIED>
    <!ATTLIST polyline letter-spacing CDATA #IMPLIED>
    <!ATTLIST polyline text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST polyline text-decoration CDATA #IMPLIED>
    <!ATTLIST polyline unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST polyline word-spacing CDATA #IMPLIED>
    <!ATTLIST polyline font-family CDATA #IMPLIED>
    <!ATTLIST polyline font-size CDATA #IMPLIED>
    <!ATTLIST polyline font-size-adjust CDATA #IMPLIED>
    <!ATTLIST polyline font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST polyline font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST polyline font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST polyline font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST polyline fill CDATA #IMPLIED>
    <!ATTLIST polyline fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST polyline stroke CDATA #IMPLIED>
    <!ATTLIST polyline stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST polyline stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST polyline stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST polyline stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST polyline stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST polyline stroke-width CDATA #IMPLIED>
    <!ATTLIST polyline color CDATA #IMPLIED>
    <!ATTLIST polyline color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST polyline color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST polyline opacity CDATA #IMPLIED>
    <!ATTLIST polyline fill-opacity CDATA #IMPLIED>
    <!ATTLIST polyline stroke-opacity CDATA #IMPLIED>
    <!ATTLIST polyline display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST polyline image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST polyline pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST polyline shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST polyline text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST polyline visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST polyline marker-start CDATA #IMPLIED>
    <!ATTLIST polyline marker-mid CDATA #IMPLIED>
    <!ATTLIST polyline marker-end CDATA #IMPLIED>
    <!ATTLIST polyline color-profile CDATA #IMPLIED>
    <!ATTLIST polyline stop-color CDATA #IMPLIED>
    <!ATTLIST polyline stop-opacity CDATA #IMPLIED>
    <!ATTLIST polyline clip-path CDATA #IMPLIED>
    <!ATTLIST polyline clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST polyline mask CDATA #IMPLIED>
    <!ATTLIST polyline filter CDATA #IMPLIED>
    <!ATTLIST polyline color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST polyline cursor CDATA #IMPLIED>
    <!ATTLIST polyline flood-color CDATA #IMPLIED>
    <!ATTLIST polyline flood-opacity CDATA #IMPLIED>
    <!ATTLIST polyline lighting-color CDATA #IMPLIED>
    <!ATTLIST polyline onfocusin CDATA #IMPLIED>
    <!ATTLIST polyline onfocusout CDATA #IMPLIED>
    <!ATTLIST polyline onactivate CDATA #IMPLIED>
    <!ATTLIST polyline onclick CDATA #IMPLIED>
    <!ATTLIST polyline onmousedown CDATA #IMPLIED>
    <!ATTLIST polyline onmouseup CDATA #IMPLIED>
    <!ATTLIST polyline onmouseover CDATA #IMPLIED>
    <!ATTLIST polyline onmousemove CDATA #IMPLIED>
    <!ATTLIST polyline onmouseout CDATA #IMPLIED>
    <!ATTLIST polyline onload CDATA #IMPLIED>
    <!ATTLIST polyline externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST polyline points CDATA #REQUIRED>
    <!ATTLIST polyline transform CDATA #IMPLIED>
    <!ENTITY % SVG.polygon.extra.content "">
    <!ENTITY % SVG.polygon.element "INCLUDE">
    <!ENTITY % SVG.polygon.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
         )*">
    <!ELEMENT polygon (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform)*>
    <!ENTITY % SVG.polygon.attlist "INCLUDE">
    <!ATTLIST polygon id ID #IMPLIED>
    <!ATTLIST polygon xml:base CDATA #IMPLIED>
    <!ATTLIST polygon xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST polygon xml:space (default|preserve) #IMPLIED>
    <!ATTLIST polygon requiredFeatures CDATA #IMPLIED>
    <!ATTLIST polygon requiredExtensions CDATA #IMPLIED>
    <!ATTLIST polygon systemLanguage CDATA #IMPLIED>
    <!ATTLIST polygon style CDATA #IMPLIED>
    <!ATTLIST polygon class CDATA #IMPLIED>
    <!ATTLIST polygon enable-background CDATA #IMPLIED>
    <!ATTLIST polygon clip CDATA #IMPLIED>
    <!ATTLIST polygon overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST polygon writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST polygon alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST polygon baseline-shift CDATA #IMPLIED>
    <!ATTLIST polygon direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST polygon dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST polygon glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST polygon glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST polygon kerning CDATA #IMPLIED>
    <!ATTLIST polygon letter-spacing CDATA #IMPLIED>
    <!ATTLIST polygon text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST polygon text-decoration CDATA #IMPLIED>
    <!ATTLIST polygon unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST polygon word-spacing CDATA #IMPLIED>
    <!ATTLIST polygon font-family CDATA #IMPLIED>
    <!ATTLIST polygon font-size CDATA #IMPLIED>
    <!ATTLIST polygon font-size-adjust CDATA #IMPLIED>
    <!ATTLIST polygon font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST polygon font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST polygon font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST polygon font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST polygon fill CDATA #IMPLIED>
    <!ATTLIST polygon fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST polygon stroke CDATA #IMPLIED>
    <!ATTLIST polygon stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST polygon stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST polygon stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST polygon stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST polygon stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST polygon stroke-width CDATA #IMPLIED>
    <!ATTLIST polygon color CDATA #IMPLIED>
    <!ATTLIST polygon color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST polygon color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST polygon opacity CDATA #IMPLIED>
    <!ATTLIST polygon fill-opacity CDATA #IMPLIED>
    <!ATTLIST polygon stroke-opacity CDATA #IMPLIED>
    <!ATTLIST polygon display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST polygon image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST polygon pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST polygon shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST polygon text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST polygon visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST polygon marker-start CDATA #IMPLIED>
    <!ATTLIST polygon marker-mid CDATA #IMPLIED>
    <!ATTLIST polygon marker-end CDATA #IMPLIED>
    <!ATTLIST polygon color-profile CDATA #IMPLIED>
    <!ATTLIST polygon stop-color CDATA #IMPLIED>
    <!ATTLIST polygon stop-opacity CDATA #IMPLIED>
    <!ATTLIST polygon clip-path CDATA #IMPLIED>
    <!ATTLIST polygon clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST polygon mask CDATA #IMPLIED>
    <!ATTLIST polygon filter CDATA #IMPLIED>
    <!ATTLIST polygon color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST polygon cursor CDATA #IMPLIED>
    <!ATTLIST polygon flood-color CDATA #IMPLIED>
    <!ATTLIST polygon flood-opacity CDATA #IMPLIED>
    <!ATTLIST polygon lighting-color CDATA #IMPLIED>
    <!ATTLIST polygon onfocusin CDATA #IMPLIED>
    <!ATTLIST polygon onfocusout CDATA #IMPLIED>
    <!ATTLIST polygon onactivate CDATA #IMPLIED>
    <!ATTLIST polygon onclick CDATA #IMPLIED>
    <!ATTLIST polygon onmousedown CDATA #IMPLIED>
    <!ATTLIST polygon onmouseup CDATA #IMPLIED>
    <!ATTLIST polygon onmouseover CDATA #IMPLIED>
    <!ATTLIST polygon onmousemove CDATA #IMPLIED>
    <!ATTLIST polygon onmouseout CDATA #IMPLIED>
    <!ATTLIST polygon onload CDATA #IMPLIED>
    <!ATTLIST polygon externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST polygon points CDATA #REQUIRED>
    <!ATTLIST polygon transform CDATA #IMPLIED>
    <!ENTITY % svg-text.module "INCLUDE">
    <!ENTITY % svg-text.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Text//EN" "svg-text.mod">
    <!ENTITY % SVG.text.extra.content "">
    <!ENTITY % SVG.text.element "INCLUDE">
    <!ENTITY % SVG.text.content "( #PCDATA | desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
       | tspan | tref | textPath
     | altGlyph  | a 
        )*">
    <!ELEMENT text (#PCDATA | desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | tspan | tref | textPath | altGlyph | a)*>
    <!ENTITY % SVG.text.attlist "INCLUDE">
    <!ATTLIST text id ID #IMPLIED>
    <!ATTLIST text xml:base CDATA #IMPLIED>
    <!ATTLIST text xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST text xml:space (default|preserve) #IMPLIED>
    <!ATTLIST text requiredFeatures CDATA #IMPLIED>
    <!ATTLIST text requiredExtensions CDATA #IMPLIED>
    <!ATTLIST text systemLanguage CDATA #IMPLIED>
    <!ATTLIST text style CDATA #IMPLIED>
    <!ATTLIST text class CDATA #IMPLIED>
    <!ATTLIST text enable-background CDATA #IMPLIED>
    <!ATTLIST text clip CDATA #IMPLIED>
    <!ATTLIST text overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST text writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST text alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST text baseline-shift CDATA #IMPLIED>
    <!ATTLIST text direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST text dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST text glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST text glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST text kerning CDATA #IMPLIED>
    <!ATTLIST text letter-spacing CDATA #IMPLIED>
    <!ATTLIST text text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST text text-decoration CDATA #IMPLIED>
    <!ATTLIST text unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST text word-spacing CDATA #IMPLIED>
    <!ATTLIST text font-family CDATA #IMPLIED>
    <!ATTLIST text font-size CDATA #IMPLIED>
    <!ATTLIST text font-size-adjust CDATA #IMPLIED>
    <!ATTLIST text font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST text font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST text font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST text font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST text fill CDATA #IMPLIED>
    <!ATTLIST text fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST text stroke CDATA #IMPLIED>
    <!ATTLIST text stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST text stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST text stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST text stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST text stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST text stroke-width CDATA #IMPLIED>
    <!ATTLIST text color CDATA #IMPLIED>
    <!ATTLIST text color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST text color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST text opacity CDATA #IMPLIED>
    <!ATTLIST text fill-opacity CDATA #IMPLIED>
    <!ATTLIST text stroke-opacity CDATA #IMPLIED>
    <!ATTLIST text display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST text image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST text pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST text shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST text text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST text visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST text marker-start CDATA #IMPLIED>
    <!ATTLIST text marker-mid CDATA #IMPLIED>
    <!ATTLIST text marker-end CDATA #IMPLIED>
    <!ATTLIST text color-profile CDATA #IMPLIED>
    <!ATTLIST text stop-color CDATA #IMPLIED>
    <!ATTLIST text stop-opacity CDATA #IMPLIED>
    <!ATTLIST text clip-path CDATA #IMPLIED>
    <!ATTLIST text clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST text mask CDATA #IMPLIED>
    <!ATTLIST text filter CDATA #IMPLIED>
    <!ATTLIST text color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST text cursor CDATA #IMPLIED>
    <!ATTLIST text flood-color CDATA #IMPLIED>
    <!ATTLIST text flood-opacity CDATA #IMPLIED>
    <!ATTLIST text lighting-color CDATA #IMPLIED>
    <!ATTLIST text onfocusin CDATA #IMPLIED>
    <!ATTLIST text onfocusout CDATA #IMPLIED>
    <!ATTLIST text onactivate CDATA #IMPLIED>
    <!ATTLIST text onclick CDATA #IMPLIED>
    <!ATTLIST text onmousedown CDATA #IMPLIED>
    <!ATTLIST text onmouseup CDATA #IMPLIED>
    <!ATTLIST text onmouseover CDATA #IMPLIED>
    <!ATTLIST text onmousemove CDATA #IMPLIED>
    <!ATTLIST text onmouseout CDATA #IMPLIED>
    <!ATTLIST text onload CDATA #IMPLIED>
    <!ATTLIST text externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST text x CDATA #IMPLIED>
    <!ATTLIST text y CDATA #IMPLIED>
    <!ATTLIST text dx CDATA #IMPLIED>
    <!ATTLIST text dy CDATA #IMPLIED>
    <!ATTLIST text rotate CDATA #IMPLIED>
    <!ATTLIST text textLength CDATA #IMPLIED>
    <!ATTLIST text lengthAdjust (spacing|spacingAndGlyphs) #IMPLIED>
    <!ATTLIST text transform CDATA #IMPLIED>
    <!ENTITY % SVG.tspan.extra.content "">
    <!ENTITY % SVG.tspan.element "INCLUDE">
    <!ENTITY % SVG.tspan.content "( #PCDATA | tspan | tref | altGlyph
     | animate | set | animateColor
     | desc | title | metadata
      | a 
        )*">
    <!ELEMENT tspan (#PCDATA | tspan | tref | altGlyph | animate | set | animateColor | desc | title | metadata | a)*>
    <!ENTITY % SVG.tspan.attlist "INCLUDE">
    <!ATTLIST tspan id ID #IMPLIED>
    <!ATTLIST tspan xml:base CDATA #IMPLIED>
    <!ATTLIST tspan xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST tspan xml:space (default|preserve) #IMPLIED>
    <!ATTLIST tspan requiredFeatures CDATA #IMPLIED>
    <!ATTLIST tspan requiredExtensions CDATA #IMPLIED>
    <!ATTLIST tspan systemLanguage CDATA #IMPLIED>
    <!ATTLIST tspan style CDATA #IMPLIED>
    <!ATTLIST tspan class CDATA #IMPLIED>
    <!ATTLIST tspan enable-background CDATA #IMPLIED>
    <!ATTLIST tspan clip CDATA #IMPLIED>
    <!ATTLIST tspan overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST tspan writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST tspan alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST tspan baseline-shift CDATA #IMPLIED>
    <!ATTLIST tspan direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST tspan dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST tspan glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST tspan glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST tspan kerning CDATA #IMPLIED>
    <!ATTLIST tspan letter-spacing CDATA #IMPLIED>
    <!ATTLIST tspan text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST tspan text-decoration CDATA #IMPLIED>
    <!ATTLIST tspan unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST tspan word-spacing CDATA #IMPLIED>
    <!ATTLIST tspan font-family CDATA #IMPLIED>
    <!ATTLIST tspan font-size CDATA #IMPLIED>
    <!ATTLIST tspan font-size-adjust CDATA #IMPLIED>
    <!ATTLIST tspan font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST tspan font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST tspan font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST tspan font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST tspan fill CDATA #IMPLIED>
    <!ATTLIST tspan fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST tspan stroke CDATA #IMPLIED>
    <!ATTLIST tspan stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST tspan stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST tspan stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST tspan stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST tspan stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST tspan stroke-width CDATA #IMPLIED>
    <!ATTLIST tspan color CDATA #IMPLIED>
    <!ATTLIST tspan color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST tspan color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST tspan opacity CDATA #IMPLIED>
    <!ATTLIST tspan fill-opacity CDATA #IMPLIED>
    <!ATTLIST tspan stroke-opacity CDATA #IMPLIED>
    <!ATTLIST tspan display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST tspan image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST tspan pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST tspan shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST tspan text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST tspan visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST tspan marker-start CDATA #IMPLIED>
    <!ATTLIST tspan marker-mid CDATA #IMPLIED>
    <!ATTLIST tspan marker-end CDATA #IMPLIED>
    <!ATTLIST tspan color-profile CDATA #IMPLIED>
    <!ATTLIST tspan stop-color CDATA #IMPLIED>
    <!ATTLIST tspan stop-opacity CDATA #IMPLIED>
    <!ATTLIST tspan clip-path CDATA #IMPLIED>
    <!ATTLIST tspan clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST tspan mask CDATA #IMPLIED>
    <!ATTLIST tspan filter CDATA #IMPLIED>
    <!ATTLIST tspan color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST tspan cursor CDATA #IMPLIED>
    <!ATTLIST tspan flood-color CDATA #IMPLIED>
    <!ATTLIST tspan flood-opacity CDATA #IMPLIED>
    <!ATTLIST tspan lighting-color CDATA #IMPLIED>
    <!ATTLIST tspan onfocusin CDATA #IMPLIED>
    <!ATTLIST tspan onfocusout CDATA #IMPLIED>
    <!ATTLIST tspan onactivate CDATA #IMPLIED>
    <!ATTLIST tspan onclick CDATA #IMPLIED>
    <!ATTLIST tspan onmousedown CDATA #IMPLIED>
    <!ATTLIST tspan onmouseup CDATA #IMPLIED>
    <!ATTLIST tspan onmouseover CDATA #IMPLIED>
    <!ATTLIST tspan onmousemove CDATA #IMPLIED>
    <!ATTLIST tspan onmouseout CDATA #IMPLIED>
    <!ATTLIST tspan onload CDATA #IMPLIED>
    <!ATTLIST tspan externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST tspan x CDATA #IMPLIED>
    <!ATTLIST tspan y CDATA #IMPLIED>
    <!ATTLIST tspan dx CDATA #IMPLIED>
    <!ATTLIST tspan dy CDATA #IMPLIED>
    <!ATTLIST tspan rotate CDATA #IMPLIED>
    <!ATTLIST tspan textLength CDATA #IMPLIED>
    <!ATTLIST tspan lengthAdjust (spacing|spacingAndGlyphs) #IMPLIED>
    <!ENTITY % SVG.tref.extra.content "">
    <!ENTITY % SVG.tref.element "INCLUDE">
    <!ENTITY % SVG.tref.content "( animate | set | animateColor
     | desc | title | metadata
       )*">
    <!ELEMENT tref (animate | set | animateColor | desc | title | metadata)*>
    <!ENTITY % SVG.tref.attlist "INCLUDE">
    <!ATTLIST tref id ID #IMPLIED>
    <!ATTLIST tref xml:base CDATA #IMPLIED>
    <!ATTLIST tref xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST tref xml:space (default|preserve) #IMPLIED>
    <!ATTLIST tref requiredFeatures CDATA #IMPLIED>
    <!ATTLIST tref requiredExtensions CDATA #IMPLIED>
    <!ATTLIST tref systemLanguage CDATA #IMPLIED>
    <!ATTLIST tref style CDATA #IMPLIED>
    <!ATTLIST tref class CDATA #IMPLIED>
    <!ATTLIST tref enable-background CDATA #IMPLIED>
    <!ATTLIST tref clip CDATA #IMPLIED>
    <!ATTLIST tref overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST tref writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST tref alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST tref baseline-shift CDATA #IMPLIED>
    <!ATTLIST tref direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST tref dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST tref glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST tref glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST tref kerning CDATA #IMPLIED>
    <!ATTLIST tref letter-spacing CDATA #IMPLIED>
    <!ATTLIST tref text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST tref text-decoration CDATA #IMPLIED>
    <!ATTLIST tref unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST tref word-spacing CDATA #IMPLIED>
    <!ATTLIST tref font-family CDATA #IMPLIED>
    <!ATTLIST tref font-size CDATA #IMPLIED>
    <!ATTLIST tref font-size-adjust CDATA #IMPLIED>
    <!ATTLIST tref font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST tref font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST tref font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST tref font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST tref fill CDATA #IMPLIED>
    <!ATTLIST tref fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST tref stroke CDATA #IMPLIED>
    <!ATTLIST tref stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST tref stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST tref stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST tref stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST tref stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST tref stroke-width CDATA #IMPLIED>
    <!ATTLIST tref color CDATA #IMPLIED>
    <!ATTLIST tref color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST tref color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST tref opacity CDATA #IMPLIED>
    <!ATTLIST tref fill-opacity CDATA #IMPLIED>
    <!ATTLIST tref stroke-opacity CDATA #IMPLIED>
    <!ATTLIST tref display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST tref image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST tref pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST tref shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST tref text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST tref visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST tref marker-start CDATA #IMPLIED>
    <!ATTLIST tref marker-mid CDATA #IMPLIED>
    <!ATTLIST tref marker-end CDATA #IMPLIED>
    <!ATTLIST tref color-profile CDATA #IMPLIED>
    <!ATTLIST tref stop-color CDATA #IMPLIED>
    <!ATTLIST tref stop-opacity CDATA #IMPLIED>
    <!ATTLIST tref clip-path CDATA #IMPLIED>
    <!ATTLIST tref clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST tref mask CDATA #IMPLIED>
    <!ATTLIST tref filter CDATA #IMPLIED>
    <!ATTLIST tref color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST tref cursor CDATA #IMPLIED>
    <!ATTLIST tref flood-color CDATA #IMPLIED>
    <!ATTLIST tref flood-opacity CDATA #IMPLIED>
    <!ATTLIST tref lighting-color CDATA #IMPLIED>
    <!ATTLIST tref onfocusin CDATA #IMPLIED>
    <!ATTLIST tref onfocusout CDATA #IMPLIED>
    <!ATTLIST tref onactivate CDATA #IMPLIED>
    <!ATTLIST tref onclick CDATA #IMPLIED>
    <!ATTLIST tref onmousedown CDATA #IMPLIED>
    <!ATTLIST tref onmouseup CDATA #IMPLIED>
    <!ATTLIST tref onmouseover CDATA #IMPLIED>
    <!ATTLIST tref onmousemove CDATA #IMPLIED>
    <!ATTLIST tref onmouseout CDATA #IMPLIED>
    <!ATTLIST tref onload CDATA #IMPLIED>
    <!ATTLIST tref xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST tref xlink:type (simple) #FIXED "simple">
    <!ATTLIST tref xlink:href CDATA #REQUIRED>
    <!ATTLIST tref xlink:role CDATA #IMPLIED>
    <!ATTLIST tref xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST tref xlink:title CDATA #IMPLIED>
    <!ATTLIST tref xlink:show (other) "other">
    <!ATTLIST tref xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST tref externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST tref x CDATA #IMPLIED>
    <!ATTLIST tref y CDATA #IMPLIED>
    <!ATTLIST tref dx CDATA #IMPLIED>
    <!ATTLIST tref dy CDATA #IMPLIED>
    <!ATTLIST tref rotate CDATA #IMPLIED>
    <!ATTLIST tref textLength CDATA #IMPLIED>
    <!ATTLIST tref lengthAdjust (spacing|spacingAndGlyphs) #IMPLIED>
    <!ENTITY % SVG.textPath.extra.content "">
    <!ENTITY % SVG.textPath.element "INCLUDE">
    <!ENTITY % SVG.textPath.content "( #PCDATA | tspan | tref | altGlyph
     | animate | set | animateColor
     | desc | title | metadata
      | a 
        )*">
    <!ELEMENT textPath (#PCDATA | tspan | tref | altGlyph | animate | set | animateColor | desc | title | metadata | a)*>
    <!ENTITY % SVG.textPath.attlist "INCLUDE">
    <!ATTLIST textPath id ID #IMPLIED>
    <!ATTLIST textPath xml:base CDATA #IMPLIED>
    <!ATTLIST textPath xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST textPath xml:space (default|preserve) #IMPLIED>
    <!ATTLIST textPath requiredFeatures CDATA #IMPLIED>
    <!ATTLIST textPath requiredExtensions CDATA #IMPLIED>
    <!ATTLIST textPath systemLanguage CDATA #IMPLIED>
    <!ATTLIST textPath style CDATA #IMPLIED>
    <!ATTLIST textPath class CDATA #IMPLIED>
    <!ATTLIST textPath enable-background CDATA #IMPLIED>
    <!ATTLIST textPath clip CDATA #IMPLIED>
    <!ATTLIST textPath overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST textPath writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST textPath alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST textPath baseline-shift CDATA #IMPLIED>
    <!ATTLIST textPath direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST textPath dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST textPath glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST textPath glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST textPath kerning CDATA #IMPLIED>
    <!ATTLIST textPath letter-spacing CDATA #IMPLIED>
    <!ATTLIST textPath text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST textPath text-decoration CDATA #IMPLIED>
    <!ATTLIST textPath unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST textPath word-spacing CDATA #IMPLIED>
    <!ATTLIST textPath font-family CDATA #IMPLIED>
    <!ATTLIST textPath font-size CDATA #IMPLIED>
    <!ATTLIST textPath font-size-adjust CDATA #IMPLIED>
    <!ATTLIST textPath font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST textPath font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST textPath font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST textPath font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST textPath fill CDATA #IMPLIED>
    <!ATTLIST textPath fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST textPath stroke CDATA #IMPLIED>
    <!ATTLIST textPath stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST textPath stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST textPath stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST textPath stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST textPath stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST textPath stroke-width CDATA #IMPLIED>
    <!ATTLIST textPath color CDATA #IMPLIED>
    <!ATTLIST textPath color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST textPath color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST textPath opacity CDATA #IMPLIED>
    <!ATTLIST textPath fill-opacity CDATA #IMPLIED>
    <!ATTLIST textPath stroke-opacity CDATA #IMPLIED>
    <!ATTLIST textPath display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST textPath image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST textPath pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST textPath shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST textPath text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST textPath visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST textPath marker-start CDATA #IMPLIED>
    <!ATTLIST textPath marker-mid CDATA #IMPLIED>
    <!ATTLIST textPath marker-end CDATA #IMPLIED>
    <!ATTLIST textPath color-profile CDATA #IMPLIED>
    <!ATTLIST textPath stop-color CDATA #IMPLIED>
    <!ATTLIST textPath stop-opacity CDATA #IMPLIED>
    <!ATTLIST textPath clip-path CDATA #IMPLIED>
    <!ATTLIST textPath clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST textPath mask CDATA #IMPLIED>
    <!ATTLIST textPath filter CDATA #IMPLIED>
    <!ATTLIST textPath color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST textPath cursor CDATA #IMPLIED>
    <!ATTLIST textPath flood-color CDATA #IMPLIED>
    <!ATTLIST textPath flood-opacity CDATA #IMPLIED>
    <!ATTLIST textPath lighting-color CDATA #IMPLIED>
    <!ATTLIST textPath onfocusin CDATA #IMPLIED>
    <!ATTLIST textPath onfocusout CDATA #IMPLIED>
    <!ATTLIST textPath onactivate CDATA #IMPLIED>
    <!ATTLIST textPath onclick CDATA #IMPLIED>
    <!ATTLIST textPath onmousedown CDATA #IMPLIED>
    <!ATTLIST textPath onmouseup CDATA #IMPLIED>
    <!ATTLIST textPath onmouseover CDATA #IMPLIED>
    <!ATTLIST textPath onmousemove CDATA #IMPLIED>
    <!ATTLIST textPath onmouseout CDATA #IMPLIED>
    <!ATTLIST textPath onload CDATA #IMPLIED>
    <!ATTLIST textPath xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST textPath xlink:type (simple) #FIXED "simple">
    <!ATTLIST textPath xlink:href CDATA #REQUIRED>
    <!ATTLIST textPath xlink:role CDATA #IMPLIED>
    <!ATTLIST textPath xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST textPath xlink:title CDATA #IMPLIED>
    <!ATTLIST textPath xlink:show (other) "other">
    <!ATTLIST textPath xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST textPath externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST textPath startOffset CDATA #IMPLIED>
    <!ATTLIST textPath textLength CDATA #IMPLIED>
    <!ATTLIST textPath lengthAdjust (spacing|spacingAndGlyphs) #IMPLIED>
    <!ATTLIST textPath method (align|stretch) #IMPLIED>
    <!ATTLIST textPath spacing (auto|exact) #IMPLIED>
    <!ENTITY % SVG.altGlyph.extra.content "">
    <!ENTITY % SVG.altGlyph.element "INCLUDE">
    <!ENTITY % SVG.altGlyph.content "( #PCDATA  )*">
    <!ELEMENT altGlyph (#PCDATA)*>
    <!ENTITY % SVG.altGlyph.attlist "INCLUDE">
    <!ATTLIST altGlyph id ID #IMPLIED>
    <!ATTLIST altGlyph xml:base CDATA #IMPLIED>
    <!ATTLIST altGlyph xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST altGlyph xml:space (default|preserve) #IMPLIED>
    <!ATTLIST altGlyph requiredFeatures CDATA #IMPLIED>
    <!ATTLIST altGlyph requiredExtensions CDATA #IMPLIED>
    <!ATTLIST altGlyph systemLanguage CDATA #IMPLIED>
    <!ATTLIST altGlyph style CDATA #IMPLIED>
    <!ATTLIST altGlyph class CDATA #IMPLIED>
    <!ATTLIST altGlyph enable-background CDATA #IMPLIED>
    <!ATTLIST altGlyph clip CDATA #IMPLIED>
    <!ATTLIST altGlyph overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST altGlyph writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST altGlyph alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST altGlyph baseline-shift CDATA #IMPLIED>
    <!ATTLIST altGlyph direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST altGlyph dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST altGlyph glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST altGlyph glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST altGlyph kerning CDATA #IMPLIED>
    <!ATTLIST altGlyph letter-spacing CDATA #IMPLIED>
    <!ATTLIST altGlyph text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST altGlyph text-decoration CDATA #IMPLIED>
    <!ATTLIST altGlyph unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST altGlyph word-spacing CDATA #IMPLIED>
    <!ATTLIST altGlyph font-family CDATA #IMPLIED>
    <!ATTLIST altGlyph font-size CDATA #IMPLIED>
    <!ATTLIST altGlyph font-size-adjust CDATA #IMPLIED>
    <!ATTLIST altGlyph font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST altGlyph font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST altGlyph font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST altGlyph font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST altGlyph fill CDATA #IMPLIED>
    <!ATTLIST altGlyph fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST altGlyph stroke CDATA #IMPLIED>
    <!ATTLIST altGlyph stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST altGlyph stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST altGlyph stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST altGlyph stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST altGlyph stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST altGlyph stroke-width CDATA #IMPLIED>
    <!ATTLIST altGlyph color CDATA #IMPLIED>
    <!ATTLIST altGlyph color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST altGlyph color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST altGlyph opacity CDATA #IMPLIED>
    <!ATTLIST altGlyph fill-opacity CDATA #IMPLIED>
    <!ATTLIST altGlyph stroke-opacity CDATA #IMPLIED>
    <!ATTLIST altGlyph display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST altGlyph image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST altGlyph pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST altGlyph shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST altGlyph text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST altGlyph visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST altGlyph marker-start CDATA #IMPLIED>
    <!ATTLIST altGlyph marker-mid CDATA #IMPLIED>
    <!ATTLIST altGlyph marker-end CDATA #IMPLIED>
    <!ATTLIST altGlyph color-profile CDATA #IMPLIED>
    <!ATTLIST altGlyph stop-color CDATA #IMPLIED>
    <!ATTLIST altGlyph stop-opacity CDATA #IMPLIED>
    <!ATTLIST altGlyph clip-path CDATA #IMPLIED>
    <!ATTLIST altGlyph clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST altGlyph mask CDATA #IMPLIED>
    <!ATTLIST altGlyph filter CDATA #IMPLIED>
    <!ATTLIST altGlyph color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST altGlyph cursor CDATA #IMPLIED>
    <!ATTLIST altGlyph flood-color CDATA #IMPLIED>
    <!ATTLIST altGlyph flood-opacity CDATA #IMPLIED>
    <!ATTLIST altGlyph lighting-color CDATA #IMPLIED>
    <!ATTLIST altGlyph onfocusin CDATA #IMPLIED>
    <!ATTLIST altGlyph onfocusout CDATA #IMPLIED>
    <!ATTLIST altGlyph onactivate CDATA #IMPLIED>
    <!ATTLIST altGlyph onclick CDATA #IMPLIED>
    <!ATTLIST altGlyph onmousedown CDATA #IMPLIED>
    <!ATTLIST altGlyph onmouseup CDATA #IMPLIED>
    <!ATTLIST altGlyph onmouseover CDATA #IMPLIED>
    <!ATTLIST altGlyph onmousemove CDATA #IMPLIED>
    <!ATTLIST altGlyph onmouseout CDATA #IMPLIED>
    <!ATTLIST altGlyph onload CDATA #IMPLIED>
    <!ATTLIST altGlyph xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST altGlyph xlink:type (simple) #FIXED "simple">
    <!ATTLIST altGlyph xlink:href CDATA #IMPLIED>
    <!ATTLIST altGlyph xlink:role CDATA #IMPLIED>
    <!ATTLIST altGlyph xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST altGlyph xlink:title CDATA #IMPLIED>
    <!ATTLIST altGlyph xlink:show (other) "other">
    <!ATTLIST altGlyph xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST altGlyph externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST altGlyph x CDATA #IMPLIED>
    <!ATTLIST altGlyph y CDATA #IMPLIED>
    <!ATTLIST altGlyph dx CDATA #IMPLIED>
    <!ATTLIST altGlyph dy CDATA #IMPLIED>
    <!ATTLIST altGlyph glyphRef CDATA #IMPLIED>
    <!ATTLIST altGlyph format CDATA #IMPLIED>
    <!ATTLIST altGlyph rotate CDATA #IMPLIED>
    <!ENTITY % SVG.altGlyphDef.extra.content "">
    <!ENTITY % SVG.altGlyphDef.element "INCLUDE">
    <!ENTITY % SVG.altGlyphDef.content "(( glyphRef+ | altGlyphItem+ )
         )">
    <!ELEMENT altGlyphDef (glyphRef+ | altGlyphItem+)>
    <!ENTITY % SVG.altGlyphDef.attlist "INCLUDE">
    <!ATTLIST altGlyphDef id ID #IMPLIED>
    <!ATTLIST altGlyphDef xml:base CDATA #IMPLIED>
    <!ATTLIST altGlyphDef xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST altGlyphDef xml:space (default|preserve) #IMPLIED>
    <!ENTITY % SVG.altGlyphItem.extra.content "">
    <!ENTITY % SVG.altGlyphItem.element "INCLUDE">
    <!ENTITY % SVG.altGlyphItem.content "( glyphRef+  )">
    <!ELEMENT altGlyphItem (glyphRef)+>
    <!ENTITY % SVG.altGlyphItem.attlist "INCLUDE">
    <!ATTLIST altGlyphItem id ID #IMPLIED>
    <!ATTLIST altGlyphItem xml:base CDATA #IMPLIED>
    <!ATTLIST altGlyphItem xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST altGlyphItem xml:space (default|preserve) #IMPLIED>
    <!ENTITY % SVG.glyphRef.element "INCLUDE">
    <!ENTITY % SVG.glyphRef.content "EMPTY">
    <!ELEMENT glyphRef EMPTY>
    <!ENTITY % SVG.glyphRef.attlist "INCLUDE">
    <!ATTLIST glyphRef id ID #IMPLIED>
    <!ATTLIST glyphRef xml:base CDATA #IMPLIED>
    <!ATTLIST glyphRef xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST glyphRef xml:space (default|preserve) #IMPLIED>
    <!ATTLIST glyphRef style CDATA #IMPLIED>
    <!ATTLIST glyphRef class CDATA #IMPLIED>
    <!ATTLIST glyphRef enable-background CDATA #IMPLIED>
    <!ATTLIST glyphRef clip CDATA #IMPLIED>
    <!ATTLIST glyphRef overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST glyphRef writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST glyphRef alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST glyphRef baseline-shift CDATA #IMPLIED>
    <!ATTLIST glyphRef direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST glyphRef dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST glyphRef glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST glyphRef glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST glyphRef kerning CDATA #IMPLIED>
    <!ATTLIST glyphRef letter-spacing CDATA #IMPLIED>
    <!ATTLIST glyphRef text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST glyphRef text-decoration CDATA #IMPLIED>
    <!ATTLIST glyphRef unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST glyphRef word-spacing CDATA #IMPLIED>
    <!ATTLIST glyphRef font-family CDATA #IMPLIED>
    <!ATTLIST glyphRef font-size CDATA #IMPLIED>
    <!ATTLIST glyphRef font-size-adjust CDATA #IMPLIED>
    <!ATTLIST glyphRef font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST glyphRef font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST glyphRef font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST glyphRef font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST glyphRef fill CDATA #IMPLIED>
    <!ATTLIST glyphRef fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST glyphRef stroke CDATA #IMPLIED>
    <!ATTLIST glyphRef stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST glyphRef stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST glyphRef stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST glyphRef stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST glyphRef stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST glyphRef stroke-width CDATA #IMPLIED>
    <!ATTLIST glyphRef color CDATA #IMPLIED>
    <!ATTLIST glyphRef color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST glyphRef color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST glyphRef opacity CDATA #IMPLIED>
    <!ATTLIST glyphRef fill-opacity CDATA #IMPLIED>
    <!ATTLIST glyphRef stroke-opacity CDATA #IMPLIED>
    <!ATTLIST glyphRef display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST glyphRef image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST glyphRef pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST glyphRef shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST glyphRef text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST glyphRef visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST glyphRef marker-start CDATA #IMPLIED>
    <!ATTLIST glyphRef marker-mid CDATA #IMPLIED>
    <!ATTLIST glyphRef marker-end CDATA #IMPLIED>
    <!ATTLIST glyphRef color-profile CDATA #IMPLIED>
    <!ATTLIST glyphRef stop-color CDATA #IMPLIED>
    <!ATTLIST glyphRef stop-opacity CDATA #IMPLIED>
    <!ATTLIST glyphRef clip-path CDATA #IMPLIED>
    <!ATTLIST glyphRef clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST glyphRef mask CDATA #IMPLIED>
    <!ATTLIST glyphRef filter CDATA #IMPLIED>
    <!ATTLIST glyphRef color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST glyphRef cursor CDATA #IMPLIED>
    <!ATTLIST glyphRef flood-color CDATA #IMPLIED>
    <!ATTLIST glyphRef flood-opacity CDATA #IMPLIED>
    <!ATTLIST glyphRef lighting-color CDATA #IMPLIED>
    <!ATTLIST glyphRef xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST glyphRef xlink:type (simple) #FIXED "simple">
    <!ATTLIST glyphRef xlink:href CDATA #IMPLIED>
    <!ATTLIST glyphRef xlink:role CDATA #IMPLIED>
    <!ATTLIST glyphRef xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST glyphRef xlink:title CDATA #IMPLIED>
    <!ATTLIST glyphRef xlink:show (other) "other">
    <!ATTLIST glyphRef xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST glyphRef x CDATA #IMPLIED>
    <!ATTLIST glyphRef y CDATA #IMPLIED>
    <!ATTLIST glyphRef dx CDATA #IMPLIED>
    <!ATTLIST glyphRef dy CDATA #IMPLIED>
    <!ATTLIST glyphRef glyphRef CDATA #IMPLIED>
    <!ATTLIST glyphRef format CDATA #IMPLIED>
    <!ENTITY % svg-marker.module "INCLUDE">
    <!ENTITY % svg-marker.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Marker//EN" "svg-marker.mod">
    <!ENTITY % SVG.marker.extra.content "">
    <!ENTITY % SVG.marker.element "INCLUDE">
    <!ENTITY % SVG.marker.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | svg | g | defs | symbol
       | use  
       | switch  | image  | style 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT marker (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.marker.attlist "INCLUDE">
    <!ATTLIST marker id ID #IMPLIED>
    <!ATTLIST marker xml:base CDATA #IMPLIED>
    <!ATTLIST marker xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST marker xml:space (default|preserve) #IMPLIED>
    <!ATTLIST marker style CDATA #IMPLIED>
    <!ATTLIST marker class CDATA #IMPLIED>
    <!ATTLIST marker enable-background CDATA #IMPLIED>
    <!ATTLIST marker clip CDATA #IMPLIED>
    <!ATTLIST marker overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST marker writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST marker alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST marker baseline-shift CDATA #IMPLIED>
    <!ATTLIST marker direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST marker dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST marker glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST marker glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST marker kerning CDATA #IMPLIED>
    <!ATTLIST marker letter-spacing CDATA #IMPLIED>
    <!ATTLIST marker text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST marker text-decoration CDATA #IMPLIED>
    <!ATTLIST marker unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST marker word-spacing CDATA #IMPLIED>
    <!ATTLIST marker font-family CDATA #IMPLIED>
    <!ATTLIST marker font-size CDATA #IMPLIED>
    <!ATTLIST marker font-size-adjust CDATA #IMPLIED>
    <!ATTLIST marker font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST marker font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST marker font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST marker font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST marker fill CDATA #IMPLIED>
    <!ATTLIST marker fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST marker stroke CDATA #IMPLIED>
    <!ATTLIST marker stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST marker stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST marker stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST marker stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST marker stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST marker stroke-width CDATA #IMPLIED>
    <!ATTLIST marker color CDATA #IMPLIED>
    <!ATTLIST marker color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST marker color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST marker opacity CDATA #IMPLIED>
    <!ATTLIST marker fill-opacity CDATA #IMPLIED>
    <!ATTLIST marker stroke-opacity CDATA #IMPLIED>
    <!ATTLIST marker display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST marker image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST marker pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST marker shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST marker text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST marker visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST marker marker-start CDATA #IMPLIED>
    <!ATTLIST marker marker-mid CDATA #IMPLIED>
    <!ATTLIST marker marker-end CDATA #IMPLIED>
    <!ATTLIST marker color-profile CDATA #IMPLIED>
    <!ATTLIST marker stop-color CDATA #IMPLIED>
    <!ATTLIST marker stop-opacity CDATA #IMPLIED>
    <!ATTLIST marker clip-path CDATA #IMPLIED>
    <!ATTLIST marker clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST marker mask CDATA #IMPLIED>
    <!ATTLIST marker filter CDATA #IMPLIED>
    <!ATTLIST marker color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST marker cursor CDATA #IMPLIED>
    <!ATTLIST marker flood-color CDATA #IMPLIED>
    <!ATTLIST marker flood-opacity CDATA #IMPLIED>
    <!ATTLIST marker lighting-color CDATA #IMPLIED>
    <!ATTLIST marker externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST marker refX CDATA #IMPLIED>
    <!ATTLIST marker refY CDATA #IMPLIED>
    <!ATTLIST marker markerUnits (strokeWidth|userSpaceOnUse) #IMPLIED>
    <!ATTLIST marker markerWidth CDATA #IMPLIED>
    <!ATTLIST marker markerHeight CDATA #IMPLIED>
    <!ATTLIST marker orient CDATA #IMPLIED>
    <!ATTLIST marker viewBox CDATA #IMPLIED>
    <!ATTLIST marker preserveAspectRatio CDATA "xMidYMid meet">
    <!ENTITY % svg-profile.module "INCLUDE">
    <!ENTITY % svg-profile.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Color Profile//EN" "svg-profile.mod">
    <!ENTITY % SVG.color-profile.extra.content "">
    <!ENTITY % SVG.color-profile.element "INCLUDE">
    <!ENTITY % SVG.color-profile.content "( desc | title | metadata
       )*">
    <!ELEMENT color-profile (desc | title | metadata)*>
    <!ENTITY % SVG.color-profile.attlist "INCLUDE">
    <!ATTLIST color-profile id ID #IMPLIED>
    <!ATTLIST color-profile xml:base CDATA #IMPLIED>
    <!ATTLIST color-profile xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST color-profile xml:space (default|preserve) #IMPLIED>
    <!ATTLIST color-profile xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST color-profile xlink:type (simple) #FIXED "simple">
    <!ATTLIST color-profile xlink:href CDATA #IMPLIED>
    <!ATTLIST color-profile xlink:role CDATA #IMPLIED>
    <!ATTLIST color-profile xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST color-profile xlink:title CDATA #IMPLIED>
    <!ATTLIST color-profile xlink:show (other) "other">
    <!ATTLIST color-profile xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST color-profile local CDATA #IMPLIED>
    <!ATTLIST color-profile name CDATA #REQUIRED>
    <!ATTLIST color-profile rendering-intent (auto|perceptual|relative-colorimetric|saturation|absolute-colorimetric) "auto">
    <!ENTITY % svg-gradient.module "INCLUDE">
    <!ENTITY % svg-gradient.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Gradient//EN" "svg-gradient.mod">
    <!ENTITY % SVG.linearGradient.extra.content "">
    <!ENTITY % SVG.linearGradient.element "INCLUDE">
    <!ENTITY % SVG.linearGradient.content "( desc | title | metadata
      | stop | animate
     | set | animateTransform
        )*">
    <!ELEMENT linearGradient (desc | title | metadata | stop | animate | set | animateTransform)*>
    <!ENTITY % SVG.linearGradient.attlist "INCLUDE">
    <!ATTLIST linearGradient id ID #IMPLIED>
    <!ATTLIST linearGradient xml:base CDATA #IMPLIED>
    <!ATTLIST linearGradient xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST linearGradient xml:space (default|preserve) #IMPLIED>
    <!ATTLIST linearGradient style CDATA #IMPLIED>
    <!ATTLIST linearGradient class CDATA #IMPLIED>
    <!ATTLIST linearGradient enable-background CDATA #IMPLIED>
    <!ATTLIST linearGradient clip CDATA #IMPLIED>
    <!ATTLIST linearGradient overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST linearGradient writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST linearGradient alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST linearGradient baseline-shift CDATA #IMPLIED>
    <!ATTLIST linearGradient direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST linearGradient dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST linearGradient glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST linearGradient glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST linearGradient kerning CDATA #IMPLIED>
    <!ATTLIST linearGradient letter-spacing CDATA #IMPLIED>
    <!ATTLIST linearGradient text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST linearGradient text-decoration CDATA #IMPLIED>
    <!ATTLIST linearGradient unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST linearGradient word-spacing CDATA #IMPLIED>
    <!ATTLIST linearGradient font-family CDATA #IMPLIED>
    <!ATTLIST linearGradient font-size CDATA #IMPLIED>
    <!ATTLIST linearGradient font-size-adjust CDATA #IMPLIED>
    <!ATTLIST linearGradient font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST linearGradient font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST linearGradient font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST linearGradient font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST linearGradient fill CDATA #IMPLIED>
    <!ATTLIST linearGradient fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST linearGradient stroke CDATA #IMPLIED>
    <!ATTLIST linearGradient stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST linearGradient stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST linearGradient stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST linearGradient stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST linearGradient stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST linearGradient stroke-width CDATA #IMPLIED>
    <!ATTLIST linearGradient color CDATA #IMPLIED>
    <!ATTLIST linearGradient color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST linearGradient color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST linearGradient opacity CDATA #IMPLIED>
    <!ATTLIST linearGradient fill-opacity CDATA #IMPLIED>
    <!ATTLIST linearGradient stroke-opacity CDATA #IMPLIED>
    <!ATTLIST linearGradient display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST linearGradient image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST linearGradient pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST linearGradient shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST linearGradient text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST linearGradient visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST linearGradient marker-start CDATA #IMPLIED>
    <!ATTLIST linearGradient marker-mid CDATA #IMPLIED>
    <!ATTLIST linearGradient marker-end CDATA #IMPLIED>
    <!ATTLIST linearGradient color-profile CDATA #IMPLIED>
    <!ATTLIST linearGradient stop-color CDATA #IMPLIED>
    <!ATTLIST linearGradient stop-opacity CDATA #IMPLIED>
    <!ATTLIST linearGradient clip-path CDATA #IMPLIED>
    <!ATTLIST linearGradient clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST linearGradient mask CDATA #IMPLIED>
    <!ATTLIST linearGradient filter CDATA #IMPLIED>
    <!ATTLIST linearGradient color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST linearGradient cursor CDATA #IMPLIED>
    <!ATTLIST linearGradient flood-color CDATA #IMPLIED>
    <!ATTLIST linearGradient flood-opacity CDATA #IMPLIED>
    <!ATTLIST linearGradient lighting-color CDATA #IMPLIED>
    <!ATTLIST linearGradient xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST linearGradient xlink:type (simple) #FIXED "simple">
    <!ATTLIST linearGradient xlink:href CDATA #IMPLIED>
    <!ATTLIST linearGradient xlink:role CDATA #IMPLIED>
    <!ATTLIST linearGradient xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST linearGradient xlink:title CDATA #IMPLIED>
    <!ATTLIST linearGradient xlink:show (other) "other">
    <!ATTLIST linearGradient xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST linearGradient externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST linearGradient x1 CDATA #IMPLIED>
    <!ATTLIST linearGradient y1 CDATA #IMPLIED>
    <!ATTLIST linearGradient x2 CDATA #IMPLIED>
    <!ATTLIST linearGradient y2 CDATA #IMPLIED>
    <!ATTLIST linearGradient gradientUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>
    <!ATTLIST linearGradient gradientTransform CDATA #IMPLIED>
    <!ATTLIST linearGradient spreadMethod (pad|reflect|repeat) #IMPLIED>
    <!ENTITY % SVG.radialGradient.extra.content "">
    <!ENTITY % SVG.radialGradient.element "INCLUDE">
    <!ENTITY % SVG.radialGradient.content "( desc | title | metadata
      | stop | animate
     | set | animateTransform
        )*">
    <!ELEMENT radialGradient (desc | title | metadata | stop | animate | set | animateTransform)*>
    <!ENTITY % SVG.radialGradient.attlist "INCLUDE">
    <!ATTLIST radialGradient id ID #IMPLIED>
    <!ATTLIST radialGradient xml:base CDATA #IMPLIED>
    <!ATTLIST radialGradient xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST radialGradient xml:space (default|preserve) #IMPLIED>
    <!ATTLIST radialGradient style CDATA #IMPLIED>
    <!ATTLIST radialGradient class CDATA #IMPLIED>
    <!ATTLIST radialGradient enable-background CDATA #IMPLIED>
    <!ATTLIST radialGradient clip CDATA #IMPLIED>
    <!ATTLIST radialGradient overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST radialGradient writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST radialGradient alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST radialGradient baseline-shift CDATA #IMPLIED>
    <!ATTLIST radialGradient direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST radialGradient dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST radialGradient glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST radialGradient glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST radialGradient kerning CDATA #IMPLIED>
    <!ATTLIST radialGradient letter-spacing CDATA #IMPLIED>
    <!ATTLIST radialGradient text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST radialGradient text-decoration CDATA #IMPLIED>
    <!ATTLIST radialGradient unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST radialGradient word-spacing CDATA #IMPLIED>
    <!ATTLIST radialGradient font-family CDATA #IMPLIED>
    <!ATTLIST radialGradient font-size CDATA #IMPLIED>
    <!ATTLIST radialGradient font-size-adjust CDATA #IMPLIED>
    <!ATTLIST radialGradient font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST radialGradient font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST radialGradient font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST radialGradient font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST radialGradient fill CDATA #IMPLIED>
    <!ATTLIST radialGradient fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST radialGradient stroke CDATA #IMPLIED>
    <!ATTLIST radialGradient stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST radialGradient stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST radialGradient stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST radialGradient stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST radialGradient stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST radialGradient stroke-width CDATA #IMPLIED>
    <!ATTLIST radialGradient color CDATA #IMPLIED>
    <!ATTLIST radialGradient color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST radialGradient color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST radialGradient opacity CDATA #IMPLIED>
    <!ATTLIST radialGradient fill-opacity CDATA #IMPLIED>
    <!ATTLIST radialGradient stroke-opacity CDATA #IMPLIED>
    <!ATTLIST radialGradient display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST radialGradient image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST radialGradient pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST radialGradient shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST radialGradient text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST radialGradient visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST radialGradient marker-start CDATA #IMPLIED>
    <!ATTLIST radialGradient marker-mid CDATA #IMPLIED>
    <!ATTLIST radialGradient marker-end CDATA #IMPLIED>
    <!ATTLIST radialGradient color-profile CDATA #IMPLIED>
    <!ATTLIST radialGradient stop-color CDATA #IMPLIED>
    <!ATTLIST radialGradient stop-opacity CDATA #IMPLIED>
    <!ATTLIST radialGradient clip-path CDATA #IMPLIED>
    <!ATTLIST radialGradient clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST radialGradient mask CDATA #IMPLIED>
    <!ATTLIST radialGradient filter CDATA #IMPLIED>
    <!ATTLIST radialGradient color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST radialGradient cursor CDATA #IMPLIED>
    <!ATTLIST radialGradient flood-color CDATA #IMPLIED>
    <!ATTLIST radialGradient flood-opacity CDATA #IMPLIED>
    <!ATTLIST radialGradient lighting-color CDATA #IMPLIED>
    <!ATTLIST radialGradient xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST radialGradient xlink:type (simple) #FIXED "simple">
    <!ATTLIST radialGradient xlink:href CDATA #IMPLIED>
    <!ATTLIST radialGradient xlink:role CDATA #IMPLIED>
    <!ATTLIST radialGradient xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST radialGradient xlink:title CDATA #IMPLIED>
    <!ATTLIST radialGradient xlink:show (other) "other">
    <!ATTLIST radialGradient xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST radialGradient externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST radialGradient cx CDATA #IMPLIED>
    <!ATTLIST radialGradient cy CDATA #IMPLIED>
    <!ATTLIST radialGradient r CDATA #IMPLIED>
    <!ATTLIST radialGradient fx CDATA #IMPLIED>
    <!ATTLIST radialGradient fy CDATA #IMPLIED>
    <!ATTLIST radialGradient gradientUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>
    <!ATTLIST radialGradient gradientTransform CDATA #IMPLIED>
    <!ATTLIST radialGradient spreadMethod (pad|reflect|repeat) #IMPLIED>
    <!ENTITY % SVG.stop.extra.content "">
    <!ENTITY % SVG.stop.element "INCLUDE">
    <!ENTITY % SVG.stop.content "( animate | set | animateColor
        )*">
    <!ELEMENT stop (animate | set | animateColor)*>
    <!ENTITY % SVG.stop.attlist "INCLUDE">
    <!ATTLIST stop id ID #IMPLIED>
    <!ATTLIST stop xml:base CDATA #IMPLIED>
    <!ATTLIST stop xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST stop xml:space (default|preserve) #IMPLIED>
    <!ATTLIST stop style CDATA #IMPLIED>
    <!ATTLIST stop class CDATA #IMPLIED>
    <!ATTLIST stop enable-background CDATA #IMPLIED>
    <!ATTLIST stop clip CDATA #IMPLIED>
    <!ATTLIST stop overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST stop writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST stop alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST stop baseline-shift CDATA #IMPLIED>
    <!ATTLIST stop direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST stop dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST stop glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST stop glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST stop kerning CDATA #IMPLIED>
    <!ATTLIST stop letter-spacing CDATA #IMPLIED>
    <!ATTLIST stop text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST stop text-decoration CDATA #IMPLIED>
    <!ATTLIST stop unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST stop word-spacing CDATA #IMPLIED>
    <!ATTLIST stop font-family CDATA #IMPLIED>
    <!ATTLIST stop font-size CDATA #IMPLIED>
    <!ATTLIST stop font-size-adjust CDATA #IMPLIED>
    <!ATTLIST stop font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST stop font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST stop font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST stop font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST stop fill CDATA #IMPLIED>
    <!ATTLIST stop fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST stop stroke CDATA #IMPLIED>
    <!ATTLIST stop stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST stop stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST stop stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST stop stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST stop stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST stop stroke-width CDATA #IMPLIED>
    <!ATTLIST stop color CDATA #IMPLIED>
    <!ATTLIST stop color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST stop color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST stop opacity CDATA #IMPLIED>
    <!ATTLIST stop fill-opacity CDATA #IMPLIED>
    <!ATTLIST stop stroke-opacity CDATA #IMPLIED>
    <!ATTLIST stop display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST stop image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST stop pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST stop shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST stop text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST stop visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST stop marker-start CDATA #IMPLIED>
    <!ATTLIST stop marker-mid CDATA #IMPLIED>
    <!ATTLIST stop marker-end CDATA #IMPLIED>
    <!ATTLIST stop color-profile CDATA #IMPLIED>
    <!ATTLIST stop stop-color CDATA #IMPLIED>
    <!ATTLIST stop stop-opacity CDATA #IMPLIED>
    <!ATTLIST stop clip-path CDATA #IMPLIED>
    <!ATTLIST stop clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST stop mask CDATA #IMPLIED>
    <!ATTLIST stop filter CDATA #IMPLIED>
    <!ATTLIST stop color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST stop cursor CDATA #IMPLIED>
    <!ATTLIST stop flood-color CDATA #IMPLIED>
    <!ATTLIST stop flood-opacity CDATA #IMPLIED>
    <!ATTLIST stop lighting-color CDATA #IMPLIED>
    <!ATTLIST stop offset CDATA #REQUIRED>
    <!ENTITY % svg-pattern.module "INCLUDE">
    <!ENTITY % svg-pattern.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Pattern//EN" "svg-pattern.mod">
    <!ENTITY % SVG.pattern.extra.content "">
    <!ENTITY % SVG.pattern.element "INCLUDE">
    <!ENTITY % SVG.pattern.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | svg | g | defs | symbol
       | use  
       | switch  | image  | style 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT pattern (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.pattern.attlist "INCLUDE">
    <!ATTLIST pattern id ID #IMPLIED>
    <!ATTLIST pattern xml:base CDATA #IMPLIED>
    <!ATTLIST pattern xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST pattern xml:space (default|preserve) #IMPLIED>
    <!ATTLIST pattern requiredFeatures CDATA #IMPLIED>
    <!ATTLIST pattern requiredExtensions CDATA #IMPLIED>
    <!ATTLIST pattern systemLanguage CDATA #IMPLIED>
    <!ATTLIST pattern style CDATA #IMPLIED>
    <!ATTLIST pattern class CDATA #IMPLIED>
    <!ATTLIST pattern enable-background CDATA #IMPLIED>
    <!ATTLIST pattern clip CDATA #IMPLIED>
    <!ATTLIST pattern overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST pattern writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST pattern alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST pattern baseline-shift CDATA #IMPLIED>
    <!ATTLIST pattern direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST pattern dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST pattern glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST pattern glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST pattern kerning CDATA #IMPLIED>
    <!ATTLIST pattern letter-spacing CDATA #IMPLIED>
    <!ATTLIST pattern text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST pattern text-decoration CDATA #IMPLIED>
    <!ATTLIST pattern unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST pattern word-spacing CDATA #IMPLIED>
    <!ATTLIST pattern font-family CDATA #IMPLIED>
    <!ATTLIST pattern font-size CDATA #IMPLIED>
    <!ATTLIST pattern font-size-adjust CDATA #IMPLIED>
    <!ATTLIST pattern font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST pattern font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST pattern font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST pattern font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST pattern fill CDATA #IMPLIED>
    <!ATTLIST pattern fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST pattern stroke CDATA #IMPLIED>
    <!ATTLIST pattern stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST pattern stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST pattern stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST pattern stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST pattern stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST pattern stroke-width CDATA #IMPLIED>
    <!ATTLIST pattern color CDATA #IMPLIED>
    <!ATTLIST pattern color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST pattern color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST pattern opacity CDATA #IMPLIED>
    <!ATTLIST pattern fill-opacity CDATA #IMPLIED>
    <!ATTLIST pattern stroke-opacity CDATA #IMPLIED>
    <!ATTLIST pattern display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST pattern image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST pattern pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST pattern shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST pattern text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST pattern visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST pattern marker-start CDATA #IMPLIED>
    <!ATTLIST pattern marker-mid CDATA #IMPLIED>
    <!ATTLIST pattern marker-end CDATA #IMPLIED>
    <!ATTLIST pattern color-profile CDATA #IMPLIED>
    <!ATTLIST pattern stop-color CDATA #IMPLIED>
    <!ATTLIST pattern stop-opacity CDATA #IMPLIED>
    <!ATTLIST pattern clip-path CDATA #IMPLIED>
    <!ATTLIST pattern clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST pattern mask CDATA #IMPLIED>
    <!ATTLIST pattern filter CDATA #IMPLIED>
    <!ATTLIST pattern color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST pattern cursor CDATA #IMPLIED>
    <!ATTLIST pattern flood-color CDATA #IMPLIED>
    <!ATTLIST pattern flood-opacity CDATA #IMPLIED>
    <!ATTLIST pattern lighting-color CDATA #IMPLIED>
    <!ATTLIST pattern xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST pattern xlink:type (simple) #FIXED "simple">
    <!ATTLIST pattern xlink:href CDATA #IMPLIED>
    <!ATTLIST pattern xlink:role CDATA #IMPLIED>
    <!ATTLIST pattern xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST pattern xlink:title CDATA #IMPLIED>
    <!ATTLIST pattern xlink:show (other) "other">
    <!ATTLIST pattern xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST pattern externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST pattern x CDATA #IMPLIED>
    <!ATTLIST pattern y CDATA #IMPLIED>
    <!ATTLIST pattern width CDATA #IMPLIED>
    <!ATTLIST pattern height CDATA #IMPLIED>
    <!ATTLIST pattern patternUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>
    <!ATTLIST pattern patternContentUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>
    <!ATTLIST pattern patternTransform CDATA #IMPLIED>
    <!ATTLIST pattern viewBox CDATA #IMPLIED>
    <!ATTLIST pattern preserveAspectRatio CDATA "xMidYMid meet">
    <!ENTITY % svg-clip.module "INCLUDE">
    <!ENTITY % svg-clip.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Clip//EN" "svg-clip.mod">
    <!ENTITY % SVG.clipPath.extra.content "">
    <!ENTITY % SVG.clipPath.element "INCLUDE">
    <!ENTITY % SVG.clipPath.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | use 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text  )*">
    <!ELEMENT clipPath (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | use | path | rect | circle | line | ellipse | polyline | polygon | text)*>
    <!ENTITY % SVG.clipPath.attlist "INCLUDE">
    <!ATTLIST clipPath id ID #IMPLIED>
    <!ATTLIST clipPath xml:base CDATA #IMPLIED>
    <!ATTLIST clipPath xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST clipPath xml:space (default|preserve) #IMPLIED>
    <!ATTLIST clipPath requiredFeatures CDATA #IMPLIED>
    <!ATTLIST clipPath requiredExtensions CDATA #IMPLIED>
    <!ATTLIST clipPath systemLanguage CDATA #IMPLIED>
    <!ATTLIST clipPath style CDATA #IMPLIED>
    <!ATTLIST clipPath class CDATA #IMPLIED>
    <!ATTLIST clipPath enable-background CDATA #IMPLIED>
    <!ATTLIST clipPath clip CDATA #IMPLIED>
    <!ATTLIST clipPath overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST clipPath writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST clipPath alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST clipPath baseline-shift CDATA #IMPLIED>
    <!ATTLIST clipPath direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST clipPath dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST clipPath glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST clipPath glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST clipPath kerning CDATA #IMPLIED>
    <!ATTLIST clipPath letter-spacing CDATA #IMPLIED>
    <!ATTLIST clipPath text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST clipPath text-decoration CDATA #IMPLIED>
    <!ATTLIST clipPath unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST clipPath word-spacing CDATA #IMPLIED>
    <!ATTLIST clipPath font-family CDATA #IMPLIED>
    <!ATTLIST clipPath font-size CDATA #IMPLIED>
    <!ATTLIST clipPath font-size-adjust CDATA #IMPLIED>
    <!ATTLIST clipPath font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST clipPath font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST clipPath font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST clipPath font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST clipPath fill CDATA #IMPLIED>
    <!ATTLIST clipPath fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST clipPath stroke CDATA #IMPLIED>
    <!ATTLIST clipPath stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST clipPath stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST clipPath stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST clipPath stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST clipPath stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST clipPath stroke-width CDATA #IMPLIED>
    <!ATTLIST clipPath color CDATA #IMPLIED>
    <!ATTLIST clipPath color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST clipPath color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST clipPath opacity CDATA #IMPLIED>
    <!ATTLIST clipPath fill-opacity CDATA #IMPLIED>
    <!ATTLIST clipPath stroke-opacity CDATA #IMPLIED>
    <!ATTLIST clipPath display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST clipPath image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST clipPath pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST clipPath shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST clipPath text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST clipPath visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST clipPath marker-start CDATA #IMPLIED>
    <!ATTLIST clipPath marker-mid CDATA #IMPLIED>
    <!ATTLIST clipPath marker-end CDATA #IMPLIED>
    <!ATTLIST clipPath color-profile CDATA #IMPLIED>
    <!ATTLIST clipPath stop-color CDATA #IMPLIED>
    <!ATTLIST clipPath stop-opacity CDATA #IMPLIED>
    <!ATTLIST clipPath clip-path CDATA #IMPLIED>
    <!ATTLIST clipPath clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST clipPath mask CDATA #IMPLIED>
    <!ATTLIST clipPath filter CDATA #IMPLIED>
    <!ATTLIST clipPath color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST clipPath cursor CDATA #IMPLIED>
    <!ATTLIST clipPath flood-color CDATA #IMPLIED>
    <!ATTLIST clipPath flood-opacity CDATA #IMPLIED>
    <!ATTLIST clipPath lighting-color CDATA #IMPLIED>
    <!ATTLIST clipPath externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST clipPath transform CDATA #IMPLIED>
    <!ATTLIST clipPath clipPathUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>
    <!ENTITY % svg-mask.module "INCLUDE">
    <!ENTITY % svg-mask.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Mask//EN" "svg-mask.mod">
    <!ENTITY % SVG.mask.extra.content "">
    <!ENTITY % SVG.mask.element "INCLUDE">
    <!ENTITY % SVG.mask.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | svg | g | defs | symbol
       | use  
       | switch  | image  | style 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT mask (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.mask.attlist "INCLUDE">
    <!ATTLIST mask id ID #IMPLIED>
    <!ATTLIST mask xml:base CDATA #IMPLIED>
    <!ATTLIST mask xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST mask xml:space (default|preserve) #IMPLIED>
    <!ATTLIST mask requiredFeatures CDATA #IMPLIED>
    <!ATTLIST mask requiredExtensions CDATA #IMPLIED>
    <!ATTLIST mask systemLanguage CDATA #IMPLIED>
    <!ATTLIST mask style CDATA #IMPLIED>
    <!ATTLIST mask class CDATA #IMPLIED>
    <!ATTLIST mask enable-background CDATA #IMPLIED>
    <!ATTLIST mask clip CDATA #IMPLIED>
    <!ATTLIST mask overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST mask writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST mask alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST mask baseline-shift CDATA #IMPLIED>
    <!ATTLIST mask direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST mask dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST mask glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST mask glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST mask kerning CDATA #IMPLIED>
    <!ATTLIST mask letter-spacing CDATA #IMPLIED>
    <!ATTLIST mask text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST mask text-decoration CDATA #IMPLIED>
    <!ATTLIST mask unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST mask word-spacing CDATA #IMPLIED>
    <!ATTLIST mask font-family CDATA #IMPLIED>
    <!ATTLIST mask font-size CDATA #IMPLIED>
    <!ATTLIST mask font-size-adjust CDATA #IMPLIED>
    <!ATTLIST mask font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST mask font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST mask font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST mask font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST mask fill CDATA #IMPLIED>
    <!ATTLIST mask fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST mask stroke CDATA #IMPLIED>
    <!ATTLIST mask stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST mask stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST mask stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST mask stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST mask stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST mask stroke-width CDATA #IMPLIED>
    <!ATTLIST mask color CDATA #IMPLIED>
    <!ATTLIST mask color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST mask color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST mask opacity CDATA #IMPLIED>
    <!ATTLIST mask fill-opacity CDATA #IMPLIED>
    <!ATTLIST mask stroke-opacity CDATA #IMPLIED>
    <!ATTLIST mask display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST mask image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST mask pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST mask shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST mask text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST mask visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST mask marker-start CDATA #IMPLIED>
    <!ATTLIST mask marker-mid CDATA #IMPLIED>
    <!ATTLIST mask marker-end CDATA #IMPLIED>
    <!ATTLIST mask color-profile CDATA #IMPLIED>
    <!ATTLIST mask stop-color CDATA #IMPLIED>
    <!ATTLIST mask stop-opacity CDATA #IMPLIED>
    <!ATTLIST mask clip-path CDATA #IMPLIED>
    <!ATTLIST mask clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST mask mask CDATA #IMPLIED>
    <!ATTLIST mask filter CDATA #IMPLIED>
    <!ATTLIST mask color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST mask cursor CDATA #IMPLIED>
    <!ATTLIST mask flood-color CDATA #IMPLIED>
    <!ATTLIST mask flood-opacity CDATA #IMPLIED>
    <!ATTLIST mask lighting-color CDATA #IMPLIED>
    <!ATTLIST mask externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST mask x CDATA #IMPLIED>
    <!ATTLIST mask y CDATA #IMPLIED>
    <!ATTLIST mask width CDATA #IMPLIED>
    <!ATTLIST mask height CDATA #IMPLIED>
    <!ATTLIST mask maskUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>
    <!ATTLIST mask maskContentUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>
    <!ENTITY % svg-filter.module "INCLUDE">
    <!ENTITY % svg-filter.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Filter//EN" "svg-filter.mod">
    <!ENTITY % SVG.FilterPrimitive.extra.attrib "">
    <!ENTITY % SVG.FilterPrimitive.attrib "x CDATA #IMPLIED
     y CDATA #IMPLIED
     width CDATA #IMPLIED
     height CDATA #IMPLIED
     result CDATA #IMPLIED
     ">
    <!ENTITY % SVG.FilterPrimitiveWithIn.extra.attrib "">
    <!ENTITY % SVG.FilterPrimitiveWithIn.attrib "x CDATA #IMPLIED
     y CDATA #IMPLIED
     width CDATA #IMPLIED
     height CDATA #IMPLIED
     result CDATA #IMPLIED
     
     in CDATA #IMPLIED
     ">
    <!ENTITY % SVG.filter.extra.content "">
    <!ENTITY % SVG.filter.element "INCLUDE">
    <!ENTITY % SVG.filter.content "( desc | title | metadata
      | animate | set
       | feBlend | feColorMatrix
     | feComponentTransfer | feComposite
     | feConvolveMatrix | feDiffuseLighting
     | feDisplacementMap | feFlood
     | feGaussianBlur | feImage | feMerge
     | feMorphology | feOffset
     | feSpecularLighting | feTile
     | feTurbulence   )*">
    <!ELEMENT filter (desc | title | metadata | animate | set | feBlend | feColorMatrix | feComponentTransfer | feComposite | feConvolveMatrix | feDiffuseLighting | feDisplacementMap | feFlood | feGaussianBlur | feImage | feMerge | feMorphology | feOffset | feSpecularLighting | feTile | feTurbulence)*>
    <!ENTITY % SVG.filter.attlist "INCLUDE">
    <!ATTLIST filter id ID #IMPLIED>
    <!ATTLIST filter xml:base CDATA #IMPLIED>
    <!ATTLIST filter xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST filter xml:space (default|preserve) #IMPLIED>
    <!ATTLIST filter style CDATA #IMPLIED>
    <!ATTLIST filter class CDATA #IMPLIED>
    <!ATTLIST filter enable-background CDATA #IMPLIED>
    <!ATTLIST filter clip CDATA #IMPLIED>
    <!ATTLIST filter overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST filter writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST filter alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST filter baseline-shift CDATA #IMPLIED>
    <!ATTLIST filter direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST filter dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST filter glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST filter glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST filter kerning CDATA #IMPLIED>
    <!ATTLIST filter letter-spacing CDATA #IMPLIED>
    <!ATTLIST filter text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST filter text-decoration CDATA #IMPLIED>
    <!ATTLIST filter unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST filter word-spacing CDATA #IMPLIED>
    <!ATTLIST filter font-family CDATA #IMPLIED>
    <!ATTLIST filter font-size CDATA #IMPLIED>
    <!ATTLIST filter font-size-adjust CDATA #IMPLIED>
    <!ATTLIST filter font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST filter font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST filter font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST filter font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST filter fill CDATA #IMPLIED>
    <!ATTLIST filter fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST filter stroke CDATA #IMPLIED>
    <!ATTLIST filter stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST filter stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST filter stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST filter stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST filter stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST filter stroke-width CDATA #IMPLIED>
    <!ATTLIST filter color CDATA #IMPLIED>
    <!ATTLIST filter color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST filter color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST filter opacity CDATA #IMPLIED>
    <!ATTLIST filter fill-opacity CDATA #IMPLIED>
    <!ATTLIST filter stroke-opacity CDATA #IMPLIED>
    <!ATTLIST filter display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST filter image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST filter pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST filter shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST filter text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST filter visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST filter marker-start CDATA #IMPLIED>
    <!ATTLIST filter marker-mid CDATA #IMPLIED>
    <!ATTLIST filter marker-end CDATA #IMPLIED>
    <!ATTLIST filter color-profile CDATA #IMPLIED>
    <!ATTLIST filter stop-color CDATA #IMPLIED>
    <!ATTLIST filter stop-opacity CDATA #IMPLIED>
    <!ATTLIST filter clip-path CDATA #IMPLIED>
    <!ATTLIST filter clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST filter mask CDATA #IMPLIED>
    <!ATTLIST filter filter CDATA #IMPLIED>
    <!ATTLIST filter color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST filter cursor CDATA #IMPLIED>
    <!ATTLIST filter flood-color CDATA #IMPLIED>
    <!ATTLIST filter flood-opacity CDATA #IMPLIED>
    <!ATTLIST filter lighting-color CDATA #IMPLIED>
    <!ATTLIST filter xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST filter xlink:type (simple) #FIXED "simple">
    <!ATTLIST filter xlink:href CDATA #IMPLIED>
    <!ATTLIST filter xlink:role CDATA #IMPLIED>
    <!ATTLIST filter xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST filter xlink:title CDATA #IMPLIED>
    <!ATTLIST filter xlink:show (other) "other">
    <!ATTLIST filter xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST filter externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST filter x CDATA #IMPLIED>
    <!ATTLIST filter y CDATA #IMPLIED>
    <!ATTLIST filter width CDATA #IMPLIED>
    <!ATTLIST filter height CDATA #IMPLIED>
    <!ATTLIST filter filterRes CDATA #IMPLIED>
    <!ATTLIST filter filterUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>
    <!ATTLIST filter primitiveUnits (userSpaceOnUse|objectBoundingBox) #IMPLIED>
    <!ENTITY % SVG.feBlend.extra.content "">
    <!ENTITY % SVG.feBlend.element "INCLUDE">
    <!ENTITY % SVG.feBlend.content "( animate | set  )*">
    <!ELEMENT feBlend (animate | set)*>
    <!ENTITY % SVG.feBlend.attlist "INCLUDE">
    <!ATTLIST feBlend id ID #IMPLIED>
    <!ATTLIST feBlend xml:base CDATA #IMPLIED>
    <!ATTLIST feBlend xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feBlend xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feBlend style CDATA #IMPLIED>
    <!ATTLIST feBlend class CDATA #IMPLIED>
    <!ATTLIST feBlend enable-background CDATA #IMPLIED>
    <!ATTLIST feBlend clip CDATA #IMPLIED>
    <!ATTLIST feBlend overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feBlend writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feBlend alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feBlend baseline-shift CDATA #IMPLIED>
    <!ATTLIST feBlend direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feBlend dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feBlend glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feBlend glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feBlend kerning CDATA #IMPLIED>
    <!ATTLIST feBlend letter-spacing CDATA #IMPLIED>
    <!ATTLIST feBlend text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feBlend text-decoration CDATA #IMPLIED>
    <!ATTLIST feBlend unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feBlend word-spacing CDATA #IMPLIED>
    <!ATTLIST feBlend font-family CDATA #IMPLIED>
    <!ATTLIST feBlend font-size CDATA #IMPLIED>
    <!ATTLIST feBlend font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feBlend font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feBlend font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feBlend font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feBlend font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feBlend fill CDATA #IMPLIED>
    <!ATTLIST feBlend fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feBlend stroke CDATA #IMPLIED>
    <!ATTLIST feBlend stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feBlend stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feBlend stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feBlend stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feBlend stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feBlend stroke-width CDATA #IMPLIED>
    <!ATTLIST feBlend color CDATA #IMPLIED>
    <!ATTLIST feBlend color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feBlend color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feBlend opacity CDATA #IMPLIED>
    <!ATTLIST feBlend fill-opacity CDATA #IMPLIED>
    <!ATTLIST feBlend stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feBlend display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feBlend image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feBlend pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feBlend shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feBlend text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feBlend visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feBlend marker-start CDATA #IMPLIED>
    <!ATTLIST feBlend marker-mid CDATA #IMPLIED>
    <!ATTLIST feBlend marker-end CDATA #IMPLIED>
    <!ATTLIST feBlend color-profile CDATA #IMPLIED>
    <!ATTLIST feBlend stop-color CDATA #IMPLIED>
    <!ATTLIST feBlend stop-opacity CDATA #IMPLIED>
    <!ATTLIST feBlend clip-path CDATA #IMPLIED>
    <!ATTLIST feBlend clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feBlend mask CDATA #IMPLIED>
    <!ATTLIST feBlend filter CDATA #IMPLIED>
    <!ATTLIST feBlend color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feBlend cursor CDATA #IMPLIED>
    <!ATTLIST feBlend flood-color CDATA #IMPLIED>
    <!ATTLIST feBlend flood-opacity CDATA #IMPLIED>
    <!ATTLIST feBlend lighting-color CDATA #IMPLIED>
    <!ATTLIST feBlend x CDATA #IMPLIED>
    <!ATTLIST feBlend y CDATA #IMPLIED>
    <!ATTLIST feBlend width CDATA #IMPLIED>
    <!ATTLIST feBlend height CDATA #IMPLIED>
    <!ATTLIST feBlend result CDATA #IMPLIED>
    <!ATTLIST feBlend in CDATA #IMPLIED>
    <!ATTLIST feBlend in2 CDATA #REQUIRED>
    <!ATTLIST feBlend mode (normal|multiply|screen|darken|lighten) "normal">
    <!ENTITY % SVG.feColorMatrix.extra.content "">
    <!ENTITY % SVG.feColorMatrix.element "INCLUDE">
    <!ENTITY % SVG.feColorMatrix.content "( animate | set
        )*">
    <!ELEMENT feColorMatrix (animate | set)*>
    <!ENTITY % SVG.feColorMatrix.attlist "INCLUDE">
    <!ATTLIST feColorMatrix id ID #IMPLIED>
    <!ATTLIST feColorMatrix xml:base CDATA #IMPLIED>
    <!ATTLIST feColorMatrix xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feColorMatrix xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feColorMatrix style CDATA #IMPLIED>
    <!ATTLIST feColorMatrix class CDATA #IMPLIED>
    <!ATTLIST feColorMatrix enable-background CDATA #IMPLIED>
    <!ATTLIST feColorMatrix clip CDATA #IMPLIED>
    <!ATTLIST feColorMatrix overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix baseline-shift CDATA #IMPLIED>
    <!ATTLIST feColorMatrix direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feColorMatrix glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feColorMatrix kerning CDATA #IMPLIED>
    <!ATTLIST feColorMatrix letter-spacing CDATA #IMPLIED>
    <!ATTLIST feColorMatrix text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix text-decoration CDATA #IMPLIED>
    <!ATTLIST feColorMatrix unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix word-spacing CDATA #IMPLIED>
    <!ATTLIST feColorMatrix font-family CDATA #IMPLIED>
    <!ATTLIST feColorMatrix font-size CDATA #IMPLIED>
    <!ATTLIST feColorMatrix font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feColorMatrix font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix fill CDATA #IMPLIED>
    <!ATTLIST feColorMatrix fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix stroke CDATA #IMPLIED>
    <!ATTLIST feColorMatrix stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feColorMatrix stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feColorMatrix stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feColorMatrix stroke-width CDATA #IMPLIED>
    <!ATTLIST feColorMatrix color CDATA #IMPLIED>
    <!ATTLIST feColorMatrix color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix opacity CDATA #IMPLIED>
    <!ATTLIST feColorMatrix fill-opacity CDATA #IMPLIED>
    <!ATTLIST feColorMatrix stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feColorMatrix display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix marker-start CDATA #IMPLIED>
    <!ATTLIST feColorMatrix marker-mid CDATA #IMPLIED>
    <!ATTLIST feColorMatrix marker-end CDATA #IMPLIED>
    <!ATTLIST feColorMatrix color-profile CDATA #IMPLIED>
    <!ATTLIST feColorMatrix stop-color CDATA #IMPLIED>
    <!ATTLIST feColorMatrix stop-opacity CDATA #IMPLIED>
    <!ATTLIST feColorMatrix clip-path CDATA #IMPLIED>
    <!ATTLIST feColorMatrix clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix mask CDATA #IMPLIED>
    <!ATTLIST feColorMatrix filter CDATA #IMPLIED>
    <!ATTLIST feColorMatrix color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feColorMatrix cursor CDATA #IMPLIED>
    <!ATTLIST feColorMatrix flood-color CDATA #IMPLIED>
    <!ATTLIST feColorMatrix flood-opacity CDATA #IMPLIED>
    <!ATTLIST feColorMatrix lighting-color CDATA #IMPLIED>
    <!ATTLIST feColorMatrix x CDATA #IMPLIED>
    <!ATTLIST feColorMatrix y CDATA #IMPLIED>
    <!ATTLIST feColorMatrix width CDATA #IMPLIED>
    <!ATTLIST feColorMatrix height CDATA #IMPLIED>
    <!ATTLIST feColorMatrix result CDATA #IMPLIED>
    <!ATTLIST feColorMatrix in CDATA #IMPLIED>
    <!ATTLIST feColorMatrix type (matrix|saturate|hueRotate|luminanceToAlpha) "matrix">
    <!ATTLIST feColorMatrix values CDATA #IMPLIED>
    <!ENTITY % SVG.feComponentTransfer.extra.content "">
    <!ENTITY % SVG.feComponentTransfer.element "INCLUDE">
    <!ENTITY % SVG.feComponentTransfer.content "( feFuncR?, feFuncG?, feFuncB?,
       feFuncA?  )">
    <!ELEMENT feComponentTransfer (feFuncR?, feFuncG?, feFuncB?, feFuncA?)>
    <!ENTITY % SVG.feComponentTransfer.attlist "INCLUDE">
    <!ATTLIST feComponentTransfer id ID #IMPLIED>
    <!ATTLIST feComponentTransfer xml:base CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feComponentTransfer xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feComponentTransfer style CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer class CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer enable-background CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer clip CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer baseline-shift CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer kerning CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer letter-spacing CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer text-decoration CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer word-spacing CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer font-family CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer font-size CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer fill CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer stroke CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer stroke-width CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer color CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer opacity CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer fill-opacity CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer marker-start CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer marker-mid CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer marker-end CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer color-profile CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer stop-color CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer stop-opacity CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer clip-path CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer mask CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer filter CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feComponentTransfer cursor CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer flood-color CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer flood-opacity CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer lighting-color CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer x CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer y CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer width CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer height CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer result CDATA #IMPLIED>
    <!ATTLIST feComponentTransfer in CDATA #IMPLIED>
    <!ENTITY % SVG.feComposite.extra.content "">
    <!ENTITY % SVG.feComposite.element "INCLUDE">
    <!ENTITY % SVG.feComposite.content "( animate | set  )*">
    <!ELEMENT feComposite (animate | set)*>
    <!ENTITY % SVG.feComposite.attlist "INCLUDE">
    <!ATTLIST feComposite id ID #IMPLIED>
    <!ATTLIST feComposite xml:base CDATA #IMPLIED>
    <!ATTLIST feComposite xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feComposite xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feComposite style CDATA #IMPLIED>
    <!ATTLIST feComposite class CDATA #IMPLIED>
    <!ATTLIST feComposite enable-background CDATA #IMPLIED>
    <!ATTLIST feComposite clip CDATA #IMPLIED>
    <!ATTLIST feComposite overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feComposite writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feComposite alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feComposite baseline-shift CDATA #IMPLIED>
    <!ATTLIST feComposite direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feComposite dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feComposite glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feComposite glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feComposite kerning CDATA #IMPLIED>
    <!ATTLIST feComposite letter-spacing CDATA #IMPLIED>
    <!ATTLIST feComposite text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feComposite text-decoration CDATA #IMPLIED>
    <!ATTLIST feComposite unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feComposite word-spacing CDATA #IMPLIED>
    <!ATTLIST feComposite font-family CDATA #IMPLIED>
    <!ATTLIST feComposite font-size CDATA #IMPLIED>
    <!ATTLIST feComposite font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feComposite font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feComposite font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feComposite font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feComposite font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feComposite fill CDATA #IMPLIED>
    <!ATTLIST feComposite fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feComposite stroke CDATA #IMPLIED>
    <!ATTLIST feComposite stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feComposite stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feComposite stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feComposite stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feComposite stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feComposite stroke-width CDATA #IMPLIED>
    <!ATTLIST feComposite color CDATA #IMPLIED>
    <!ATTLIST feComposite color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feComposite color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feComposite opacity CDATA #IMPLIED>
    <!ATTLIST feComposite fill-opacity CDATA #IMPLIED>
    <!ATTLIST feComposite stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feComposite display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feComposite image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feComposite pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feComposite shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feComposite text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feComposite visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feComposite marker-start CDATA #IMPLIED>
    <!ATTLIST feComposite marker-mid CDATA #IMPLIED>
    <!ATTLIST feComposite marker-end CDATA #IMPLIED>
    <!ATTLIST feComposite color-profile CDATA #IMPLIED>
    <!ATTLIST feComposite stop-color CDATA #IMPLIED>
    <!ATTLIST feComposite stop-opacity CDATA #IMPLIED>
    <!ATTLIST feComposite clip-path CDATA #IMPLIED>
    <!ATTLIST feComposite clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feComposite mask CDATA #IMPLIED>
    <!ATTLIST feComposite filter CDATA #IMPLIED>
    <!ATTLIST feComposite color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feComposite cursor CDATA #IMPLIED>
    <!ATTLIST feComposite flood-color CDATA #IMPLIED>
    <!ATTLIST feComposite flood-opacity CDATA #IMPLIED>
    <!ATTLIST feComposite lighting-color CDATA #IMPLIED>
    <!ATTLIST feComposite x CDATA #IMPLIED>
    <!ATTLIST feComposite y CDATA #IMPLIED>
    <!ATTLIST feComposite width CDATA #IMPLIED>
    <!ATTLIST feComposite height CDATA #IMPLIED>
    <!ATTLIST feComposite result CDATA #IMPLIED>
    <!ATTLIST feComposite in CDATA #IMPLIED>
    <!ATTLIST feComposite in2 CDATA #REQUIRED>
    <!ATTLIST feComposite operator (over|in|out|atop|xor|arithmetic) "over">
    <!ATTLIST feComposite k1 CDATA #IMPLIED>
    <!ATTLIST feComposite k2 CDATA #IMPLIED>
    <!ATTLIST feComposite k3 CDATA #IMPLIED>
    <!ATTLIST feComposite k4 CDATA #IMPLIED>
    <!ENTITY % SVG.feConvolveMatrix.extra.content "">
    <!ENTITY % SVG.feConvolveMatrix.element "INCLUDE">
    <!ENTITY % SVG.feConvolveMatrix.content "( animate | set
        )*">
    <!ELEMENT feConvolveMatrix (animate | set)*>
    <!ENTITY % SVG.feConvolveMatrix.attlist "INCLUDE">
    <!ATTLIST feConvolveMatrix id ID #IMPLIED>
    <!ATTLIST feConvolveMatrix xml:base CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feConvolveMatrix xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feConvolveMatrix style CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix class CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix enable-background CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix clip CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix baseline-shift CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix kerning CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix letter-spacing CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix text-decoration CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix word-spacing CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix font-family CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix font-size CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix fill CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix stroke CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix stroke-width CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix color CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix opacity CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix fill-opacity CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix marker-start CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix marker-mid CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix marker-end CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix color-profile CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix stop-color CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix stop-opacity CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix clip-path CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix mask CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix filter CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feConvolveMatrix cursor CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix flood-color CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix flood-opacity CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix lighting-color CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix x CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix y CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix width CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix height CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix result CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix in CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix order CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix kernelMatrix CDATA #REQUIRED>
    <!ATTLIST feConvolveMatrix divisor CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix bias CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix targetX CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix targetY CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix edgeMode (duplicate|wrap|none) "duplicate">
    <!ATTLIST feConvolveMatrix kernelUnitLength CDATA #IMPLIED>
    <!ATTLIST feConvolveMatrix preserveAlpha (false|true) #IMPLIED>
    <!ENTITY % SVG.feDiffuseLighting.extra.content "">
    <!ENTITY % SVG.feDiffuseLighting.element "INCLUDE">
    <!ENTITY % SVG.feDiffuseLighting.content "(( feDistantLight | fePointLight
      | feSpotLight ), ( animate | set
      | animateColor  )*)">
    <!ELEMENT feDiffuseLighting ((feDistantLight | fePointLight | feSpotLight), (animate | set | animateColor)*)>
    <!ENTITY % SVG.feDiffuseLighting.attlist "INCLUDE">
    <!ATTLIST feDiffuseLighting id ID #IMPLIED>
    <!ATTLIST feDiffuseLighting xml:base CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feDiffuseLighting xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feDiffuseLighting style CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting class CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting enable-background CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting clip CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting baseline-shift CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting kerning CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting letter-spacing CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting text-decoration CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting word-spacing CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting font-family CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting font-size CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting fill CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting stroke CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting stroke-width CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting color CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting opacity CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting fill-opacity CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting marker-start CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting marker-mid CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting marker-end CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting color-profile CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting stop-color CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting stop-opacity CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting clip-path CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting mask CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting filter CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feDiffuseLighting cursor CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting flood-color CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting flood-opacity CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting lighting-color CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting x CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting y CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting width CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting height CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting result CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting in CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting surfaceScale CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting diffuseConstant CDATA #IMPLIED>
    <!ATTLIST feDiffuseLighting kernelUnitLength CDATA #IMPLIED>
    <!ENTITY % SVG.feDisplacementMap.extra.content "">
    <!ENTITY % SVG.feDisplacementMap.element "INCLUDE">
    <!ENTITY % SVG.feDisplacementMap.content "( animate | set
        )*">
    <!ELEMENT feDisplacementMap (animate | set)*>
    <!ENTITY % SVG.feDisplacementMap.attlist "INCLUDE">
    <!ATTLIST feDisplacementMap id ID #IMPLIED>
    <!ATTLIST feDisplacementMap xml:base CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feDisplacementMap xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feDisplacementMap style CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap class CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap enable-background CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap clip CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap baseline-shift CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap kerning CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap letter-spacing CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap text-decoration CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap word-spacing CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap font-family CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap font-size CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap fill CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap stroke CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap stroke-width CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap color CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap opacity CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap fill-opacity CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap marker-start CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap marker-mid CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap marker-end CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap color-profile CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap stop-color CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap stop-opacity CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap clip-path CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap mask CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap filter CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feDisplacementMap cursor CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap flood-color CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap flood-opacity CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap lighting-color CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap x CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap y CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap width CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap height CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap result CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap in CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap in2 CDATA #REQUIRED>
    <!ATTLIST feDisplacementMap scale CDATA #IMPLIED>
    <!ATTLIST feDisplacementMap xChannelSelector (R|G|B|A) "A">
    <!ATTLIST feDisplacementMap yChannelSelector (R|G|B|A) "A">
    <!ENTITY % SVG.feFlood.extra.content "">
    <!ENTITY % SVG.feFlood.element "INCLUDE">
    <!ENTITY % SVG.feFlood.content "( animate | set | animateColor
        )*">
    <!ELEMENT feFlood (animate | set | animateColor)*>
    <!ENTITY % SVG.feFlood.attlist "INCLUDE">
    <!ATTLIST feFlood id ID #IMPLIED>
    <!ATTLIST feFlood xml:base CDATA #IMPLIED>
    <!ATTLIST feFlood xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feFlood xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feFlood style CDATA #IMPLIED>
    <!ATTLIST feFlood class CDATA #IMPLIED>
    <!ATTLIST feFlood enable-background CDATA #IMPLIED>
    <!ATTLIST feFlood clip CDATA #IMPLIED>
    <!ATTLIST feFlood overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feFlood writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feFlood alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feFlood baseline-shift CDATA #IMPLIED>
    <!ATTLIST feFlood direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feFlood dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feFlood glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feFlood glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feFlood kerning CDATA #IMPLIED>
    <!ATTLIST feFlood letter-spacing CDATA #IMPLIED>
    <!ATTLIST feFlood text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feFlood text-decoration CDATA #IMPLIED>
    <!ATTLIST feFlood unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feFlood word-spacing CDATA #IMPLIED>
    <!ATTLIST feFlood font-family CDATA #IMPLIED>
    <!ATTLIST feFlood font-size CDATA #IMPLIED>
    <!ATTLIST feFlood font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feFlood font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feFlood font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feFlood font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feFlood font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feFlood fill CDATA #IMPLIED>
    <!ATTLIST feFlood fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feFlood stroke CDATA #IMPLIED>
    <!ATTLIST feFlood stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feFlood stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feFlood stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feFlood stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feFlood stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feFlood stroke-width CDATA #IMPLIED>
    <!ATTLIST feFlood color CDATA #IMPLIED>
    <!ATTLIST feFlood color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feFlood color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feFlood opacity CDATA #IMPLIED>
    <!ATTLIST feFlood fill-opacity CDATA #IMPLIED>
    <!ATTLIST feFlood stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feFlood display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feFlood image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feFlood pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feFlood shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feFlood text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feFlood visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feFlood marker-start CDATA #IMPLIED>
    <!ATTLIST feFlood marker-mid CDATA #IMPLIED>
    <!ATTLIST feFlood marker-end CDATA #IMPLIED>
    <!ATTLIST feFlood color-profile CDATA #IMPLIED>
    <!ATTLIST feFlood stop-color CDATA #IMPLIED>
    <!ATTLIST feFlood stop-opacity CDATA #IMPLIED>
    <!ATTLIST feFlood clip-path CDATA #IMPLIED>
    <!ATTLIST feFlood clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feFlood mask CDATA #IMPLIED>
    <!ATTLIST feFlood filter CDATA #IMPLIED>
    <!ATTLIST feFlood color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feFlood cursor CDATA #IMPLIED>
    <!ATTLIST feFlood flood-color CDATA #IMPLIED>
    <!ATTLIST feFlood flood-opacity CDATA #IMPLIED>
    <!ATTLIST feFlood lighting-color CDATA #IMPLIED>
    <!ATTLIST feFlood x CDATA #IMPLIED>
    <!ATTLIST feFlood y CDATA #IMPLIED>
    <!ATTLIST feFlood width CDATA #IMPLIED>
    <!ATTLIST feFlood height CDATA #IMPLIED>
    <!ATTLIST feFlood result CDATA #IMPLIED>
    <!ENTITY % SVG.feGaussianBlur.extra.content "">
    <!ENTITY % SVG.feGaussianBlur.element "INCLUDE">
    <!ENTITY % SVG.feGaussianBlur.content "( animate | set
        )*">
    <!ELEMENT feGaussianBlur (animate | set)*>
    <!ENTITY % SVG.feGaussianBlur.attlist "INCLUDE">
    <!ATTLIST feGaussianBlur id ID #IMPLIED>
    <!ATTLIST feGaussianBlur xml:base CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feGaussianBlur xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feGaussianBlur style CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur class CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur enable-background CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur clip CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur baseline-shift CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur kerning CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur letter-spacing CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur text-decoration CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur word-spacing CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur font-family CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur font-size CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur fill CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur stroke CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur stroke-width CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur color CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur opacity CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur fill-opacity CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur marker-start CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur marker-mid CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur marker-end CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur color-profile CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur stop-color CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur stop-opacity CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur clip-path CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur mask CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur filter CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feGaussianBlur cursor CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur flood-color CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur flood-opacity CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur lighting-color CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur x CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur y CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur width CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur height CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur result CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur in CDATA #IMPLIED>
    <!ATTLIST feGaussianBlur stdDeviation CDATA #IMPLIED>
    <!ENTITY % SVG.feImage.extra.content "">
    <!ENTITY % SVG.feImage.element "INCLUDE">
    <!ENTITY % SVG.feImage.content "( animate | set | animateTransform
        )*">
    <!ELEMENT feImage (animate | set | animateTransform)*>
    <!ENTITY % SVG.feImage.attlist "INCLUDE">
    <!ATTLIST feImage id ID #IMPLIED>
    <!ATTLIST feImage xml:base CDATA #IMPLIED>
    <!ATTLIST feImage xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feImage xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feImage style CDATA #IMPLIED>
    <!ATTLIST feImage class CDATA #IMPLIED>
    <!ATTLIST feImage enable-background CDATA #IMPLIED>
    <!ATTLIST feImage clip CDATA #IMPLIED>
    <!ATTLIST feImage overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feImage writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feImage alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feImage baseline-shift CDATA #IMPLIED>
    <!ATTLIST feImage direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feImage dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feImage glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feImage glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feImage kerning CDATA #IMPLIED>
    <!ATTLIST feImage letter-spacing CDATA #IMPLIED>
    <!ATTLIST feImage text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feImage text-decoration CDATA #IMPLIED>
    <!ATTLIST feImage unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feImage word-spacing CDATA #IMPLIED>
    <!ATTLIST feImage font-family CDATA #IMPLIED>
    <!ATTLIST feImage font-size CDATA #IMPLIED>
    <!ATTLIST feImage font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feImage font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feImage font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feImage font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feImage font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feImage fill CDATA #IMPLIED>
    <!ATTLIST feImage fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feImage stroke CDATA #IMPLIED>
    <!ATTLIST feImage stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feImage stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feImage stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feImage stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feImage stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feImage stroke-width CDATA #IMPLIED>
    <!ATTLIST feImage color CDATA #IMPLIED>
    <!ATTLIST feImage color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feImage color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feImage opacity CDATA #IMPLIED>
    <!ATTLIST feImage fill-opacity CDATA #IMPLIED>
    <!ATTLIST feImage stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feImage display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feImage image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feImage pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feImage shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feImage text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feImage visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feImage marker-start CDATA #IMPLIED>
    <!ATTLIST feImage marker-mid CDATA #IMPLIED>
    <!ATTLIST feImage marker-end CDATA #IMPLIED>
    <!ATTLIST feImage color-profile CDATA #IMPLIED>
    <!ATTLIST feImage stop-color CDATA #IMPLIED>
    <!ATTLIST feImage stop-opacity CDATA #IMPLIED>
    <!ATTLIST feImage clip-path CDATA #IMPLIED>
    <!ATTLIST feImage clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feImage mask CDATA #IMPLIED>
    <!ATTLIST feImage filter CDATA #IMPLIED>
    <!ATTLIST feImage color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feImage cursor CDATA #IMPLIED>
    <!ATTLIST feImage flood-color CDATA #IMPLIED>
    <!ATTLIST feImage flood-opacity CDATA #IMPLIED>
    <!ATTLIST feImage lighting-color CDATA #IMPLIED>
    <!ATTLIST feImage x CDATA #IMPLIED>
    <!ATTLIST feImage y CDATA #IMPLIED>
    <!ATTLIST feImage width CDATA #IMPLIED>
    <!ATTLIST feImage height CDATA #IMPLIED>
    <!ATTLIST feImage result CDATA #IMPLIED>
    <!ATTLIST feImage xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST feImage xlink:type (simple) #FIXED "simple">
    <!ATTLIST feImage xlink:href CDATA #REQUIRED>
    <!ATTLIST feImage xlink:role CDATA #IMPLIED>
    <!ATTLIST feImage xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST feImage xlink:title CDATA #IMPLIED>
    <!ATTLIST feImage xlink:show (embed) "embed">
    <!ATTLIST feImage xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST feImage externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST feImage preserveAspectRatio CDATA "xMidYMid meet">
    <!ENTITY % SVG.feMerge.extra.content "">
    <!ENTITY % SVG.feMerge.element "INCLUDE">
    <!ENTITY % SVG.feMerge.content "( feMergeNode  )*">
    <!ELEMENT feMerge (feMergeNode)*>
    <!ENTITY % SVG.feMerge.attlist "INCLUDE">
    <!ATTLIST feMerge id ID #IMPLIED>
    <!ATTLIST feMerge xml:base CDATA #IMPLIED>
    <!ATTLIST feMerge xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feMerge xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feMerge style CDATA #IMPLIED>
    <!ATTLIST feMerge class CDATA #IMPLIED>
    <!ATTLIST feMerge enable-background CDATA #IMPLIED>
    <!ATTLIST feMerge clip CDATA #IMPLIED>
    <!ATTLIST feMerge overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feMerge writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feMerge alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feMerge baseline-shift CDATA #IMPLIED>
    <!ATTLIST feMerge direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feMerge dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feMerge glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feMerge glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feMerge kerning CDATA #IMPLIED>
    <!ATTLIST feMerge letter-spacing CDATA #IMPLIED>
    <!ATTLIST feMerge text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feMerge text-decoration CDATA #IMPLIED>
    <!ATTLIST feMerge unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feMerge word-spacing CDATA #IMPLIED>
    <!ATTLIST feMerge font-family CDATA #IMPLIED>
    <!ATTLIST feMerge font-size CDATA #IMPLIED>
    <!ATTLIST feMerge font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feMerge font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feMerge font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feMerge font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feMerge font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feMerge fill CDATA #IMPLIED>
    <!ATTLIST feMerge fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feMerge stroke CDATA #IMPLIED>
    <!ATTLIST feMerge stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feMerge stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feMerge stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feMerge stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feMerge stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feMerge stroke-width CDATA #IMPLIED>
    <!ATTLIST feMerge color CDATA #IMPLIED>
    <!ATTLIST feMerge color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feMerge color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feMerge opacity CDATA #IMPLIED>
    <!ATTLIST feMerge fill-opacity CDATA #IMPLIED>
    <!ATTLIST feMerge stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feMerge display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feMerge image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feMerge pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feMerge shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feMerge text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feMerge visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feMerge marker-start CDATA #IMPLIED>
    <!ATTLIST feMerge marker-mid CDATA #IMPLIED>
    <!ATTLIST feMerge marker-end CDATA #IMPLIED>
    <!ATTLIST feMerge color-profile CDATA #IMPLIED>
    <!ATTLIST feMerge stop-color CDATA #IMPLIED>
    <!ATTLIST feMerge stop-opacity CDATA #IMPLIED>
    <!ATTLIST feMerge clip-path CDATA #IMPLIED>
    <!ATTLIST feMerge clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feMerge mask CDATA #IMPLIED>
    <!ATTLIST feMerge filter CDATA #IMPLIED>
    <!ATTLIST feMerge color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feMerge cursor CDATA #IMPLIED>
    <!ATTLIST feMerge flood-color CDATA #IMPLIED>
    <!ATTLIST feMerge flood-opacity CDATA #IMPLIED>
    <!ATTLIST feMerge lighting-color CDATA #IMPLIED>
    <!ATTLIST feMerge x CDATA #IMPLIED>
    <!ATTLIST feMerge y CDATA #IMPLIED>
    <!ATTLIST feMerge width CDATA #IMPLIED>
    <!ATTLIST feMerge height CDATA #IMPLIED>
    <!ATTLIST feMerge result CDATA #IMPLIED>
    <!ENTITY % SVG.feMergeNode.extra.content "">
    <!ENTITY % SVG.feMergeNode.element "INCLUDE">
    <!ENTITY % SVG.feMergeNode.content "( animate | set  )*">
    <!ELEMENT feMergeNode (animate | set)*>
    <!ENTITY % SVG.feMergeNode.attlist "INCLUDE">
    <!ATTLIST feMergeNode id ID #IMPLIED>
    <!ATTLIST feMergeNode xml:base CDATA #IMPLIED>
    <!ATTLIST feMergeNode xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feMergeNode xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feMergeNode in CDATA #IMPLIED>
    <!ENTITY % SVG.feMorphology.extra.content "">
    <!ENTITY % SVG.feMorphology.element "INCLUDE">
    <!ENTITY % SVG.feMorphology.content "( animate | set
        )*">
    <!ELEMENT feMorphology (animate | set)*>
    <!ENTITY % SVG.feMorphology.attlist "INCLUDE">
    <!ATTLIST feMorphology id ID #IMPLIED>
    <!ATTLIST feMorphology xml:base CDATA #IMPLIED>
    <!ATTLIST feMorphology xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feMorphology xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feMorphology style CDATA #IMPLIED>
    <!ATTLIST feMorphology class CDATA #IMPLIED>
    <!ATTLIST feMorphology enable-background CDATA #IMPLIED>
    <!ATTLIST feMorphology clip CDATA #IMPLIED>
    <!ATTLIST feMorphology overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feMorphology writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feMorphology alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feMorphology baseline-shift CDATA #IMPLIED>
    <!ATTLIST feMorphology direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feMorphology dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feMorphology glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feMorphology glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feMorphology kerning CDATA #IMPLIED>
    <!ATTLIST feMorphology letter-spacing CDATA #IMPLIED>
    <!ATTLIST feMorphology text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feMorphology text-decoration CDATA #IMPLIED>
    <!ATTLIST feMorphology unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feMorphology word-spacing CDATA #IMPLIED>
    <!ATTLIST feMorphology font-family CDATA #IMPLIED>
    <!ATTLIST feMorphology font-size CDATA #IMPLIED>
    <!ATTLIST feMorphology font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feMorphology font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feMorphology font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feMorphology font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feMorphology font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feMorphology fill CDATA #IMPLIED>
    <!ATTLIST feMorphology fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feMorphology stroke CDATA #IMPLIED>
    <!ATTLIST feMorphology stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feMorphology stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feMorphology stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feMorphology stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feMorphology stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feMorphology stroke-width CDATA #IMPLIED>
    <!ATTLIST feMorphology color CDATA #IMPLIED>
    <!ATTLIST feMorphology color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feMorphology color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feMorphology opacity CDATA #IMPLIED>
    <!ATTLIST feMorphology fill-opacity CDATA #IMPLIED>
    <!ATTLIST feMorphology stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feMorphology display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feMorphology image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feMorphology pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feMorphology shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feMorphology text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feMorphology visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feMorphology marker-start CDATA #IMPLIED>
    <!ATTLIST feMorphology marker-mid CDATA #IMPLIED>
    <!ATTLIST feMorphology marker-end CDATA #IMPLIED>
    <!ATTLIST feMorphology color-profile CDATA #IMPLIED>
    <!ATTLIST feMorphology stop-color CDATA #IMPLIED>
    <!ATTLIST feMorphology stop-opacity CDATA #IMPLIED>
    <!ATTLIST feMorphology clip-path CDATA #IMPLIED>
    <!ATTLIST feMorphology clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feMorphology mask CDATA #IMPLIED>
    <!ATTLIST feMorphology filter CDATA #IMPLIED>
    <!ATTLIST feMorphology color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feMorphology cursor CDATA #IMPLIED>
    <!ATTLIST feMorphology flood-color CDATA #IMPLIED>
    <!ATTLIST feMorphology flood-opacity CDATA #IMPLIED>
    <!ATTLIST feMorphology lighting-color CDATA #IMPLIED>
    <!ATTLIST feMorphology x CDATA #IMPLIED>
    <!ATTLIST feMorphology y CDATA #IMPLIED>
    <!ATTLIST feMorphology width CDATA #IMPLIED>
    <!ATTLIST feMorphology height CDATA #IMPLIED>
    <!ATTLIST feMorphology result CDATA #IMPLIED>
    <!ATTLIST feMorphology in CDATA #IMPLIED>
    <!ATTLIST feMorphology operator (erode|dilate) "erode">
    <!ATTLIST feMorphology radius CDATA #IMPLIED>
    <!ENTITY % SVG.feOffset.extra.content "">
    <!ENTITY % SVG.feOffset.element "INCLUDE">
    <!ENTITY % SVG.feOffset.content "( animate | set  )*">
    <!ELEMENT feOffset (animate | set)*>
    <!ENTITY % SVG.feOffset.attlist "INCLUDE">
    <!ATTLIST feOffset id ID #IMPLIED>
    <!ATTLIST feOffset xml:base CDATA #IMPLIED>
    <!ATTLIST feOffset xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feOffset xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feOffset style CDATA #IMPLIED>
    <!ATTLIST feOffset class CDATA #IMPLIED>
    <!ATTLIST feOffset enable-background CDATA #IMPLIED>
    <!ATTLIST feOffset clip CDATA #IMPLIED>
    <!ATTLIST feOffset overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feOffset writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feOffset alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feOffset baseline-shift CDATA #IMPLIED>
    <!ATTLIST feOffset direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feOffset dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feOffset glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feOffset glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feOffset kerning CDATA #IMPLIED>
    <!ATTLIST feOffset letter-spacing CDATA #IMPLIED>
    <!ATTLIST feOffset text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feOffset text-decoration CDATA #IMPLIED>
    <!ATTLIST feOffset unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feOffset word-spacing CDATA #IMPLIED>
    <!ATTLIST feOffset font-family CDATA #IMPLIED>
    <!ATTLIST feOffset font-size CDATA #IMPLIED>
    <!ATTLIST feOffset font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feOffset font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feOffset font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feOffset font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feOffset font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feOffset fill CDATA #IMPLIED>
    <!ATTLIST feOffset fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feOffset stroke CDATA #IMPLIED>
    <!ATTLIST feOffset stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feOffset stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feOffset stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feOffset stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feOffset stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feOffset stroke-width CDATA #IMPLIED>
    <!ATTLIST feOffset color CDATA #IMPLIED>
    <!ATTLIST feOffset color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feOffset color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feOffset opacity CDATA #IMPLIED>
    <!ATTLIST feOffset fill-opacity CDATA #IMPLIED>
    <!ATTLIST feOffset stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feOffset display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feOffset image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feOffset pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feOffset shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feOffset text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feOffset visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feOffset marker-start CDATA #IMPLIED>
    <!ATTLIST feOffset marker-mid CDATA #IMPLIED>
    <!ATTLIST feOffset marker-end CDATA #IMPLIED>
    <!ATTLIST feOffset color-profile CDATA #IMPLIED>
    <!ATTLIST feOffset stop-color CDATA #IMPLIED>
    <!ATTLIST feOffset stop-opacity CDATA #IMPLIED>
    <!ATTLIST feOffset clip-path CDATA #IMPLIED>
    <!ATTLIST feOffset clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feOffset mask CDATA #IMPLIED>
    <!ATTLIST feOffset filter CDATA #IMPLIED>
    <!ATTLIST feOffset color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feOffset cursor CDATA #IMPLIED>
    <!ATTLIST feOffset flood-color CDATA #IMPLIED>
    <!ATTLIST feOffset flood-opacity CDATA #IMPLIED>
    <!ATTLIST feOffset lighting-color CDATA #IMPLIED>
    <!ATTLIST feOffset x CDATA #IMPLIED>
    <!ATTLIST feOffset y CDATA #IMPLIED>
    <!ATTLIST feOffset width CDATA #IMPLIED>
    <!ATTLIST feOffset height CDATA #IMPLIED>
    <!ATTLIST feOffset result CDATA #IMPLIED>
    <!ATTLIST feOffset in CDATA #IMPLIED>
    <!ATTLIST feOffset dx CDATA #IMPLIED>
    <!ATTLIST feOffset dy CDATA #IMPLIED>
    <!ENTITY % SVG.feSpecularLighting.extra.content "">
    <!ENTITY % SVG.feSpecularLighting.element "INCLUDE">
    <!ENTITY % SVG.feSpecularLighting.content "(( feDistantLight | fePointLight
      | feSpotLight ), ( animate | set
      | animateColor  )*)">
    <!ELEMENT feSpecularLighting ((feDistantLight | fePointLight | feSpotLight), (animate | set | animateColor)*)>
    <!ENTITY % SVG.feSpecularLighting.attlist "INCLUDE">
    <!ATTLIST feSpecularLighting id ID #IMPLIED>
    <!ATTLIST feSpecularLighting xml:base CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feSpecularLighting xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feSpecularLighting style CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting class CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting enable-background CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting clip CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting baseline-shift CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting kerning CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting letter-spacing CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting text-decoration CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting word-spacing CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting font-family CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting font-size CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting fill CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting stroke CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting stroke-width CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting color CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting opacity CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting fill-opacity CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting marker-start CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting marker-mid CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting marker-end CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting color-profile CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting stop-color CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting stop-opacity CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting clip-path CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting mask CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting filter CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feSpecularLighting cursor CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting flood-color CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting flood-opacity CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting lighting-color CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting x CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting y CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting width CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting height CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting result CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting in CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting surfaceScale CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting specularConstant CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting specularExponent CDATA #IMPLIED>
    <!ATTLIST feSpecularLighting kernelUnitLength CDATA #IMPLIED>
    <!ENTITY % SVG.feTile.extra.content "">
    <!ENTITY % SVG.feTile.element "INCLUDE">
    <!ENTITY % SVG.feTile.content "( animate | set  )*">
    <!ELEMENT feTile (animate | set)*>
    <!ENTITY % SVG.feTile.attlist "INCLUDE">
    <!ATTLIST feTile id ID #IMPLIED>
    <!ATTLIST feTile xml:base CDATA #IMPLIED>
    <!ATTLIST feTile xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feTile xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feTile style CDATA #IMPLIED>
    <!ATTLIST feTile class CDATA #IMPLIED>
    <!ATTLIST feTile enable-background CDATA #IMPLIED>
    <!ATTLIST feTile clip CDATA #IMPLIED>
    <!ATTLIST feTile overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feTile writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feTile alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feTile baseline-shift CDATA #IMPLIED>
    <!ATTLIST feTile direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feTile dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feTile glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feTile glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feTile kerning CDATA #IMPLIED>
    <!ATTLIST feTile letter-spacing CDATA #IMPLIED>
    <!ATTLIST feTile text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feTile text-decoration CDATA #IMPLIED>
    <!ATTLIST feTile unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feTile word-spacing CDATA #IMPLIED>
    <!ATTLIST feTile font-family CDATA #IMPLIED>
    <!ATTLIST feTile font-size CDATA #IMPLIED>
    <!ATTLIST feTile font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feTile font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feTile font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feTile font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feTile font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feTile fill CDATA #IMPLIED>
    <!ATTLIST feTile fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feTile stroke CDATA #IMPLIED>
    <!ATTLIST feTile stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feTile stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feTile stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feTile stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feTile stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feTile stroke-width CDATA #IMPLIED>
    <!ATTLIST feTile color CDATA #IMPLIED>
    <!ATTLIST feTile color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feTile color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feTile opacity CDATA #IMPLIED>
    <!ATTLIST feTile fill-opacity CDATA #IMPLIED>
    <!ATTLIST feTile stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feTile display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feTile image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feTile pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feTile shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feTile text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feTile visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feTile marker-start CDATA #IMPLIED>
    <!ATTLIST feTile marker-mid CDATA #IMPLIED>
    <!ATTLIST feTile marker-end CDATA #IMPLIED>
    <!ATTLIST feTile color-profile CDATA #IMPLIED>
    <!ATTLIST feTile stop-color CDATA #IMPLIED>
    <!ATTLIST feTile stop-opacity CDATA #IMPLIED>
    <!ATTLIST feTile clip-path CDATA #IMPLIED>
    <!ATTLIST feTile clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feTile mask CDATA #IMPLIED>
    <!ATTLIST feTile filter CDATA #IMPLIED>
    <!ATTLIST feTile color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feTile cursor CDATA #IMPLIED>
    <!ATTLIST feTile flood-color CDATA #IMPLIED>
    <!ATTLIST feTile flood-opacity CDATA #IMPLIED>
    <!ATTLIST feTile lighting-color CDATA #IMPLIED>
    <!ATTLIST feTile x CDATA #IMPLIED>
    <!ATTLIST feTile y CDATA #IMPLIED>
    <!ATTLIST feTile width CDATA #IMPLIED>
    <!ATTLIST feTile height CDATA #IMPLIED>
    <!ATTLIST feTile result CDATA #IMPLIED>
    <!ATTLIST feTile in CDATA #IMPLIED>
    <!ENTITY % SVG.feTurbulence.extra.content "">
    <!ENTITY % SVG.feTurbulence.element "INCLUDE">
    <!ENTITY % SVG.feTurbulence.content "( animate | set
        )*">
    <!ELEMENT feTurbulence (animate | set)*>
    <!ENTITY % SVG.feTurbulence.attlist "INCLUDE">
    <!ATTLIST feTurbulence id ID #IMPLIED>
    <!ATTLIST feTurbulence xml:base CDATA #IMPLIED>
    <!ATTLIST feTurbulence xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feTurbulence xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feTurbulence style CDATA #IMPLIED>
    <!ATTLIST feTurbulence class CDATA #IMPLIED>
    <!ATTLIST feTurbulence enable-background CDATA #IMPLIED>
    <!ATTLIST feTurbulence clip CDATA #IMPLIED>
    <!ATTLIST feTurbulence overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST feTurbulence writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST feTurbulence alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST feTurbulence baseline-shift CDATA #IMPLIED>
    <!ATTLIST feTurbulence direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST feTurbulence dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST feTurbulence glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST feTurbulence glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST feTurbulence kerning CDATA #IMPLIED>
    <!ATTLIST feTurbulence letter-spacing CDATA #IMPLIED>
    <!ATTLIST feTurbulence text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST feTurbulence text-decoration CDATA #IMPLIED>
    <!ATTLIST feTurbulence unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST feTurbulence word-spacing CDATA #IMPLIED>
    <!ATTLIST feTurbulence font-family CDATA #IMPLIED>
    <!ATTLIST feTurbulence font-size CDATA #IMPLIED>
    <!ATTLIST feTurbulence font-size-adjust CDATA #IMPLIED>
    <!ATTLIST feTurbulence font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST feTurbulence font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST feTurbulence font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST feTurbulence font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST feTurbulence fill CDATA #IMPLIED>
    <!ATTLIST feTurbulence fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feTurbulence stroke CDATA #IMPLIED>
    <!ATTLIST feTurbulence stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST feTurbulence stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST feTurbulence stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST feTurbulence stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST feTurbulence stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST feTurbulence stroke-width CDATA #IMPLIED>
    <!ATTLIST feTurbulence color CDATA #IMPLIED>
    <!ATTLIST feTurbulence color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feTurbulence color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feTurbulence opacity CDATA #IMPLIED>
    <!ATTLIST feTurbulence fill-opacity CDATA #IMPLIED>
    <!ATTLIST feTurbulence stroke-opacity CDATA #IMPLIED>
    <!ATTLIST feTurbulence display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST feTurbulence image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST feTurbulence pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST feTurbulence shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feTurbulence text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST feTurbulence visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST feTurbulence marker-start CDATA #IMPLIED>
    <!ATTLIST feTurbulence marker-mid CDATA #IMPLIED>
    <!ATTLIST feTurbulence marker-end CDATA #IMPLIED>
    <!ATTLIST feTurbulence color-profile CDATA #IMPLIED>
    <!ATTLIST feTurbulence stop-color CDATA #IMPLIED>
    <!ATTLIST feTurbulence stop-opacity CDATA #IMPLIED>
    <!ATTLIST feTurbulence clip-path CDATA #IMPLIED>
    <!ATTLIST feTurbulence clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST feTurbulence mask CDATA #IMPLIED>
    <!ATTLIST feTurbulence filter CDATA #IMPLIED>
    <!ATTLIST feTurbulence color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST feTurbulence cursor CDATA #IMPLIED>
    <!ATTLIST feTurbulence flood-color CDATA #IMPLIED>
    <!ATTLIST feTurbulence flood-opacity CDATA #IMPLIED>
    <!ATTLIST feTurbulence lighting-color CDATA #IMPLIED>
    <!ATTLIST feTurbulence x CDATA #IMPLIED>
    <!ATTLIST feTurbulence y CDATA #IMPLIED>
    <!ATTLIST feTurbulence width CDATA #IMPLIED>
    <!ATTLIST feTurbulence height CDATA #IMPLIED>
    <!ATTLIST feTurbulence result CDATA #IMPLIED>
    <!ATTLIST feTurbulence baseFrequency CDATA #IMPLIED>
    <!ATTLIST feTurbulence numOctaves CDATA #IMPLIED>
    <!ATTLIST feTurbulence seed CDATA #IMPLIED>
    <!ATTLIST feTurbulence stitchTiles (stitch|noStitch) "noStitch">
    <!ATTLIST feTurbulence type (fractalNoise|turbulence) "turbulence">
    <!ENTITY % SVG.feDistantLight.extra.content "">
    <!ENTITY % SVG.feDistantLight.element "INCLUDE">
    <!ENTITY % SVG.feDistantLight.content "( animate | set
        )*">
    <!ELEMENT feDistantLight (animate | set)*>
    <!ENTITY % SVG.feDistantLight.attlist "INCLUDE">
    <!ATTLIST feDistantLight id ID #IMPLIED>
    <!ATTLIST feDistantLight xml:base CDATA #IMPLIED>
    <!ATTLIST feDistantLight xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feDistantLight xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feDistantLight azimuth CDATA #IMPLIED>
    <!ATTLIST feDistantLight elevation CDATA #IMPLIED>
    <!ENTITY % SVG.fePointLight.extra.content "">
    <!ENTITY % SVG.fePointLight.element "INCLUDE">
    <!ENTITY % SVG.fePointLight.content "( animate | set
        )*">
    <!ELEMENT fePointLight (animate | set)*>
    <!ENTITY % SVG.fePointLight.attlist "INCLUDE">
    <!ATTLIST fePointLight id ID #IMPLIED>
    <!ATTLIST fePointLight xml:base CDATA #IMPLIED>
    <!ATTLIST fePointLight xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST fePointLight xml:space (default|preserve) #IMPLIED>
    <!ATTLIST fePointLight x CDATA #IMPLIED>
    <!ATTLIST fePointLight y CDATA #IMPLIED>
    <!ATTLIST fePointLight z CDATA #IMPLIED>
    <!ENTITY % SVG.feSpotLight.extra.content "">
    <!ENTITY % SVG.feSpotLight.element "INCLUDE">
    <!ENTITY % SVG.feSpotLight.content "( animate | set  )*">
    <!ELEMENT feSpotLight (animate | set)*>
    <!ENTITY % SVG.feSpotLight.attlist "INCLUDE">
    <!ATTLIST feSpotLight id ID #IMPLIED>
    <!ATTLIST feSpotLight xml:base CDATA #IMPLIED>
    <!ATTLIST feSpotLight xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feSpotLight xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feSpotLight x CDATA #IMPLIED>
    <!ATTLIST feSpotLight y CDATA #IMPLIED>
    <!ATTLIST feSpotLight z CDATA #IMPLIED>
    <!ATTLIST feSpotLight pointsAtX CDATA #IMPLIED>
    <!ATTLIST feSpotLight pointsAtY CDATA #IMPLIED>
    <!ATTLIST feSpotLight pointsAtZ CDATA #IMPLIED>
    <!ATTLIST feSpotLight specularExponent CDATA #IMPLIED>
    <!ATTLIST feSpotLight limitingConeAngle CDATA #IMPLIED>
    <!ENTITY % SVG.feFuncR.extra.content "">
    <!ENTITY % SVG.feFuncR.element "INCLUDE">
    <!ENTITY % SVG.feFuncR.content "( animate | set  )*">
    <!ELEMENT feFuncR (animate | set)*>
    <!ENTITY % SVG.feFuncR.attlist "INCLUDE">
    <!ATTLIST feFuncR id ID #IMPLIED>
    <!ATTLIST feFuncR xml:base CDATA #IMPLIED>
    <!ATTLIST feFuncR xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feFuncR xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feFuncR type (identity|table|discrete|linear|gamma) #REQUIRED>
    <!ATTLIST feFuncR tableValues CDATA #IMPLIED>
    <!ATTLIST feFuncR slope CDATA #IMPLIED>
    <!ATTLIST feFuncR intercept CDATA #IMPLIED>
    <!ATTLIST feFuncR amplitude CDATA #IMPLIED>
    <!ATTLIST feFuncR exponent CDATA #IMPLIED>
    <!ATTLIST feFuncR offset CDATA #IMPLIED>
    <!ENTITY % SVG.feFuncG.extra.content "">
    <!ENTITY % SVG.feFuncG.element "INCLUDE">
    <!ENTITY % SVG.feFuncG.content "( animate | set  )*">
    <!ELEMENT feFuncG (animate | set)*>
    <!ENTITY % SVG.feFuncG.attlist "INCLUDE">
    <!ATTLIST feFuncG id ID #IMPLIED>
    <!ATTLIST feFuncG xml:base CDATA #IMPLIED>
    <!ATTLIST feFuncG xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feFuncG xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feFuncG type (identity|table|discrete|linear|gamma) #REQUIRED>
    <!ATTLIST feFuncG tableValues CDATA #IMPLIED>
    <!ATTLIST feFuncG slope CDATA #IMPLIED>
    <!ATTLIST feFuncG intercept CDATA #IMPLIED>
    <!ATTLIST feFuncG amplitude CDATA #IMPLIED>
    <!ATTLIST feFuncG exponent CDATA #IMPLIED>
    <!ATTLIST feFuncG offset CDATA #IMPLIED>
    <!ENTITY % SVG.feFuncB.extra.content "">
    <!ENTITY % SVG.feFuncB.element "INCLUDE">
    <!ENTITY % SVG.feFuncB.content "( animate | set  )*">
    <!ELEMENT feFuncB (animate | set)*>
    <!ENTITY % SVG.feFuncB.attlist "INCLUDE">
    <!ATTLIST feFuncB id ID #IMPLIED>
    <!ATTLIST feFuncB xml:base CDATA #IMPLIED>
    <!ATTLIST feFuncB xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feFuncB xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feFuncB type (identity|table|discrete|linear|gamma) #REQUIRED>
    <!ATTLIST feFuncB tableValues CDATA #IMPLIED>
    <!ATTLIST feFuncB slope CDATA #IMPLIED>
    <!ATTLIST feFuncB intercept CDATA #IMPLIED>
    <!ATTLIST feFuncB amplitude CDATA #IMPLIED>
    <!ATTLIST feFuncB exponent CDATA #IMPLIED>
    <!ATTLIST feFuncB offset CDATA #IMPLIED>
    <!ENTITY % SVG.feFuncA.extra.content "">
    <!ENTITY % SVG.feFuncA.element "INCLUDE">
    <!ENTITY % SVG.feFuncA.content "( animate | set  )*">
    <!ELEMENT feFuncA (animate | set)*>
    <!ENTITY % SVG.feFuncA.attlist "INCLUDE">
    <!ATTLIST feFuncA id ID #IMPLIED>
    <!ATTLIST feFuncA xml:base CDATA #IMPLIED>
    <!ATTLIST feFuncA xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST feFuncA xml:space (default|preserve) #IMPLIED>
    <!ATTLIST feFuncA type (identity|table|discrete|linear|gamma) #REQUIRED>
    <!ATTLIST feFuncA tableValues CDATA #IMPLIED>
    <!ATTLIST feFuncA slope CDATA #IMPLIED>
    <!ATTLIST feFuncA intercept CDATA #IMPLIED>
    <!ATTLIST feFuncA amplitude CDATA #IMPLIED>
    <!ATTLIST feFuncA exponent CDATA #IMPLIED>
    <!ATTLIST feFuncA offset CDATA #IMPLIED>
    <!ENTITY % svg-cursor.module "INCLUDE">
    <!ENTITY % svg-cursor.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Cursor//EN" "svg-cursor.mod">
    <!ENTITY % SVG.cursor.extra.content "">
    <!ENTITY % SVG.cursor.element "INCLUDE">
    <!ENTITY % SVG.cursor.content "( desc | title | metadata
       )*">
    <!ELEMENT cursor (desc | title | metadata)*>
    <!ENTITY % SVG.cursor.attlist "INCLUDE">
    <!ATTLIST cursor id ID #IMPLIED>
    <!ATTLIST cursor xml:base CDATA #IMPLIED>
    <!ATTLIST cursor xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST cursor xml:space (default|preserve) #IMPLIED>
    <!ATTLIST cursor requiredFeatures CDATA #IMPLIED>
    <!ATTLIST cursor requiredExtensions CDATA #IMPLIED>
    <!ATTLIST cursor systemLanguage CDATA #IMPLIED>
    <!ATTLIST cursor xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST cursor xlink:type (simple) #FIXED "simple">
    <!ATTLIST cursor xlink:href CDATA #REQUIRED>
    <!ATTLIST cursor xlink:role CDATA #IMPLIED>
    <!ATTLIST cursor xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST cursor xlink:title CDATA #IMPLIED>
    <!ATTLIST cursor xlink:show (other) "other">
    <!ATTLIST cursor xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST cursor externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST cursor x CDATA #IMPLIED>
    <!ATTLIST cursor y CDATA #IMPLIED>
    <!ENTITY % svg-hyperlink.module "INCLUDE">
    <!ENTITY % svg-hyperlink.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Hyperlinking//EN" "svg-hyperlink.mod">
    <!ENTITY % LinkTarget.datatype "NMTOKEN">
    <!ENTITY % SVG.a.extra.content "">
    <!ENTITY % SVG.a.element "INCLUDE">
    <!ENTITY % SVG.a.content "( #PCDATA | desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
     
       | svg | g | defs | symbol
       | use   | switch  | image 
       | style  | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT a (#PCDATA | desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.a.attlist "INCLUDE">
    <!ATTLIST a id ID #IMPLIED>
    <!ATTLIST a xml:base CDATA #IMPLIED>
    <!ATTLIST a xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST a xml:space (default|preserve) #IMPLIED>
    <!ATTLIST a requiredFeatures CDATA #IMPLIED>
    <!ATTLIST a requiredExtensions CDATA #IMPLIED>
    <!ATTLIST a systemLanguage CDATA #IMPLIED>
    <!ATTLIST a style CDATA #IMPLIED>
    <!ATTLIST a class CDATA #IMPLIED>
    <!ATTLIST a enable-background CDATA #IMPLIED>
    <!ATTLIST a clip CDATA #IMPLIED>
    <!ATTLIST a overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST a writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST a alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST a baseline-shift CDATA #IMPLIED>
    <!ATTLIST a direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST a dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST a glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST a glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST a kerning CDATA #IMPLIED>
    <!ATTLIST a letter-spacing CDATA #IMPLIED>
    <!ATTLIST a text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST a text-decoration CDATA #IMPLIED>
    <!ATTLIST a unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST a word-spacing CDATA #IMPLIED>
    <!ATTLIST a font-family CDATA #IMPLIED>
    <!ATTLIST a font-size CDATA #IMPLIED>
    <!ATTLIST a font-size-adjust CDATA #IMPLIED>
    <!ATTLIST a font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST a font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST a font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST a font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST a fill CDATA #IMPLIED>
    <!ATTLIST a fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST a stroke CDATA #IMPLIED>
    <!ATTLIST a stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST a stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST a stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST a stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST a stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST a stroke-width CDATA #IMPLIED>
    <!ATTLIST a color CDATA #IMPLIED>
    <!ATTLIST a color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST a color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST a opacity CDATA #IMPLIED>
    <!ATTLIST a fill-opacity CDATA #IMPLIED>
    <!ATTLIST a stroke-opacity CDATA #IMPLIED>
    <!ATTLIST a display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST a image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST a pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST a shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST a text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST a visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST a marker-start CDATA #IMPLIED>
    <!ATTLIST a marker-mid CDATA #IMPLIED>
    <!ATTLIST a marker-end CDATA #IMPLIED>
    <!ATTLIST a color-profile CDATA #IMPLIED>
    <!ATTLIST a stop-color CDATA #IMPLIED>
    <!ATTLIST a stop-opacity CDATA #IMPLIED>
    <!ATTLIST a clip-path CDATA #IMPLIED>
    <!ATTLIST a clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST a mask CDATA #IMPLIED>
    <!ATTLIST a filter CDATA #IMPLIED>
    <!ATTLIST a color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST a cursor CDATA #IMPLIED>
    <!ATTLIST a flood-color CDATA #IMPLIED>
    <!ATTLIST a flood-opacity CDATA #IMPLIED>
    <!ATTLIST a lighting-color CDATA #IMPLIED>
    <!ATTLIST a onfocusin CDATA #IMPLIED>
    <!ATTLIST a onfocusout CDATA #IMPLIED>
    <!ATTLIST a onactivate CDATA #IMPLIED>
    <!ATTLIST a onclick CDATA #IMPLIED>
    <!ATTLIST a onmousedown CDATA #IMPLIED>
    <!ATTLIST a onmouseup CDATA #IMPLIED>
    <!ATTLIST a onmouseover CDATA #IMPLIED>
    <!ATTLIST a onmousemove CDATA #IMPLIED>
    <!ATTLIST a onmouseout CDATA #IMPLIED>
    <!ATTLIST a onload CDATA #IMPLIED>
    <!ATTLIST a xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST a xlink:type (simple) #FIXED "simple">
    <!ATTLIST a xlink:href CDATA #REQUIRED>
    <!ATTLIST a xlink:role CDATA #IMPLIED>
    <!ATTLIST a xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST a xlink:title CDATA #IMPLIED>
    <!ATTLIST a xlink:show (new|replace) "replace">
    <!ATTLIST a xlink:actuate (onRequest) #FIXED "onRequest">
    <!ATTLIST a externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST a transform CDATA #IMPLIED>
    <!ATTLIST a target NMTOKEN #IMPLIED>
    <!ENTITY % svg-view.module "INCLUDE">
    <!ENTITY % svg-view.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 View//EN" "svg-view.mod">
    <!ENTITY % SVG.view.extra.content "">
    <!ENTITY % SVG.view.element "INCLUDE">
    <!ENTITY % SVG.view.content "( desc | title | metadata
       )*">
    <!ELEMENT view (desc | title | metadata)*>
    <!ENTITY % SVG.view.attlist "INCLUDE">
    <!ATTLIST view id ID #IMPLIED>
    <!ATTLIST view xml:base CDATA #IMPLIED>
    <!ATTLIST view xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST view xml:space (default|preserve) #IMPLIED>
    <!ATTLIST view externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST view viewBox CDATA #IMPLIED>
    <!ATTLIST view preserveAspectRatio CDATA "xMidYMid meet">
    <!ATTLIST view zoomAndPan (disable|magnify) "magnify">
    <!ATTLIST view viewTarget CDATA #IMPLIED>
    <!ENTITY % svg-script.module "INCLUDE">
    <!ENTITY % svg-script.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Scripting//EN" "svg-script.mod">
    <!ENTITY % SVG.script.extra.content "">
    <!ENTITY % SVG.script.element "INCLUDE">
    <!ENTITY % SVG.script.content "( #PCDATA  )*">
    <!ELEMENT script (#PCDATA)*>
    <!ENTITY % SVG.script.attlist "INCLUDE">
    <!ATTLIST script id ID #IMPLIED>
    <!ATTLIST script xml:base CDATA #IMPLIED>
    <!ATTLIST script xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST script xml:space (default|preserve) #IMPLIED>
    <!ATTLIST script xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST script xlink:type (simple) #FIXED "simple">
    <!ATTLIST script xlink:href CDATA #IMPLIED>
    <!ATTLIST script xlink:role CDATA #IMPLIED>
    <!ATTLIST script xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST script xlink:title CDATA #IMPLIED>
    <!ATTLIST script xlink:show (other) "other">
    <!ATTLIST script xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST script externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST script type CDATA #REQUIRED>
    <!ENTITY % svg-animation.module "INCLUDE">
    <!ENTITY % svg-animation.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Animation//EN" "svg-animation.mod">
    <!ENTITY % SVG.Animation.extra.attrib "">
    <!ENTITY % SVG.Animation.attrib "xmlns:xlink CDATA #FIXED 'http://www.w3.org/1999/xlink'
     xlink:type ( simple ) #FIXED 'simple'
     xlink:href CDATA #IMPLIED
     xlink:role CDATA #IMPLIED
     xlink:arcrole CDATA #IMPLIED
     xlink:title CDATA #IMPLIED
     xlink:show ( other ) 'other'
     xlink:actuate ( onLoad ) #FIXED 'onLoad'
     
     ">
    <!ENTITY % SVG.AnimationAttribute.extra.attrib "">
    <!ENTITY % SVG.AnimationAttribute.attrib "attributeName  CDATA  #REQUIRED
     attributeType  CDATA  #IMPLIED
     ">
    <!ENTITY % SVG.AnimationTiming.extra.attrib "">
    <!ENTITY % SVG.AnimationTiming.attrib "begin CDATA #IMPLIED
     dur CDATA #IMPLIED
     end CDATA #IMPLIED
     min CDATA #IMPLIED
     max CDATA #IMPLIED
     restart ( always | never | whenNotActive ) 'always'
     repeatCount CDATA #IMPLIED
     repeatDur CDATA #IMPLIED
     fill ( remove | freeze ) 'remove'
     ">
    <!ENTITY % SVG.AnimationValue.extra.attrib "">
    <!ENTITY % SVG.AnimationValue.attrib "calcMode ( discrete | linear | paced | spline ) 'linear'
     values CDATA #IMPLIED
     keyTimes CDATA #IMPLIED
     keySplines CDATA #IMPLIED
     from CDATA #IMPLIED
     to CDATA #IMPLIED
     by CDATA #IMPLIED
     ">
    <!ENTITY % SVG.AnimationAddtion.extra.attrib "">
    <!ENTITY % SVG.AnimationAddtion.attrib "additive ( replace | sum ) 'replace'
     accumulate ( none | sum ) 'none'
     ">
    <!ENTITY % SVG.animate.extra.content "">
    <!ENTITY % SVG.animate.element "INCLUDE">
    <!ENTITY % SVG.animate.content "( desc | title | metadata
       )*">
    <!ELEMENT animate (desc | title | metadata)*>
    <!ENTITY % SVG.animate.attlist "INCLUDE">
    <!ATTLIST animate id ID #IMPLIED>
    <!ATTLIST animate xml:base CDATA #IMPLIED>
    <!ATTLIST animate xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST animate xml:space (default|preserve) #IMPLIED>
    <!ATTLIST animate requiredFeatures CDATA #IMPLIED>
    <!ATTLIST animate requiredExtensions CDATA #IMPLIED>
    <!ATTLIST animate systemLanguage CDATA #IMPLIED>
    <!ATTLIST animate onbegin CDATA #IMPLIED>
    <!ATTLIST animate onend CDATA #IMPLIED>
    <!ATTLIST animate onrepeat CDATA #IMPLIED>
    <!ATTLIST animate onload CDATA #IMPLIED>
    <!ATTLIST animate externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST animate xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST animate xlink:type (simple) #FIXED "simple">
    <!ATTLIST animate xlink:href CDATA #IMPLIED>
    <!ATTLIST animate xlink:role CDATA #IMPLIED>
    <!ATTLIST animate xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST animate xlink:title CDATA #IMPLIED>
    <!ATTLIST animate xlink:show (other) "other">
    <!ATTLIST animate xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST animate attributeName CDATA #REQUIRED>
    <!ATTLIST animate attributeType CDATA #IMPLIED>
    <!ATTLIST animate begin CDATA #IMPLIED>
    <!ATTLIST animate dur CDATA #IMPLIED>
    <!ATTLIST animate end CDATA #IMPLIED>
    <!ATTLIST animate min CDATA #IMPLIED>
    <!ATTLIST animate max CDATA #IMPLIED>
    <!ATTLIST animate restart (always|never|whenNotActive) "always">
    <!ATTLIST animate repeatCount CDATA #IMPLIED>
    <!ATTLIST animate repeatDur CDATA #IMPLIED>
    <!ATTLIST animate fill (remove|freeze) "remove">
    <!ATTLIST animate calcMode (discrete|linear|paced|spline) "linear">
    <!ATTLIST animate values CDATA #IMPLIED>
    <!ATTLIST animate keyTimes CDATA #IMPLIED>
    <!ATTLIST animate keySplines CDATA #IMPLIED>
    <!ATTLIST animate from CDATA #IMPLIED>
    <!ATTLIST animate to CDATA #IMPLIED>
    <!ATTLIST animate by CDATA #IMPLIED>
    <!ATTLIST animate additive (replace|sum) "replace">
    <!ATTLIST animate accumulate (none|sum) "none">
    <!ENTITY % SVG.set.extra.content "">
    <!ENTITY % SVG.set.element "INCLUDE">
    <!ENTITY % SVG.set.content "( desc | title | metadata
       )*">
    <!ELEMENT set (desc | title | metadata)*>
    <!ENTITY % SVG.set.attlist "INCLUDE">
    <!ATTLIST set id ID #IMPLIED>
    <!ATTLIST set xml:base CDATA #IMPLIED>
    <!ATTLIST set xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST set xml:space (default|preserve) #IMPLIED>
    <!ATTLIST set requiredFeatures CDATA #IMPLIED>
    <!ATTLIST set requiredExtensions CDATA #IMPLIED>
    <!ATTLIST set systemLanguage CDATA #IMPLIED>
    <!ATTLIST set onbegin CDATA #IMPLIED>
    <!ATTLIST set onend CDATA #IMPLIED>
    <!ATTLIST set onrepeat CDATA #IMPLIED>
    <!ATTLIST set onload CDATA #IMPLIED>
    <!ATTLIST set externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST set xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST set xlink:type (simple) #FIXED "simple">
    <!ATTLIST set xlink:href CDATA #IMPLIED>
    <!ATTLIST set xlink:role CDATA #IMPLIED>
    <!ATTLIST set xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST set xlink:title CDATA #IMPLIED>
    <!ATTLIST set xlink:show (other) "other">
    <!ATTLIST set xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST set attributeName CDATA #REQUIRED>
    <!ATTLIST set attributeType CDATA #IMPLIED>
    <!ATTLIST set begin CDATA #IMPLIED>
    <!ATTLIST set dur CDATA #IMPLIED>
    <!ATTLIST set end CDATA #IMPLIED>
    <!ATTLIST set min CDATA #IMPLIED>
    <!ATTLIST set max CDATA #IMPLIED>
    <!ATTLIST set restart (always|never|whenNotActive) "always">
    <!ATTLIST set repeatCount CDATA #IMPLIED>
    <!ATTLIST set repeatDur CDATA #IMPLIED>
    <!ATTLIST set fill (remove|freeze) "remove">
    <!ATTLIST set to CDATA #IMPLIED>
    <!ENTITY % SVG.animateMotion.extra.content "">
    <!ENTITY % SVG.animateMotion.element "INCLUDE">
    <!ENTITY % SVG.animateMotion.content "( ( mpath,
         ( desc | title | metadata
       )* )
       | ( ( desc | title | metadata
       )+,
           mpath,
	       ( ( desc | title | metadata
       )* )? ) )">
    <!ELEMENT animateMotion ((mpath, (desc | title | metadata)*) | ((desc | title | metadata)+, mpath, (desc | title | metadata)*))>
    <!ENTITY % SVG.animateMotion.attlist "INCLUDE">
    <!ATTLIST animateMotion id ID #IMPLIED>
    <!ATTLIST animateMotion xml:base CDATA #IMPLIED>
    <!ATTLIST animateMotion xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST animateMotion xml:space (default|preserve) #IMPLIED>
    <!ATTLIST animateMotion requiredFeatures CDATA #IMPLIED>
    <!ATTLIST animateMotion requiredExtensions CDATA #IMPLIED>
    <!ATTLIST animateMotion systemLanguage CDATA #IMPLIED>
    <!ATTLIST animateMotion onbegin CDATA #IMPLIED>
    <!ATTLIST animateMotion onend CDATA #IMPLIED>
    <!ATTLIST animateMotion onrepeat CDATA #IMPLIED>
    <!ATTLIST animateMotion onload CDATA #IMPLIED>
    <!ATTLIST animateMotion externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST animateMotion xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST animateMotion xlink:type (simple) #FIXED "simple">
    <!ATTLIST animateMotion xlink:href CDATA #IMPLIED>
    <!ATTLIST animateMotion xlink:role CDATA #IMPLIED>
    <!ATTLIST animateMotion xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST animateMotion xlink:title CDATA #IMPLIED>
    <!ATTLIST animateMotion xlink:show (other) "other">
    <!ATTLIST animateMotion xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST animateMotion begin CDATA #IMPLIED>
    <!ATTLIST animateMotion dur CDATA #IMPLIED>
    <!ATTLIST animateMotion end CDATA #IMPLIED>
    <!ATTLIST animateMotion min CDATA #IMPLIED>
    <!ATTLIST animateMotion max CDATA #IMPLIED>
    <!ATTLIST animateMotion restart (always|never|whenNotActive) "always">
    <!ATTLIST animateMotion repeatCount CDATA #IMPLIED>
    <!ATTLIST animateMotion repeatDur CDATA #IMPLIED>
    <!ATTLIST animateMotion fill (remove|freeze) "remove">
    <!ATTLIST animateMotion additive (replace|sum) "replace">
    <!ATTLIST animateMotion accumulate (none|sum) "none">
    <!ATTLIST animateMotion calcMode (discrete|linear|paced|spline) "paced">
    <!ATTLIST animateMotion values CDATA #IMPLIED>
    <!ATTLIST animateMotion keyTimes CDATA #IMPLIED>
    <!ATTLIST animateMotion keySplines CDATA #IMPLIED>
    <!ATTLIST animateMotion from CDATA #IMPLIED>
    <!ATTLIST animateMotion to CDATA #IMPLIED>
    <!ATTLIST animateMotion by CDATA #IMPLIED>
    <!ATTLIST animateMotion path CDATA #IMPLIED>
    <!ATTLIST animateMotion keyPoints CDATA #IMPLIED>
    <!ATTLIST animateMotion rotate CDATA #IMPLIED>
    <!ATTLIST animateMotion origin CDATA #IMPLIED>
    <!ENTITY % SVG.animateColor.extra.content "">
    <!ENTITY % SVG.animateColor.element "INCLUDE">
    <!ENTITY % SVG.animateColor.content "( desc | title | metadata
       )*">
    <!ELEMENT animateColor (desc | title | metadata)*>
    <!ENTITY % SVG.animateColor.attlist "INCLUDE">
    <!ATTLIST animateColor id ID #IMPLIED>
    <!ATTLIST animateColor xml:base CDATA #IMPLIED>
    <!ATTLIST animateColor xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST animateColor xml:space (default|preserve) #IMPLIED>
    <!ATTLIST animateColor requiredFeatures CDATA #IMPLIED>
    <!ATTLIST animateColor requiredExtensions CDATA #IMPLIED>
    <!ATTLIST animateColor systemLanguage CDATA #IMPLIED>
    <!ATTLIST animateColor onbegin CDATA #IMPLIED>
    <!ATTLIST animateColor onend CDATA #IMPLIED>
    <!ATTLIST animateColor onrepeat CDATA #IMPLIED>
    <!ATTLIST animateColor onload CDATA #IMPLIED>
    <!ATTLIST animateColor externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST animateColor xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST animateColor xlink:type (simple) #FIXED "simple">
    <!ATTLIST animateColor xlink:href CDATA #IMPLIED>
    <!ATTLIST animateColor xlink:role CDATA #IMPLIED>
    <!ATTLIST animateColor xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST animateColor xlink:title CDATA #IMPLIED>
    <!ATTLIST animateColor xlink:show (other) "other">
    <!ATTLIST animateColor xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST animateColor attributeName CDATA #REQUIRED>
    <!ATTLIST animateColor attributeType CDATA #IMPLIED>
    <!ATTLIST animateColor begin CDATA #IMPLIED>
    <!ATTLIST animateColor dur CDATA #IMPLIED>
    <!ATTLIST animateColor end CDATA #IMPLIED>
    <!ATTLIST animateColor min CDATA #IMPLIED>
    <!ATTLIST animateColor max CDATA #IMPLIED>
    <!ATTLIST animateColor restart (always|never|whenNotActive) "always">
    <!ATTLIST animateColor repeatCount CDATA #IMPLIED>
    <!ATTLIST animateColor repeatDur CDATA #IMPLIED>
    <!ATTLIST animateColor fill (remove|freeze) "remove">
    <!ATTLIST animateColor calcMode (discrete|linear|paced|spline) "linear">
    <!ATTLIST animateColor values CDATA #IMPLIED>
    <!ATTLIST animateColor keyTimes CDATA #IMPLIED>
    <!ATTLIST animateColor keySplines CDATA #IMPLIED>
    <!ATTLIST animateColor from CDATA #IMPLIED>
    <!ATTLIST animateColor to CDATA #IMPLIED>
    <!ATTLIST animateColor by CDATA #IMPLIED>
    <!ATTLIST animateColor additive (replace|sum) "replace">
    <!ATTLIST animateColor accumulate (none|sum) "none">
    <!ENTITY % SVG.animateTransform.extra.content "">
    <!ENTITY % SVG.animateTransform.element "INCLUDE">
    <!ENTITY % SVG.animateTransform.content "( desc | title | metadata
       )*">
    <!ELEMENT animateTransform (desc | title | metadata)*>
    <!ENTITY % SVG.animateTransform.attlist "INCLUDE">
    <!ATTLIST animateTransform id ID #IMPLIED>
    <!ATTLIST animateTransform xml:base CDATA #IMPLIED>
    <!ATTLIST animateTransform xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST animateTransform xml:space (default|preserve) #IMPLIED>
    <!ATTLIST animateTransform requiredFeatures CDATA #IMPLIED>
    <!ATTLIST animateTransform requiredExtensions CDATA #IMPLIED>
    <!ATTLIST animateTransform systemLanguage CDATA #IMPLIED>
    <!ATTLIST animateTransform onbegin CDATA #IMPLIED>
    <!ATTLIST animateTransform onend CDATA #IMPLIED>
    <!ATTLIST animateTransform onrepeat CDATA #IMPLIED>
    <!ATTLIST animateTransform onload CDATA #IMPLIED>
    <!ATTLIST animateTransform externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST animateTransform xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST animateTransform xlink:type (simple) #FIXED "simple">
    <!ATTLIST animateTransform xlink:href CDATA #IMPLIED>
    <!ATTLIST animateTransform xlink:role CDATA #IMPLIED>
    <!ATTLIST animateTransform xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST animateTransform xlink:title CDATA #IMPLIED>
    <!ATTLIST animateTransform xlink:show (other) "other">
    <!ATTLIST animateTransform xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST animateTransform attributeName CDATA #REQUIRED>
    <!ATTLIST animateTransform attributeType CDATA #IMPLIED>
    <!ATTLIST animateTransform begin CDATA #IMPLIED>
    <!ATTLIST animateTransform dur CDATA #IMPLIED>
    <!ATTLIST animateTransform end CDATA #IMPLIED>
    <!ATTLIST animateTransform min CDATA #IMPLIED>
    <!ATTLIST animateTransform max CDATA #IMPLIED>
    <!ATTLIST animateTransform restart (always|never|whenNotActive) "always">
    <!ATTLIST animateTransform repeatCount CDATA #IMPLIED>
    <!ATTLIST animateTransform repeatDur CDATA #IMPLIED>
    <!ATTLIST animateTransform fill (remove|freeze) "remove">
    <!ATTLIST animateTransform calcMode (discrete|linear|paced|spline) "linear">
    <!ATTLIST animateTransform values CDATA #IMPLIED>
    <!ATTLIST animateTransform keyTimes CDATA #IMPLIED>
    <!ATTLIST animateTransform keySplines CDATA #IMPLIED>
    <!ATTLIST animateTransform from CDATA #IMPLIED>
    <!ATTLIST animateTransform to CDATA #IMPLIED>
    <!ATTLIST animateTransform by CDATA #IMPLIED>
    <!ATTLIST animateTransform additive (replace|sum) "replace">
    <!ATTLIST animateTransform accumulate (none|sum) "none">
    <!ATTLIST animateTransform type (translate|scale|rotate|skewX|skewY) "translate">
    <!ENTITY % SVG.mpath.extra.content "">
    <!ENTITY % SVG.mpath.element "INCLUDE">
    <!ENTITY % SVG.mpath.content "( desc | title | metadata
       )*">
    <!ELEMENT mpath (desc | title | metadata)*>
    <!ENTITY % SVG.mpath.attlist "INCLUDE">
    <!ATTLIST mpath id ID #IMPLIED>
    <!ATTLIST mpath xml:base CDATA #IMPLIED>
    <!ATTLIST mpath xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST mpath xml:space (default|preserve) #IMPLIED>
    <!ATTLIST mpath xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST mpath xlink:type (simple) #FIXED "simple">
    <!ATTLIST mpath xlink:href CDATA #REQUIRED>
    <!ATTLIST mpath xlink:role CDATA #IMPLIED>
    <!ATTLIST mpath xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST mpath xlink:title CDATA #IMPLIED>
    <!ATTLIST mpath xlink:show (other) "other">
    <!ATTLIST mpath xlink:actuate (onLoad) #FIXED "onLoad">
    <!ATTLIST mpath externalResourcesRequired (false|true) #IMPLIED>
    <!ENTITY % svg-font.module "INCLUDE">
    <!ENTITY % svg-font.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Font//EN" "svg-font.mod">
    <!ENTITY % SVG.font.extra.content "">
    <!ENTITY % SVG.font.element "INCLUDE">
    <!ENTITY % SVG.font.content "( desc | title | metadata
      | font-face
     | missing-glyph | glyph | hkern
     | vkern  )*">
    <!ELEMENT font (desc | title | metadata | font-face | missing-glyph | glyph | hkern | vkern)*>
    <!ENTITY % SVG.font.attlist "INCLUDE">
    <!ATTLIST font id ID #IMPLIED>
    <!ATTLIST font xml:base CDATA #IMPLIED>
    <!ATTLIST font xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST font xml:space (default|preserve) #IMPLIED>
    <!ATTLIST font style CDATA #IMPLIED>
    <!ATTLIST font class CDATA #IMPLIED>
    <!ATTLIST font enable-background CDATA #IMPLIED>
    <!ATTLIST font clip CDATA #IMPLIED>
    <!ATTLIST font overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST font writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST font alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST font baseline-shift CDATA #IMPLIED>
    <!ATTLIST font direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST font dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST font glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST font glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST font kerning CDATA #IMPLIED>
    <!ATTLIST font letter-spacing CDATA #IMPLIED>
    <!ATTLIST font text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST font text-decoration CDATA #IMPLIED>
    <!ATTLIST font unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST font word-spacing CDATA #IMPLIED>
    <!ATTLIST font font-family CDATA #IMPLIED>
    <!ATTLIST font font-size CDATA #IMPLIED>
    <!ATTLIST font font-size-adjust CDATA #IMPLIED>
    <!ATTLIST font font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST font font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST font font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST font font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST font fill CDATA #IMPLIED>
    <!ATTLIST font fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST font stroke CDATA #IMPLIED>
    <!ATTLIST font stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST font stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST font stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST font stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST font stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST font stroke-width CDATA #IMPLIED>
    <!ATTLIST font color CDATA #IMPLIED>
    <!ATTLIST font color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST font color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST font opacity CDATA #IMPLIED>
    <!ATTLIST font fill-opacity CDATA #IMPLIED>
    <!ATTLIST font stroke-opacity CDATA #IMPLIED>
    <!ATTLIST font display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST font image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST font pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST font shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST font text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST font visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST font marker-start CDATA #IMPLIED>
    <!ATTLIST font marker-mid CDATA #IMPLIED>
    <!ATTLIST font marker-end CDATA #IMPLIED>
    <!ATTLIST font color-profile CDATA #IMPLIED>
    <!ATTLIST font stop-color CDATA #IMPLIED>
    <!ATTLIST font stop-opacity CDATA #IMPLIED>
    <!ATTLIST font clip-path CDATA #IMPLIED>
    <!ATTLIST font clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST font mask CDATA #IMPLIED>
    <!ATTLIST font filter CDATA #IMPLIED>
    <!ATTLIST font color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST font cursor CDATA #IMPLIED>
    <!ATTLIST font flood-color CDATA #IMPLIED>
    <!ATTLIST font flood-opacity CDATA #IMPLIED>
    <!ATTLIST font lighting-color CDATA #IMPLIED>
    <!ATTLIST font externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST font horiz-origin-x CDATA #IMPLIED>
    <!ATTLIST font horiz-origin-y CDATA #IMPLIED>
    <!ATTLIST font horiz-adv-x CDATA #REQUIRED>
    <!ATTLIST font vert-origin-x CDATA #IMPLIED>
    <!ATTLIST font vert-origin-y CDATA #IMPLIED>
    <!ATTLIST font vert-adv-y CDATA #IMPLIED>
    <!ENTITY % SVG.font-face.extra.content "">
    <!ENTITY % SVG.font-face.element "INCLUDE">
    <!ENTITY % SVG.font-face.content "( ( font-face-src,
         ( desc | title | metadata
       )* )
       | ( ( desc | title | metadata
       )+,
             font-face-src,
	         ( ( desc | title | metadata
       )* )? ) )">
    <!ELEMENT font-face ((font-face-src, (desc | title | metadata)*) | ((desc | title | metadata)+, font-face-src, (desc | title | metadata)*))>
    <!ENTITY % SVG.font-face.attlist "INCLUDE">
    <!ATTLIST font-face id ID #IMPLIED>
    <!ATTLIST font-face xml:base CDATA #IMPLIED>
    <!ATTLIST font-face xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST font-face xml:space (default|preserve) #IMPLIED>
    <!ATTLIST font-face font-family CDATA #IMPLIED>
    <!ATTLIST font-face font-style CDATA #IMPLIED>
    <!ATTLIST font-face font-variant CDATA #IMPLIED>
    <!ATTLIST font-face font-weight CDATA #IMPLIED>
    <!ATTLIST font-face font-stretch CDATA #IMPLIED>
    <!ATTLIST font-face font-size CDATA #IMPLIED>
    <!ATTLIST font-face unicode-range CDATA #IMPLIED>
    <!ATTLIST font-face units-per-em CDATA #IMPLIED>
    <!ATTLIST font-face panose-1 CDATA #IMPLIED>
    <!ATTLIST font-face stemv CDATA #IMPLIED>
    <!ATTLIST font-face stemh CDATA #IMPLIED>
    <!ATTLIST font-face slope CDATA #IMPLIED>
    <!ATTLIST font-face cap-height CDATA #IMPLIED>
    <!ATTLIST font-face x-height CDATA #IMPLIED>
    <!ATTLIST font-face accent-height CDATA #IMPLIED>
    <!ATTLIST font-face ascent CDATA #IMPLIED>
    <!ATTLIST font-face descent CDATA #IMPLIED>
    <!ATTLIST font-face widths CDATA #IMPLIED>
    <!ATTLIST font-face bbox CDATA #IMPLIED>
    <!ATTLIST font-face ideographic CDATA #IMPLIED>
    <!ATTLIST font-face alphabetic CDATA #IMPLIED>
    <!ATTLIST font-face mathematical CDATA #IMPLIED>
    <!ATTLIST font-face hanging CDATA #IMPLIED>
    <!ATTLIST font-face v-ideographic CDATA #IMPLIED>
    <!ATTLIST font-face v-alphabetic CDATA #IMPLIED>
    <!ATTLIST font-face v-mathematical CDATA #IMPLIED>
    <!ATTLIST font-face v-hanging CDATA #IMPLIED>
    <!ATTLIST font-face underline-position CDATA #IMPLIED>
    <!ATTLIST font-face underline-thickness CDATA #IMPLIED>
    <!ATTLIST font-face strikethrough-position CDATA #IMPLIED>
    <!ATTLIST font-face strikethrough-thickness CDATA #IMPLIED>
    <!ATTLIST font-face overline-position CDATA #IMPLIED>
    <!ATTLIST font-face overline-thickness CDATA #IMPLIED>
    <!ENTITY % SVG.glyph.extra.content "">
    <!ENTITY % SVG.glyph.element "INCLUDE">
    <!ENTITY % SVG.glyph.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | svg | g | defs | symbol
       | use  
       | switch  | image  | style 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT glyph (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.glyph.attlist "INCLUDE">
    <!ATTLIST glyph id ID #IMPLIED>
    <!ATTLIST glyph xml:base CDATA #IMPLIED>
    <!ATTLIST glyph xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST glyph xml:space (default|preserve) #IMPLIED>
    <!ATTLIST glyph style CDATA #IMPLIED>
    <!ATTLIST glyph class CDATA #IMPLIED>
    <!ATTLIST glyph enable-background CDATA #IMPLIED>
    <!ATTLIST glyph clip CDATA #IMPLIED>
    <!ATTLIST glyph overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST glyph writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST glyph alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST glyph baseline-shift CDATA #IMPLIED>
    <!ATTLIST glyph direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST glyph dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST glyph glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST glyph glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST glyph kerning CDATA #IMPLIED>
    <!ATTLIST glyph letter-spacing CDATA #IMPLIED>
    <!ATTLIST glyph text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST glyph text-decoration CDATA #IMPLIED>
    <!ATTLIST glyph unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST glyph word-spacing CDATA #IMPLIED>
    <!ATTLIST glyph font-family CDATA #IMPLIED>
    <!ATTLIST glyph font-size CDATA #IMPLIED>
    <!ATTLIST glyph font-size-adjust CDATA #IMPLIED>
    <!ATTLIST glyph font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST glyph font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST glyph font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST glyph font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST glyph fill CDATA #IMPLIED>
    <!ATTLIST glyph fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST glyph stroke CDATA #IMPLIED>
    <!ATTLIST glyph stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST glyph stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST glyph stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST glyph stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST glyph stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST glyph stroke-width CDATA #IMPLIED>
    <!ATTLIST glyph color CDATA #IMPLIED>
    <!ATTLIST glyph color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST glyph color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST glyph opacity CDATA #IMPLIED>
    <!ATTLIST glyph fill-opacity CDATA #IMPLIED>
    <!ATTLIST glyph stroke-opacity CDATA #IMPLIED>
    <!ATTLIST glyph display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST glyph image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST glyph pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST glyph shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST glyph text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST glyph visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST glyph marker-start CDATA #IMPLIED>
    <!ATTLIST glyph marker-mid CDATA #IMPLIED>
    <!ATTLIST glyph marker-end CDATA #IMPLIED>
    <!ATTLIST glyph color-profile CDATA #IMPLIED>
    <!ATTLIST glyph stop-color CDATA #IMPLIED>
    <!ATTLIST glyph stop-opacity CDATA #IMPLIED>
    <!ATTLIST glyph clip-path CDATA #IMPLIED>
    <!ATTLIST glyph clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST glyph mask CDATA #IMPLIED>
    <!ATTLIST glyph filter CDATA #IMPLIED>
    <!ATTLIST glyph color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST glyph cursor CDATA #IMPLIED>
    <!ATTLIST glyph flood-color CDATA #IMPLIED>
    <!ATTLIST glyph flood-opacity CDATA #IMPLIED>
    <!ATTLIST glyph lighting-color CDATA #IMPLIED>
    <!ATTLIST glyph unicode CDATA #IMPLIED>
    <!ATTLIST glyph glyph-name CDATA #IMPLIED>
    <!ATTLIST glyph d CDATA #IMPLIED>
    <!ATTLIST glyph orientation CDATA #IMPLIED>
    <!ATTLIST glyph arabic-form CDATA #IMPLIED>
    <!ATTLIST glyph lang CDATA #IMPLIED>
    <!ATTLIST glyph horiz-adv-x CDATA #IMPLIED>
    <!ATTLIST glyph vert-origin-x CDATA #IMPLIED>
    <!ATTLIST glyph vert-origin-y CDATA #IMPLIED>
    <!ATTLIST glyph vert-adv-y CDATA #IMPLIED>
    <!ENTITY % SVG.missing-glyph.extra.content "">
    <!ENTITY % SVG.missing-glyph.element "INCLUDE">
    <!ENTITY % SVG.missing-glyph.content "( desc | title | metadata
      | animate | set | animateMotion |
     animateColor | animateTransform
      | svg | g | defs | symbol
       | use  
       | switch  | image  | style 
       | path | rect | circle
     | line | ellipse | polyline
     | polygon  | text | altGlyphDef  | marker 
       | color-profile  | linearGradient | radialGradient
        | pattern 
       | clipPath  | mask  | filter  | cursor 
       | a  | view  | script 
       | font | font-face  | foreignObject   )*">
    <!ELEMENT missing-glyph (desc | title | metadata | animate | set | animateMotion | animateColor | animateTransform | svg | g | defs | symbol | use | switch | image | style | path | rect | circle | line | ellipse | polyline | polygon | text | altGlyphDef | marker | color-profile | linearGradient | radialGradient | pattern | clipPath | mask | filter | cursor | a | view | script | font | font-face | foreignObject)*>
    <!ENTITY % SVG.missing-glyph.attlist "INCLUDE">
    <!ATTLIST missing-glyph id ID #IMPLIED>
    <!ATTLIST missing-glyph xml:base CDATA #IMPLIED>
    <!ATTLIST missing-glyph xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST missing-glyph xml:space (default|preserve) #IMPLIED>
    <!ATTLIST missing-glyph style CDATA #IMPLIED>
    <!ATTLIST missing-glyph class CDATA #IMPLIED>
    <!ATTLIST missing-glyph enable-background CDATA #IMPLIED>
    <!ATTLIST missing-glyph clip CDATA #IMPLIED>
    <!ATTLIST missing-glyph overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST missing-glyph writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST missing-glyph alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST missing-glyph baseline-shift CDATA #IMPLIED>
    <!ATTLIST missing-glyph direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST missing-glyph dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST missing-glyph glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST missing-glyph glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST missing-glyph kerning CDATA #IMPLIED>
    <!ATTLIST missing-glyph letter-spacing CDATA #IMPLIED>
    <!ATTLIST missing-glyph text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST missing-glyph text-decoration CDATA #IMPLIED>
    <!ATTLIST missing-glyph unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST missing-glyph word-spacing CDATA #IMPLIED>
    <!ATTLIST missing-glyph font-family CDATA #IMPLIED>
    <!ATTLIST missing-glyph font-size CDATA #IMPLIED>
    <!ATTLIST missing-glyph font-size-adjust CDATA #IMPLIED>
    <!ATTLIST missing-glyph font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST missing-glyph font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST missing-glyph font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST missing-glyph font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST missing-glyph fill CDATA #IMPLIED>
    <!ATTLIST missing-glyph fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST missing-glyph stroke CDATA #IMPLIED>
    <!ATTLIST missing-glyph stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST missing-glyph stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST missing-glyph stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST missing-glyph stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST missing-glyph stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST missing-glyph stroke-width CDATA #IMPLIED>
    <!ATTLIST missing-glyph color CDATA #IMPLIED>
    <!ATTLIST missing-glyph color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST missing-glyph color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST missing-glyph opacity CDATA #IMPLIED>
    <!ATTLIST missing-glyph fill-opacity CDATA #IMPLIED>
    <!ATTLIST missing-glyph stroke-opacity CDATA #IMPLIED>
    <!ATTLIST missing-glyph display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST missing-glyph image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST missing-glyph pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST missing-glyph shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST missing-glyph text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST missing-glyph visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST missing-glyph marker-start CDATA #IMPLIED>
    <!ATTLIST missing-glyph marker-mid CDATA #IMPLIED>
    <!ATTLIST missing-glyph marker-end CDATA #IMPLIED>
    <!ATTLIST missing-glyph color-profile CDATA #IMPLIED>
    <!ATTLIST missing-glyph stop-color CDATA #IMPLIED>
    <!ATTLIST missing-glyph stop-opacity CDATA #IMPLIED>
    <!ATTLIST missing-glyph clip-path CDATA #IMPLIED>
    <!ATTLIST missing-glyph clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST missing-glyph mask CDATA #IMPLIED>
    <!ATTLIST missing-glyph filter CDATA #IMPLIED>
    <!ATTLIST missing-glyph color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST missing-glyph cursor CDATA #IMPLIED>
    <!ATTLIST missing-glyph flood-color CDATA #IMPLIED>
    <!ATTLIST missing-glyph flood-opacity CDATA #IMPLIED>
    <!ATTLIST missing-glyph lighting-color CDATA #IMPLIED>
    <!ATTLIST missing-glyph d CDATA #IMPLIED>
    <!ATTLIST missing-glyph horiz-adv-x CDATA #IMPLIED>
    <!ATTLIST missing-glyph vert-origin-x CDATA #IMPLIED>
    <!ATTLIST missing-glyph vert-origin-y CDATA #IMPLIED>
    <!ATTLIST missing-glyph vert-adv-y CDATA #IMPLIED>
    <!ENTITY % SVG.hkern.element "INCLUDE">
    <!ENTITY % SVG.hkern.content "EMPTY">
    <!ELEMENT hkern EMPTY>
    <!ENTITY % SVG.hkern.attlist "INCLUDE">
    <!ATTLIST hkern id ID #IMPLIED>
    <!ATTLIST hkern xml:base CDATA #IMPLIED>
    <!ATTLIST hkern xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST hkern xml:space (default|preserve) #IMPLIED>
    <!ATTLIST hkern u1 CDATA #IMPLIED>
    <!ATTLIST hkern g1 CDATA #IMPLIED>
    <!ATTLIST hkern u2 CDATA #IMPLIED>
    <!ATTLIST hkern g2 CDATA #IMPLIED>
    <!ATTLIST hkern k CDATA #REQUIRED>
    <!ENTITY % SVG.vkern.element "INCLUDE">
    <!ENTITY % SVG.vkern.content "EMPTY">
    <!ELEMENT vkern EMPTY>
    <!ENTITY % SVG.vkern.attlist "INCLUDE">
    <!ATTLIST vkern id ID #IMPLIED>
    <!ATTLIST vkern xml:base CDATA #IMPLIED>
    <!ATTLIST vkern xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST vkern xml:space (default|preserve) #IMPLIED>
    <!ATTLIST vkern u1 CDATA #IMPLIED>
    <!ATTLIST vkern g1 CDATA #IMPLIED>
    <!ATTLIST vkern u2 CDATA #IMPLIED>
    <!ATTLIST vkern g2 CDATA #IMPLIED>
    <!ATTLIST vkern k CDATA #REQUIRED>
    <!ENTITY % SVG.font-face-src.extra.content "">
    <!ENTITY % SVG.font-face-src.element "INCLUDE">
    <!ENTITY % SVG.font-face-src.content "( font-face-uri | font-face-name
        )+">
    <!ELEMENT font-face-src (font-face-uri | font-face-name)+>
    <!ENTITY % SVG.font-face-src.attlist "INCLUDE">
    <!ATTLIST font-face-src id ID #IMPLIED>
    <!ATTLIST font-face-src xml:base CDATA #IMPLIED>
    <!ATTLIST font-face-src xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST font-face-src xml:space (default|preserve) #IMPLIED>
    <!ENTITY % SVG.font-face-uri.extra.content "">
    <!ENTITY % SVG.font-face-uri.element "INCLUDE">
    <!ENTITY % SVG.font-face-uri.content "( font-face-format  )*">
    <!ELEMENT font-face-uri (font-face-format)*>
    <!ENTITY % SVG.font-face-uri.attlist "INCLUDE">
    <!ATTLIST font-face-uri id ID #IMPLIED>
    <!ATTLIST font-face-uri xml:base CDATA #IMPLIED>
    <!ATTLIST font-face-uri xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST font-face-uri xml:space (default|preserve) #IMPLIED>
    <!ATTLIST font-face-uri xmlns:xlink CDATA #FIXED "http://www.w3.org/1999/xlink">
    <!ATTLIST font-face-uri xlink:type (simple) #FIXED "simple">
    <!ATTLIST font-face-uri xlink:href CDATA #REQUIRED>
    <!ATTLIST font-face-uri xlink:role CDATA #IMPLIED>
    <!ATTLIST font-face-uri xlink:arcrole CDATA #IMPLIED>
    <!ATTLIST font-face-uri xlink:title CDATA #IMPLIED>
    <!ATTLIST font-face-uri xlink:show (other) "other">
    <!ATTLIST font-face-uri xlink:actuate (onLoad) #FIXED "onLoad">
    <!ENTITY % SVG.font-face-format.element "INCLUDE">
    <!ENTITY % SVG.font-face-format.content "EMPTY">
    <!ELEMENT font-face-format EMPTY>
    <!ENTITY % SVG.font-face-format.attlist "INCLUDE">
    <!ATTLIST font-face-format id ID #IMPLIED>
    <!ATTLIST font-face-format xml:base CDATA #IMPLIED>
    <!ATTLIST font-face-format xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST font-face-format xml:space (default|preserve) #IMPLIED>
    <!ATTLIST font-face-format string CDATA #IMPLIED>
    <!ENTITY % SVG.font-face-name.element "INCLUDE">
    <!ENTITY % SVG.font-face-name.content "EMPTY">
    <!ELEMENT font-face-name EMPTY>
    <!ENTITY % SVG.font-face-name.attlist "INCLUDE">
    <!ATTLIST font-face-name id ID #IMPLIED>
    <!ATTLIST font-face-name xml:base CDATA #IMPLIED>
    <!ATTLIST font-face-name xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST font-face-name xml:space (default|preserve) #IMPLIED>
    <!ATTLIST font-face-name name CDATA #IMPLIED>
    <!ENTITY % svg-extensibility.module "INCLUDE">
    <!ENTITY % svg-extensibility.mod PUBLIC "-//W3C//ELEMENTS SVG 1.1 Extensibility//EN" "svg-extensibility.mod">
    <!ENTITY % SVG.foreignObject.extra.content "">
    <!ENTITY % SVG.foreignObject.element "INCLUDE">
    <!ENTITY % SVG.foreignObject.content "( #PCDATA  )*">
    <!ELEMENT foreignObject (#PCDATA)*>
    <!ENTITY % SVG.foreignObject.attlist "INCLUDE">
    <!ATTLIST foreignObject id ID #IMPLIED>
    <!ATTLIST foreignObject xml:base CDATA #IMPLIED>
    <!ATTLIST foreignObject xml:lang NMTOKEN #IMPLIED>
    <!ATTLIST foreignObject xml:space (default|preserve) #IMPLIED>
    <!ATTLIST foreignObject requiredFeatures CDATA #IMPLIED>
    <!ATTLIST foreignObject requiredExtensions CDATA #IMPLIED>
    <!ATTLIST foreignObject systemLanguage CDATA #IMPLIED>
    <!ATTLIST foreignObject style CDATA #IMPLIED>
    <!ATTLIST foreignObject class CDATA #IMPLIED>
    <!ATTLIST foreignObject enable-background CDATA #IMPLIED>
    <!ATTLIST foreignObject clip CDATA #IMPLIED>
    <!ATTLIST foreignObject overflow (visible|hidden|scroll|auto|inherit) #IMPLIED>
    <!ATTLIST foreignObject writing-mode (lr-tb|rl-tb|tb-rl|lr|rl|tb|inherit) #IMPLIED>
    <!ATTLIST foreignObject alignment-baseline (auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical|inherit) #IMPLIED>
    <!ATTLIST foreignObject baseline-shift CDATA #IMPLIED>
    <!ATTLIST foreignObject direction (ltr|rtl|inherit) #IMPLIED>
    <!ATTLIST foreignObject dominant-baseline (auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge|inherit) #IMPLIED>
    <!ATTLIST foreignObject glyph-orientation-horizontal CDATA #IMPLIED>
    <!ATTLIST foreignObject glyph-orientation-vertical CDATA #IMPLIED>
    <!ATTLIST foreignObject kerning CDATA #IMPLIED>
    <!ATTLIST foreignObject letter-spacing CDATA #IMPLIED>
    <!ATTLIST foreignObject text-anchor (start|middle|end|inherit) #IMPLIED>
    <!ATTLIST foreignObject text-decoration CDATA #IMPLIED>
    <!ATTLIST foreignObject unicode-bidi (normal|embed|bidi-override|inherit) #IMPLIED>
    <!ATTLIST foreignObject word-spacing CDATA #IMPLIED>
    <!ATTLIST foreignObject font-family CDATA #IMPLIED>
    <!ATTLIST foreignObject font-size CDATA #IMPLIED>
    <!ATTLIST foreignObject font-size-adjust CDATA #IMPLIED>
    <!ATTLIST foreignObject font-stretch (normal|wider|narrower|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|inherit) #IMPLIED>
    <!ATTLIST foreignObject font-style (normal|italic|oblique|inherit) #IMPLIED>
    <!ATTLIST foreignObject font-variant (normal|small-caps|inherit) #IMPLIED>
    <!ATTLIST foreignObject font-weight (normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit) #IMPLIED>
    <!ATTLIST foreignObject fill CDATA #IMPLIED>
    <!ATTLIST foreignObject fill-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST foreignObject stroke CDATA #IMPLIED>
    <!ATTLIST foreignObject stroke-dasharray CDATA #IMPLIED>
    <!ATTLIST foreignObject stroke-dashoffset CDATA #IMPLIED>
    <!ATTLIST foreignObject stroke-linecap (butt|round|square|inherit) #IMPLIED>
    <!ATTLIST foreignObject stroke-linejoin (miter|round|bevel|inherit) #IMPLIED>
    <!ATTLIST foreignObject stroke-miterlimit CDATA #IMPLIED>
    <!ATTLIST foreignObject stroke-width CDATA #IMPLIED>
    <!ATTLIST foreignObject color CDATA #IMPLIED>
    <!ATTLIST foreignObject color-interpolation (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST foreignObject color-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST foreignObject opacity CDATA #IMPLIED>
    <!ATTLIST foreignObject fill-opacity CDATA #IMPLIED>
    <!ATTLIST foreignObject stroke-opacity CDATA #IMPLIED>
    <!ATTLIST foreignObject display (inline|block|list-item|run-in|compact|marker|table|inline-table|table-row-group|table-header-group|table-footer-group|table-row|table-column-group|table-column|table-cell|table-caption|none|inherit) #IMPLIED>
    <!ATTLIST foreignObject image-rendering (auto|optimizeSpeed|optimizeQuality|inherit) #IMPLIED>
    <!ATTLIST foreignObject pointer-events (visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|none|inherit) #IMPLIED>
    <!ATTLIST foreignObject shape-rendering (auto|optimizeSpeed|crispEdges|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST foreignObject text-rendering (auto|optimizeSpeed|optimizeLegibility|geometricPrecision|inherit) #IMPLIED>
    <!ATTLIST foreignObject visibility (visible|hidden|inherit) #IMPLIED>
    <!ATTLIST foreignObject marker-start CDATA #IMPLIED>
    <!ATTLIST foreignObject marker-mid CDATA #IMPLIED>
    <!ATTLIST foreignObject marker-end CDATA #IMPLIED>
    <!ATTLIST foreignObject color-profile CDATA #IMPLIED>
    <!ATTLIST foreignObject stop-color CDATA #IMPLIED>
    <!ATTLIST foreignObject stop-opacity CDATA #IMPLIED>
    <!ATTLIST foreignObject clip-path CDATA #IMPLIED>
    <!ATTLIST foreignObject clip-rule (nonzero|evenodd|inherit) #IMPLIED>
    <!ATTLIST foreignObject mask CDATA #IMPLIED>
    <!ATTLIST foreignObject filter CDATA #IMPLIED>
    <!ATTLIST foreignObject color-interpolation-filters (auto|sRGB|linearRGB|inherit) #IMPLIED>
    <!ATTLIST foreignObject cursor CDATA #IMPLIED>
    <!ATTLIST foreignObject flood-color CDATA #IMPLIED>
    <!ATTLIST foreignObject flood-opacity CDATA #IMPLIED>
    <!ATTLIST foreignObject lighting-color CDATA #IMPLIED>
    <!ATTLIST foreignObject onfocusin CDATA #IMPLIED>
    <!ATTLIST foreignObject onfocusout CDATA #IMPLIED>
    <!ATTLIST foreignObject onactivate CDATA #IMPLIED>
    <!ATTLIST foreignObject onclick CDATA #IMPLIED>
    <!ATTLIST foreignObject onmousedown CDATA #IMPLIED>
    <!ATTLIST foreignObject onmouseup CDATA #IMPLIED>
    <!ATTLIST foreignObject onmouseover CDATA #IMPLIED>
    <!ATTLIST foreignObject onmousemove CDATA #IMPLIED>
    <!ATTLIST foreignObject onmouseout CDATA #IMPLIED>
    <!ATTLIST foreignObject onload CDATA #IMPLIED>
    <!ATTLIST foreignObject externalResourcesRequired (false|true) #IMPLIED>
    <!ATTLIST foreignObject x CDATA #IMPLIED>
    <!ATTLIST foreignObject y CDATA #IMPLIED>
    <!ATTLIST foreignObject width CDATA #REQUIRED>
    <!ATTLIST foreignObject height CDATA #REQUIRED>
    <!ATTLIST foreignObject transform CDATA #IMPLIED>
    
    